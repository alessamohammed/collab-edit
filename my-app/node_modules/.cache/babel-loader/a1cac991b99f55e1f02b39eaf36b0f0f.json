{"ast":null,"code":"\"use strict\";\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.JsonCrypt = void 0;\n\nvar node_rsa_1 = __importDefault(require(\"node-rsa\"));\n\nvar JsonCrypt =\n/** @class */\nfunction () {\n  function JsonCrypt() {\n    var _this = this;\n\n    this.SetRsaPublicKey = function (key) {\n      _this.RsaPublicKey = new node_rsa_1.default();\n\n      _this.RsaPublicKey.importKey(key);\n    };\n\n    this.SetRsaPrivateKey = function (key) {\n      _this.RsaPrivateKey = new node_rsa_1.default();\n\n      _this.RsaPrivateKey.importKey(key);\n    }; // Value Will be Converted to String Before Encryption\n\n\n    this.EncryptValue = function (t) {\n      return _this.RsaPublicKey.encrypt(t + '', 'base64');\n    }; // Value will be Retrived as String\n\n\n    this.DecryptValue = function (t) {\n      return _this.RsaPrivateKey.decrypt(t + '', 'utf8');\n    };\n\n    this.EncryptJson = function (JsonObject) {\n      if (!_this.RsaPublicKey) throw new Error(\"RsaPublicKey Can't Be Null\");\n      var EncryptedObject = {};\n      var value = JSON.stringify(JsonObject);\n      var FinalJsonObject = {\n        value: value\n      }; // Before Encrypt The ObjStructure will be { value : JSONStringifiedString }\n\n      Object.keys(FinalJsonObject).forEach(function (key) {\n        return EncryptedObject[_this.EncryptValue(key)] = _this.EncryptValue(FinalJsonObject[key]);\n      }); // After Encrypt The ObjStructure will be { ENC ('value') : ENC ('JSONStringifiedString') }\n\n      return EncryptedObject;\n    };\n\n    this.DecryptJson = function (JsonObject) {\n      if (!_this.RsaPrivateKey) throw new Error(\"RsaPrivateKey Can't Be Null\");\n      var DecryptedObject = {\n        value: null\n      }; // Before Decrypt The ObjStructure will be { ENC ('value') : ENC ('JSONStringifiedString') }\n\n      Object.keys(JsonObject).forEach(function (key) {\n        return DecryptedObject[_this.DecryptValue(key)] = _this.DecryptValue(JsonObject[key]);\n      }); // After Decrypt The ObjStructure will be { value : JSONStringifiedString }\n\n      return JSON.parse(DecryptedObject.value);\n    };\n  }\n\n  return JsonCrypt;\n}();\n\nexports.JsonCrypt = JsonCrypt;","map":{"version":3,"sources":["../src/index.ts"],"names":[],"mappings":";;;;;;;;;;;;;AAAA,IAAA,UAAA,GAAA,eAAA,CAAA,OAAA,CAAA,UAAA,CAAA,CAAA;;AACA,IAAA,SAAA;AAAA;AAAA,YAAA;AAAA,WAAA,SAAA,GAAA;AAAA,QAAA,KAAA,GAAA,IAAA;;AAIS,SAAA,eAAA,GAAkB,UAAC,GAAD,EAAY;AACnC,MAAA,KAAI,CAAC,YAAL,GAAoB,IAAI,UAAA,CAAA,OAAJ,EAApB;;AACA,MAAA,KAAI,CAAC,YAAL,CAAkB,SAAlB,CAA4B,GAA5B;AACD,KAHM;;AAIA,SAAA,gBAAA,GAAmB,UAAC,GAAD,EAAY;AACpC,MAAA,KAAI,CAAC,aAAL,GAAqB,IAAI,UAAA,CAAA,OAAJ,EAArB;;AACA,MAAA,KAAI,CAAC,aAAL,CAAmB,SAAnB,CAA6B,GAA7B;AACD,KAHM,CART,CAaE;;;AACQ,SAAA,YAAA,GAAe,UAAC,CAAD,EAAO;AAAK,aAAA,KAAI,CAAC,YAAL,CAAkB,OAAlB,CAA0B,CAAC,GAAG,EAA9B,EAAA,QAAA,CAAA;AAA2C,KAAtE,CAdV,CAeE;;;AACQ,SAAA,YAAA,GAAe,UAAC,CAAD,EAAO;AAAK,aAAA,KAAI,CAAC,aAAL,CAAmB,OAAnB,CAA2B,CAAC,GAAG,EAA/B,EAAA,MAAA,CAAA;AAA0C,KAArE;;AAED,SAAA,WAAA,GAAc,UAAC,UAAD,EAAmB;AACtC,UAAI,CAAC,KAAI,CAAC,YAAV,EAAwB,MAAM,IAAI,KAAJ,CAAU,4BAAV,CAAN;AACxB,UAAM,eAAe,GAAW,EAAhC;AACA,UAAM,KAAK,GAAG,IAAI,CAAC,SAAL,CAAe,UAAf,CAAd;AACA,UAAM,eAAe,GAAG;AAAE,QAAA,KAAK,EAAA;AAAP,OAAxB,CAJsC,CAKtC;;AACA,MAAA,MAAM,CAAC,IAAP,CAAY,eAAZ,EAA6B,OAA7B,CACE,UAAC,GAAD,EAAI;AAAK,eAAC,eAAe,CAAC,KAAI,CAAC,YAAL,CAAkB,GAAlB,CAAD,CAAf,GAA0C,KAAI,CAAC,YAAL,CAAkB,eAAe,CAA5E,GAA4E,CAAjC,CAA3C;AAAmF,OAD9F,EANsC,CAStC;;AACA,aAAO,eAAP;AACD,KAXM;;AAaA,SAAA,WAAA,GAAc,UAAa,UAAb,EAA+B;AAClD,UAAI,CAAC,KAAI,CAAC,aAAV,EAAyB,MAAM,IAAI,KAAJ,CAAU,6BAAV,CAAN;AACzB,UAAM,eAAe,GAAsB;AAAE,QAAA,KAAK,EAAE;AAAT,OAA3C,CAFkD,CAGlD;;AACA,MAAA,MAAM,CAAC,IAAP,CAAY,UAAZ,EAAwB,OAAxB,CACE,UAAC,GAAD,EAAI;AAAK,eAAC,eAAe,CAAC,KAAI,CAAC,YAAL,CAAkB,GAAlB,CAAD,CAAf,GAA0C,KAAI,CAAC,YAAL,CAAkB,UAAU,CAAvE,GAAuE,CAA5B,CAA3C;AAA8E,OADzF,EAJkD,CAOlD;;AACA,aAAO,IAAI,CAAC,KAAL,CAAW,eAAe,CAAC,KAA3B,CAAP;AACD,KATM;AAUR;;AAAD,SAAA,SAAA;AAAC,CAzCD,EAAA;;AAAa,OAAA,CAAA,SAAA,GAAA,SAAA","sourceRoot":"","sourcesContent":["\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.JsonCrypt = void 0;\nvar node_rsa_1 = __importDefault(require(\"node-rsa\"));\nvar JsonCrypt = /** @class */ (function () {\n    function JsonCrypt() {\n        var _this = this;\n        this.SetRsaPublicKey = function (key) {\n            _this.RsaPublicKey = new node_rsa_1.default();\n            _this.RsaPublicKey.importKey(key);\n        };\n        this.SetRsaPrivateKey = function (key) {\n            _this.RsaPrivateKey = new node_rsa_1.default();\n            _this.RsaPrivateKey.importKey(key);\n        };\n        // Value Will be Converted to String Before Encryption\n        this.EncryptValue = function (t) { return _this.RsaPublicKey.encrypt(t + '', 'base64'); };\n        // Value will be Retrived as String\n        this.DecryptValue = function (t) { return _this.RsaPrivateKey.decrypt(t + '', 'utf8'); };\n        this.EncryptJson = function (JsonObject) {\n            if (!_this.RsaPublicKey)\n                throw new Error(\"RsaPublicKey Can't Be Null\");\n            var EncryptedObject = {};\n            var value = JSON.stringify(JsonObject);\n            var FinalJsonObject = { value: value };\n            // Before Encrypt The ObjStructure will be { value : JSONStringifiedString }\n            Object.keys(FinalJsonObject).forEach(function (key) { return (EncryptedObject[_this.EncryptValue(key)] = _this.EncryptValue(FinalJsonObject[key])); });\n            // After Encrypt The ObjStructure will be { ENC ('value') : ENC ('JSONStringifiedString') }\n            return EncryptedObject;\n        };\n        this.DecryptJson = function (JsonObject) {\n            if (!_this.RsaPrivateKey)\n                throw new Error(\"RsaPrivateKey Can't Be Null\");\n            var DecryptedObject = { value: null };\n            // Before Decrypt The ObjStructure will be { ENC ('value') : ENC ('JSONStringifiedString') }\n            Object.keys(JsonObject).forEach(function (key) { return (DecryptedObject[_this.DecryptValue(key)] = _this.DecryptValue(JsonObject[key])); });\n            // After Decrypt The ObjStructure will be { value : JSONStringifiedString }\n            return JSON.parse(DecryptedObject.value);\n        };\n    }\n    return JsonCrypt;\n}());\nexports.JsonCrypt = JsonCrypt;\n//# sourceMappingURL=index.js.map"]},"metadata":{},"sourceType":"script"}