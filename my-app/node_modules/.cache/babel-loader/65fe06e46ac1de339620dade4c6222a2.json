{"ast":null,"code":"/*!\n * Firepad is an open-source, collaborative code and text editor. It was designed\n * to be embedded inside larger applications. Since it uses Firebase as a backend,\n * it requires no server-side code and can be added to any web app simply by\n * including a couple JavaScript files.\n *\n * Firepad 0.0.0\n * http://www.firepad.io/\n * License: MIT\n * Copyright: 2014 Firebase\n * With code from ot.js (Copyright 2012-2013 Tim Baumann)\n */\n// ***Encryption of JSON Payload***\n// Create new Instance Object of JsonCrypt\n// Load RSA PublicKey from File\n// Set RSA PublicKey in JsonCrypt Instance **Important**\n// Get/Create your input Object\n// Apply EncryptJson on inputObj and get cryptObject\n// Transmit this cryptObject over HTTP\n(function (name, definition, context) {\n  //try CommonJS, then AMD (require.js), then use global.\n  if (typeof module != 'undefined' && module.exports) module.exports = definition();else if (typeof context['define'] == 'function' && context['define']['amd']) define(definition);else context[name] = definition();\n})('Firepad', function () {\n  var firepad = firepad || {};\n  firepad.utils = {};\n\n  firepad.utils.makeEventEmitter = function (clazz, opt_allowedEVents) {\n    clazz.prototype.allowedEvents_ = opt_allowedEVents;\n\n    clazz.prototype.on = function (eventType, callback, context) {\n      this.validateEventType_(eventType);\n      this.eventListeners_ = this.eventListeners_ || {};\n      this.eventListeners_[eventType] = this.eventListeners_[eventType] || [];\n      this.eventListeners_[eventType].push({\n        callback: callback,\n        context: context\n      });\n    };\n\n    clazz.prototype.off = function (eventType, callback) {\n      this.validateEventType_(eventType);\n      this.eventListeners_ = this.eventListeners_ || {};\n      var listeners = this.eventListeners_[eventType] || [];\n\n      for (var i = 0; i < listeners.length; i++) {\n        if (listeners[i].callback === callback) {\n          listeners.splice(i, 1);\n          return;\n        }\n      }\n    };\n\n    clazz.prototype.trigger = function (eventType\n    /*, args ... */\n    ) {\n      this.eventListeners_ = this.eventListeners_ || {};\n      var listeners = this.eventListeners_[eventType] || [];\n\n      for (var i = 0; i < listeners.length; i++) {\n        listeners[i].callback.apply(listeners[i].context, Array.prototype.slice.call(arguments, 1));\n      }\n    };\n\n    clazz.prototype.validateEventType_ = function (eventType) {\n      if (this.allowedEvents_) {\n        var allowed = false;\n\n        for (var i = 0; i < this.allowedEvents_.length; i++) {\n          if (this.allowedEvents_[i] === eventType) {\n            allowed = true;\n            break;\n          }\n        }\n\n        if (!allowed) {\n          throw new Error('Unknown event \"' + eventType + '\"');\n        }\n      }\n    };\n  };\n\n  firepad.utils.elt = function (tag, content, attrs) {\n    var e = document.createElement(tag);\n\n    if (typeof content === \"string\") {\n      firepad.utils.setTextContent(e, content);\n    } else if (content) {\n      for (var i = 0; i < content.length; ++i) {\n        e.appendChild(content[i]);\n      }\n    }\n\n    for (var attr in attrs || {}) {\n      e.setAttribute(attr, attrs[attr]);\n    }\n\n    return e;\n  };\n\n  firepad.utils.setTextContent = function (e, str) {\n    e.innerHTML = \"\";\n    e.appendChild(document.createTextNode(str));\n  };\n\n  firepad.utils.on = function (emitter, type, f, capture) {\n    if (emitter.addEventListener) {\n      emitter.addEventListener(type, f, capture || false);\n    } else if (emitter.attachEvent) {\n      emitter.attachEvent(\"on\" + type, f);\n    }\n  };\n\n  firepad.utils.off = function (emitter, type, f, capture) {\n    if (emitter.removeEventListener) {\n      emitter.removeEventListener(type, f, capture || false);\n    } else if (emitter.detachEvent) {\n      emitter.detachEvent(\"on\" + type, f);\n    }\n  };\n\n  firepad.utils.preventDefault = function (e) {\n    if (e.preventDefault) {\n      e.preventDefault();\n    } else {\n      e.returnValue = false;\n    }\n  };\n\n  firepad.utils.stopPropagation = function (e) {\n    if (e.stopPropagation) {\n      e.stopPropagation();\n    } else {\n      e.cancelBubble = true;\n    }\n  };\n\n  firepad.utils.stopEvent = function (e) {\n    firepad.utils.preventDefault(e);\n    firepad.utils.stopPropagation(e);\n  };\n\n  firepad.utils.stopEventAnd = function (fn) {\n    return function (e) {\n      fn(e);\n      firepad.utils.stopEvent(e);\n      return false;\n    };\n  };\n\n  firepad.utils.trim = function (str) {\n    return str.replace(/^\\s+/g, '').replace(/\\s+$/g, '');\n  };\n\n  firepad.utils.stringEndsWith = function (str, suffix) {\n    var list = typeof suffix == 'string' ? [suffix] : suffix;\n\n    for (var i = 0; i < list.length; i++) {\n      var suffix = list[i];\n      if (str.indexOf(suffix, str.length - suffix.length) !== -1) return true;\n    }\n\n    return false;\n  };\n\n  firepad.utils.assert = function assert(b, msg) {\n    if (!b) {\n      throw new Error(msg || \"assertion error\");\n    }\n  };\n\n  firepad.utils.log = function () {\n    if (typeof console !== 'undefined' && typeof console.log !== 'undefined') {\n      var args = ['Firepad:'];\n\n      for (var i = 0; i < arguments.length; i++) {\n        args.push(arguments[i]);\n      }\n\n      console.log.apply(console, args);\n    }\n  };\n\n  var firepad = firepad || {};\n\n  firepad.Span = function () {\n    function Span(pos, length) {\n      this.pos = pos;\n      this.length = length;\n    }\n\n    Span.prototype.end = function () {\n      return this.pos + this.length;\n    };\n\n    return Span;\n  }();\n\n  var firepad = firepad || {};\n\n  firepad.TextOp = function () {\n    var utils = firepad.utils; // Operation are essentially lists of ops. There are three types of ops:\n    //\n    // * Retain ops: Advance the cursor position by a given number of characters.\n    //   Represented by positive ints.\n    // * Insert ops: Insert a given string at the current cursor position.\n    //   Represented by strings.\n    // * Delete ops: Delete the next n characters. Represented by negative ints.\n\n    function TextOp(type) {\n      this.type = type;\n      this.chars = null;\n      this.text = null;\n      this.attributes = null;\n\n      if (type === 'insert') {\n        this.text = arguments[1];\n        utils.assert(typeof this.text === 'string');\n        this.attributes = arguments[2] || {};\n        utils.assert(typeof this.attributes === 'object');\n      } else if (type === 'delete') {\n        this.chars = arguments[1];\n        utils.assert(typeof this.chars === 'number');\n      } else if (type === 'retain') {\n        this.chars = arguments[1];\n        utils.assert(typeof this.chars === 'number');\n        this.attributes = arguments[2] || {};\n        utils.assert(typeof this.attributes === 'object');\n      }\n    }\n\n    TextOp.prototype.isInsert = function () {\n      return this.type === 'insert';\n    };\n\n    TextOp.prototype.isDelete = function () {\n      return this.type === 'delete';\n    };\n\n    TextOp.prototype.isRetain = function () {\n      return this.type === 'retain';\n    };\n\n    TextOp.prototype.equals = function (other) {\n      return this.type === other.type && this.text === other.text && this.chars === other.chars && this.attributesEqual(other.attributes);\n    };\n\n    TextOp.prototype.attributesEqual = function (otherAttributes) {\n      for (var attr in this.attributes) {\n        if (this.attributes[attr] !== otherAttributes[attr]) {\n          return false;\n        }\n      }\n\n      for (attr in otherAttributes) {\n        if (this.attributes[attr] !== otherAttributes[attr]) {\n          return false;\n        }\n      }\n\n      return true;\n    };\n\n    TextOp.prototype.hasEmptyAttributes = function () {\n      var empty = true;\n\n      for (var attr in this.attributes) {\n        empty = false;\n        break;\n      }\n\n      return empty;\n    };\n\n    return TextOp;\n  }();\n\n  var firepad = firepad || {};\n\n  firepad.TextOperation = function () {\n    'use strict';\n\n    var TextOp = firepad.TextOp;\n    var utils = firepad.utils; // Constructor for new operations.\n\n    function TextOperation() {\n      if (!this || this.constructor !== TextOperation) {\n        // => function was called without 'new'\n        return new TextOperation();\n      } // When an operation is applied to an input string, you can think of this as\n      // if an imaginary cursor runs over the entire string and skips over some\n      // parts, deletes some parts and inserts characters at some positions. These\n      // actions (skip/delete/insert) are stored as an array in the \"ops\" property.\n\n\n      this.ops = []; // An operation's baseLength is the length of every string the operation\n      // can be applied to.\n\n      this.baseLength = 0; // The targetLength is the length of every string that results from applying\n      // the operation on a valid input string.\n\n      this.targetLength = 0;\n    }\n\n    TextOperation.prototype.equals = function (other) {\n      if (this.baseLength !== other.baseLength) {\n        return false;\n      }\n\n      if (this.targetLength !== other.targetLength) {\n        return false;\n      }\n\n      if (this.ops.length !== other.ops.length) {\n        return false;\n      }\n\n      for (var i = 0; i < this.ops.length; i++) {\n        if (!this.ops[i].equals(other.ops[i])) {\n          return false;\n        }\n      }\n\n      return true;\n    }; // After an operation is constructed, the user of the library can specify the\n    // actions of an operation (skip/insert/delete) with these three builder\n    // methods. They all return the operation for convenient chaining.\n    // Skip over a given number of characters.\n\n\n    TextOperation.prototype.retain = function (n, attributes) {\n      if (typeof n !== 'number' || n < 0) {\n        throw new Error(\"retain expects a positive integer.\");\n      }\n\n      if (n === 0) {\n        return this;\n      }\n\n      this.baseLength += n;\n      this.targetLength += n;\n      attributes = attributes || {};\n      var prevOp = this.ops.length > 0 ? this.ops[this.ops.length - 1] : null;\n\n      if (prevOp && prevOp.isRetain() && prevOp.attributesEqual(attributes)) {\n        // The last op is a retain op with the same attributes => we can merge them into one op.\n        prevOp.chars += n;\n      } else {\n        // Create a new op.\n        this.ops.push(new TextOp('retain', n, attributes));\n      }\n\n      return this;\n    }; // Insert a string at the current position.\n\n\n    TextOperation.prototype.insert = function (str, attributes) {\n      if (typeof str !== 'string') {\n        throw new Error(\"insert expects a string\");\n      }\n\n      if (str === '') {\n        return this;\n      }\n\n      attributes = attributes || {};\n      this.targetLength += str.length;\n      var prevOp = this.ops.length > 0 ? this.ops[this.ops.length - 1] : null;\n      var prevPrevOp = this.ops.length > 1 ? this.ops[this.ops.length - 2] : null;\n\n      if (prevOp && prevOp.isInsert() && prevOp.attributesEqual(attributes)) {\n        // Merge insert op.\n        prevOp.text += str;\n      } else if (prevOp && prevOp.isDelete()) {\n        // It doesn't matter when an operation is applied whether the operation\n        // is delete(3), insert(\"something\") or insert(\"something\"), delete(3).\n        // Here we enforce that in this case, the insert op always comes first.\n        // This makes all operations that have the same effect when applied to\n        // a document of the right length equal in respect to the `equals` method.\n        if (prevPrevOp && prevPrevOp.isInsert() && prevPrevOp.attributesEqual(attributes)) {\n          prevPrevOp.text += str;\n        } else {\n          this.ops[this.ops.length - 1] = new TextOp('insert', str, attributes);\n          this.ops.push(prevOp);\n        }\n      } else {\n        this.ops.push(new TextOp('insert', str, attributes));\n      }\n\n      return this;\n    }; // Delete a string at the current position.\n\n\n    TextOperation.prototype['delete'] = function (n) {\n      if (typeof n === 'string') {\n        n = n.length;\n      }\n\n      if (typeof n !== 'number' || n < 0) {\n        throw new Error(\"delete expects a positive integer or a string\");\n      }\n\n      if (n === 0) {\n        return this;\n      }\n\n      this.baseLength += n;\n      var prevOp = this.ops.length > 0 ? this.ops[this.ops.length - 1] : null;\n\n      if (prevOp && prevOp.isDelete()) {\n        prevOp.chars += n;\n      } else {\n        this.ops.push(new TextOp('delete', n));\n      }\n\n      return this;\n    }; // Tests whether this operation has no effect.\n\n\n    TextOperation.prototype.isNoop = function () {\n      return this.ops.length === 0 || this.ops.length === 1 && this.ops[0].isRetain() && this.ops[0].hasEmptyAttributes();\n    };\n\n    TextOperation.prototype.clone = function () {\n      var clone = new TextOperation();\n\n      for (var i = 0; i < this.ops.length; i++) {\n        if (this.ops[i].isRetain()) {\n          clone.retain(this.ops[i].chars, this.ops[i].attributes);\n        } else if (this.ops[i].isInsert()) {\n          clone.insert(this.ops[i].text, this.ops[i].attributes);\n        } else {\n          clone['delete'](this.ops[i].chars);\n        }\n      }\n\n      return clone;\n    }; // Pretty printing.\n\n\n    TextOperation.prototype.toString = function () {\n      // map: build a new array by applying a function to every element in an old\n      // array.\n      var map = Array.prototype.map || function (fn) {\n        var arr = this;\n        var newArr = [];\n\n        for (var i = 0, l = arr.length; i < l; i++) {\n          newArr[i] = fn(arr[i]);\n        }\n\n        return newArr;\n      };\n\n      return map.call(this.ops, function (op) {\n        if (op.isRetain()) {\n          return \"retain \" + op.chars;\n        } else if (op.isInsert()) {\n          return \"insert '\" + op.text + \"'\";\n        } else {\n          return \"delete \" + op.chars;\n        }\n      }).join(', ');\n    }; // Converts operation into a JSON value.\n\n\n    TextOperation.prototype.toJSON = function () {\n      var ops = [];\n\n      for (var i = 0; i < this.ops.length; i++) {\n        // We prefix ops with their attributes if non-empty.\n        if (!this.ops[i].hasEmptyAttributes()) {\n          ops.push(this.ops[i].attributes);\n        }\n\n        if (this.ops[i].type === 'retain') {\n          ops.push(this.ops[i].chars);\n        } else if (this.ops[i].type === 'insert') {\n          ops.push(this.ops[i].text);\n        } else if (this.ops[i].type === 'delete') {\n          ops.push(-this.ops[i].chars);\n        }\n      } // Return an array with /something/ in it, since an empty array will be treated as null by Firebase.\n\n\n      if (ops.length === 0) {\n        ops.push(0);\n      }\n\n      return ops;\n    }; // Converts a plain JS object into an operation and validates it.\n\n\n    TextOperation.fromJSON = function (ops) {\n      var o = new TextOperation();\n\n      for (var i = 0, l = ops.length; i < l; i++) {\n        var op = ops[i];\n        var attributes = {};\n\n        if (typeof op === 'object') {\n          attributes = op;\n          i++;\n          op = ops[i];\n        }\n\n        if (typeof op === 'number') {\n          if (op > 0) {\n            o.retain(op, attributes);\n          } else {\n            o['delete'](-op);\n          }\n        } else {\n          utils.assert(typeof op === 'string');\n          o.insert(op, attributes);\n        }\n      }\n\n      return o;\n    }; // Apply an operation to a string, returning a new string. Throws an error if\n    // there's a mismatch between the input string and the operation.\n\n\n    TextOperation.prototype.apply = function (str, oldAttributes, newAttributes) {\n      var operation = this;\n      oldAttributes = oldAttributes || [];\n      newAttributes = newAttributes || [];\n\n      if (str.length !== operation.baseLength) {\n        throw new Error(\"The operation's base length must be equal to the string's length.\");\n      }\n\n      var newStringParts = [],\n          j = 0,\n          k,\n          attr;\n      var oldIndex = 0;\n      var ops = this.ops;\n\n      for (var i = 0, l = ops.length; i < l; i++) {\n        var op = ops[i];\n\n        if (op.isRetain()) {\n          if (oldIndex + op.chars > str.length) {\n            throw new Error(\"Operation can't retain more characters than are left in the string.\");\n          } // Copy skipped part of the retained string.\n\n\n          newStringParts[j++] = str.slice(oldIndex, oldIndex + op.chars); // Copy (and potentially update) attributes for each char in retained string.\n\n          for (k = 0; k < op.chars; k++) {\n            var currAttributes = oldAttributes[oldIndex + k] || {},\n                updatedAttributes = {};\n\n            for (attr in currAttributes) {\n              updatedAttributes[attr] = currAttributes[attr];\n              utils.assert(updatedAttributes[attr] !== false);\n            }\n\n            for (attr in op.attributes) {\n              if (op.attributes[attr] === false) {\n                delete updatedAttributes[attr];\n              } else {\n                updatedAttributes[attr] = op.attributes[attr];\n              }\n\n              utils.assert(updatedAttributes[attr] !== false);\n            }\n\n            newAttributes.push(updatedAttributes);\n          }\n\n          oldIndex += op.chars;\n        } else if (op.isInsert()) {\n          // Insert string.\n          newStringParts[j++] = op.text; // Insert attributes for each char.\n\n          for (k = 0; k < op.text.length; k++) {\n            var insertedAttributes = {};\n\n            for (attr in op.attributes) {\n              insertedAttributes[attr] = op.attributes[attr];\n              utils.assert(insertedAttributes[attr] !== false);\n            }\n\n            newAttributes.push(insertedAttributes);\n          }\n        } else {\n          // delete op\n          oldIndex += op.chars;\n        }\n      }\n\n      if (oldIndex !== str.length) {\n        throw new Error(\"The operation didn't operate on the whole string.\");\n      }\n\n      var newString = newStringParts.join('');\n      utils.assert(newString.length === newAttributes.length);\n      return newString;\n    }; // Computes the inverse of an operation. The inverse of an operation is the\n    // operation that reverts the effects of the operation, e.g. when you have an\n    // operation 'insert(\"hello \"); skip(6);' then the inverse is 'delete(\"hello \");\n    // skip(6);'. The inverse should be used for implementing undo.\n\n\n    TextOperation.prototype.invert = function (str) {\n      var strIndex = 0;\n      var inverse = new TextOperation();\n      var ops = this.ops;\n\n      for (var i = 0, l = ops.length; i < l; i++) {\n        var op = ops[i];\n\n        if (op.isRetain()) {\n          inverse.retain(op.chars);\n          strIndex += op.chars;\n        } else if (op.isInsert()) {\n          inverse['delete'](op.text.length);\n        } else {\n          // delete op\n          inverse.insert(str.slice(strIndex, strIndex + op.chars));\n          strIndex += op.chars;\n        }\n      }\n\n      return inverse;\n    }; // Compose merges two consecutive operations into one operation, that\n    // preserves the changes of both. Or, in other words, for each input string S\n    // and a pair of consecutive operations A and B,\n    // apply(apply(S, A), B) = apply(S, compose(A, B)) must hold.\n\n\n    TextOperation.prototype.compose = function (operation2) {\n      var operation1 = this;\n\n      if (operation1.targetLength !== operation2.baseLength) {\n        throw new Error(\"The base length of the second operation has to be the target length of the first operation\");\n      }\n\n      function composeAttributes(first, second, firstOpIsInsert) {\n        var merged = {},\n            attr;\n\n        for (attr in first) {\n          merged[attr] = first[attr];\n        }\n\n        for (attr in second) {\n          if (firstOpIsInsert && second[attr] === false) {\n            delete merged[attr];\n          } else {\n            merged[attr] = second[attr];\n          }\n        }\n\n        return merged;\n      }\n\n      var operation = new TextOperation(); // the combined operation\n\n      var ops1 = operation1.clone().ops,\n          ops2 = operation2.clone().ops;\n      var i1 = 0,\n          i2 = 0; // current index into ops1 respectively ops2\n\n      var op1 = ops1[i1++],\n          op2 = ops2[i2++]; // current ops\n\n      var attributes;\n\n      while (true) {\n        // Dispatch on the type of op1 and op2\n        if (typeof op1 === 'undefined' && typeof op2 === 'undefined') {\n          // end condition: both ops1 and ops2 have been processed\n          break;\n        }\n\n        if (op1 && op1.isDelete()) {\n          operation['delete'](op1.chars);\n          op1 = ops1[i1++];\n          continue;\n        }\n\n        if (op2 && op2.isInsert()) {\n          operation.insert(op2.text, op2.attributes);\n          op2 = ops2[i2++];\n          continue;\n        }\n\n        if (typeof op1 === 'undefined') {\n          throw new Error(\"Cannot compose operations: first operation is too short.\");\n        }\n\n        if (typeof op2 === 'undefined') {\n          throw new Error(\"Cannot compose operations: first operation is too long.\");\n        }\n\n        if (op1.isRetain() && op2.isRetain()) {\n          attributes = composeAttributes(op1.attributes, op2.attributes);\n\n          if (op1.chars > op2.chars) {\n            operation.retain(op2.chars, attributes);\n            op1.chars -= op2.chars;\n            op2 = ops2[i2++];\n          } else if (op1.chars === op2.chars) {\n            operation.retain(op1.chars, attributes);\n            op1 = ops1[i1++];\n            op2 = ops2[i2++];\n          } else {\n            operation.retain(op1.chars, attributes);\n            op2.chars -= op1.chars;\n            op1 = ops1[i1++];\n          }\n        } else if (op1.isInsert() && op2.isDelete()) {\n          if (op1.text.length > op2.chars) {\n            op1.text = op1.text.slice(op2.chars);\n            op2 = ops2[i2++];\n          } else if (op1.text.length === op2.chars) {\n            op1 = ops1[i1++];\n            op2 = ops2[i2++];\n          } else {\n            op2.chars -= op1.text.length;\n            op1 = ops1[i1++];\n          }\n        } else if (op1.isInsert() && op2.isRetain()) {\n          attributes = composeAttributes(op1.attributes, op2.attributes,\n          /*firstOpIsInsert=*/\n          true);\n\n          if (op1.text.length > op2.chars) {\n            operation.insert(op1.text.slice(0, op2.chars), attributes);\n            op1.text = op1.text.slice(op2.chars);\n            op2 = ops2[i2++];\n          } else if (op1.text.length === op2.chars) {\n            operation.insert(op1.text, attributes);\n            op1 = ops1[i1++];\n            op2 = ops2[i2++];\n          } else {\n            operation.insert(op1.text, attributes);\n            op2.chars -= op1.text.length;\n            op1 = ops1[i1++];\n          }\n        } else if (op1.isRetain() && op2.isDelete()) {\n          if (op1.chars > op2.chars) {\n            operation['delete'](op2.chars);\n            op1.chars -= op2.chars;\n            op2 = ops2[i2++];\n          } else if (op1.chars === op2.chars) {\n            operation['delete'](op2.chars);\n            op1 = ops1[i1++];\n            op2 = ops2[i2++];\n          } else {\n            operation['delete'](op1.chars);\n            op2.chars -= op1.chars;\n            op1 = ops1[i1++];\n          }\n        } else {\n          throw new Error(\"This shouldn't happen: op1: \" + JSON.stringify(op1) + \", op2: \" + JSON.stringify(op2));\n        }\n      }\n\n      return operation;\n    };\n\n    function getSimpleOp(operation) {\n      var ops = operation.ops;\n\n      switch (ops.length) {\n        case 1:\n          return ops[0];\n\n        case 2:\n          return ops[0].isRetain() ? ops[1] : ops[1].isRetain() ? ops[0] : null;\n\n        case 3:\n          if (ops[0].isRetain() && ops[2].isRetain()) {\n            return ops[1];\n          }\n\n      }\n\n      return null;\n    }\n\n    function getStartIndex(operation) {\n      if (operation.ops[0].isRetain()) {\n        return operation.ops[0].chars;\n      }\n\n      return 0;\n    } // When you use ctrl-z to undo your latest changes, you expect the program not\n    // to undo every single keystroke but to undo your last sentence you wrote at\n    // a stretch or the deletion you did by holding the backspace key down. This\n    // This can be implemented by composing operations on the undo stack. This\n    // method can help decide whether two operations should be composed. It\n    // returns true if the operations are consecutive insert operations or both\n    // operations delete text at the same position. You may want to include other\n    // factors like the time since the last change in your decision.\n\n\n    TextOperation.prototype.shouldBeComposedWith = function (other) {\n      if (this.isNoop() || other.isNoop()) {\n        return true;\n      }\n\n      var startA = getStartIndex(this),\n          startB = getStartIndex(other);\n      var simpleA = getSimpleOp(this),\n          simpleB = getSimpleOp(other);\n\n      if (!simpleA || !simpleB) {\n        return false;\n      }\n\n      if (simpleA.isInsert() && simpleB.isInsert()) {\n        return startA + simpleA.text.length === startB;\n      }\n\n      if (simpleA.isDelete() && simpleB.isDelete()) {\n        // there are two possibilities to delete: with backspace and with the\n        // delete key.\n        return startB + simpleB.chars === startA || startA === startB;\n      }\n\n      return false;\n    }; // Decides whether two operations should be composed with each other\n    // if they were inverted, that is\n    // `shouldBeComposedWith(a, b) = shouldBeComposedWithInverted(b^{-1}, a^{-1})`.\n\n\n    TextOperation.prototype.shouldBeComposedWithInverted = function (other) {\n      if (this.isNoop() || other.isNoop()) {\n        return true;\n      }\n\n      var startA = getStartIndex(this),\n          startB = getStartIndex(other);\n      var simpleA = getSimpleOp(this),\n          simpleB = getSimpleOp(other);\n\n      if (!simpleA || !simpleB) {\n        return false;\n      }\n\n      if (simpleA.isInsert() && simpleB.isInsert()) {\n        return startA + simpleA.text.length === startB || startA === startB;\n      }\n\n      if (simpleA.isDelete() && simpleB.isDelete()) {\n        return startB + simpleB.chars === startA;\n      }\n\n      return false;\n    };\n\n    TextOperation.transformAttributes = function (attributes1, attributes2) {\n      var attributes1prime = {},\n          attributes2prime = {};\n      var attr,\n          allAttrs = {};\n\n      for (attr in attributes1) {\n        allAttrs[attr] = true;\n      }\n\n      for (attr in attributes2) {\n        allAttrs[attr] = true;\n      }\n\n      for (attr in allAttrs) {\n        var attr1 = attributes1[attr],\n            attr2 = attributes2[attr];\n        utils.assert(attr1 != null || attr2 != null);\n\n        if (attr1 == null) {\n          // Only modified by attributes2; keep it.\n          attributes2prime[attr] = attr2;\n        } else if (attr2 == null) {\n          // only modified by attributes1; keep it\n          attributes1prime[attr] = attr1;\n        } else if (attr1 === attr2) {// Both set it to the same value.  Nothing to do.\n        } else {\n          // attr1 and attr2 are different. Prefer attr1.\n          attributes1prime[attr] = attr1;\n        }\n      }\n\n      return [attributes1prime, attributes2prime];\n    }; // Transform takes two operations A and B that happened concurrently and\n    // produces two operations A' and B' (in an array) such that\n    // `apply(apply(S, A), B') = apply(apply(S, B), A')`. This function is the\n    // heart of OT.\n\n\n    TextOperation.transform = function (operation1, operation2) {\n      if (operation1.baseLength !== operation2.baseLength) {\n        throw new Error(\"Both operations have to have the same base length\");\n      }\n\n      var operation1prime = new TextOperation();\n      var operation2prime = new TextOperation();\n      var ops1 = operation1.clone().ops,\n          ops2 = operation2.clone().ops;\n      var i1 = 0,\n          i2 = 0;\n      var op1 = ops1[i1++],\n          op2 = ops2[i2++];\n\n      while (true) {\n        // At every iteration of the loop, the imaginary cursor that both\n        // operation1 and operation2 have that operates on the input string must\n        // have the same position in the input string.\n        if (typeof op1 === 'undefined' && typeof op2 === 'undefined') {\n          // end condition: both ops1 and ops2 have been processed\n          break;\n        } // next two cases: one or both ops are insert ops\n        // => insert the string in the corresponding prime operation, skip it in\n        // the other one. If both op1 and op2 are insert ops, prefer op1.\n\n\n        if (op1 && op1.isInsert()) {\n          operation1prime.insert(op1.text, op1.attributes);\n          operation2prime.retain(op1.text.length);\n          op1 = ops1[i1++];\n          continue;\n        }\n\n        if (op2 && op2.isInsert()) {\n          operation1prime.retain(op2.text.length);\n          operation2prime.insert(op2.text, op2.attributes);\n          op2 = ops2[i2++];\n          continue;\n        }\n\n        if (typeof op1 === 'undefined') {\n          throw new Error(\"Cannot transform operations: first operation is too short.\");\n        }\n\n        if (typeof op2 === 'undefined') {\n          throw new Error(\"Cannot transform operations: first operation is too long.\");\n        }\n\n        var minl;\n\n        if (op1.isRetain() && op2.isRetain()) {\n          // Simple case: retain/retain\n          var attributesPrime = TextOperation.transformAttributes(op1.attributes, op2.attributes);\n\n          if (op1.chars > op2.chars) {\n            minl = op2.chars;\n            op1.chars -= op2.chars;\n            op2 = ops2[i2++];\n          } else if (op1.chars === op2.chars) {\n            minl = op2.chars;\n            op1 = ops1[i1++];\n            op2 = ops2[i2++];\n          } else {\n            minl = op1.chars;\n            op2.chars -= op1.chars;\n            op1 = ops1[i1++];\n          }\n\n          operation1prime.retain(minl, attributesPrime[0]);\n          operation2prime.retain(minl, attributesPrime[1]);\n        } else if (op1.isDelete() && op2.isDelete()) {\n          // Both operations delete the same string at the same position. We don't\n          // need to produce any operations, we just skip over the delete ops and\n          // handle the case that one operation deletes more than the other.\n          if (op1.chars > op2.chars) {\n            op1.chars -= op2.chars;\n            op2 = ops2[i2++];\n          } else if (op1.chars === op2.chars) {\n            op1 = ops1[i1++];\n            op2 = ops2[i2++];\n          } else {\n            op2.chars -= op1.chars;\n            op1 = ops1[i1++];\n          } // next two cases: delete/retain and retain/delete\n\n        } else if (op1.isDelete() && op2.isRetain()) {\n          if (op1.chars > op2.chars) {\n            minl = op2.chars;\n            op1.chars -= op2.chars;\n            op2 = ops2[i2++];\n          } else if (op1.chars === op2.chars) {\n            minl = op2.chars;\n            op1 = ops1[i1++];\n            op2 = ops2[i2++];\n          } else {\n            minl = op1.chars;\n            op2.chars -= op1.chars;\n            op1 = ops1[i1++];\n          }\n\n          operation1prime['delete'](minl);\n        } else if (op1.isRetain() && op2.isDelete()) {\n          if (op1.chars > op2.chars) {\n            minl = op2.chars;\n            op1.chars -= op2.chars;\n            op2 = ops2[i2++];\n          } else if (op1.chars === op2.chars) {\n            minl = op1.chars;\n            op1 = ops1[i1++];\n            op2 = ops2[i2++];\n          } else {\n            minl = op1.chars;\n            op2.chars -= op1.chars;\n            op1 = ops1[i1++];\n          }\n\n          operation2prime['delete'](minl);\n        } else {\n          throw new Error(\"The two operations aren't compatible\");\n        }\n      }\n\n      return [operation1prime, operation2prime];\n    }; // convenience method to write transform(a, b) as a.transform(b)\n\n\n    TextOperation.prototype.transform = function (other) {\n      return TextOperation.transform(this, other);\n    };\n\n    return TextOperation;\n  }();\n\n  var firepad = firepad || {}; // TODO: Rewrite this (probably using a splay tree) to be efficient.  Right now it's based on a linked list\n  // so all operations are O(n), where n is the number of spans in the list.\n\n  firepad.AnnotationList = function () {\n    var Span = firepad.Span;\n\n    function assert(bool, text) {\n      if (!bool) {\n        throw new Error('AnnotationList assertion failed' + (text ? ': ' + text : ''));\n      }\n    }\n\n    function OldAnnotatedSpan(pos, node) {\n      this.pos = pos;\n      this.length = node.length;\n      this.annotation = node.annotation;\n      this.attachedObject_ = node.attachedObject;\n    }\n\n    OldAnnotatedSpan.prototype.getAttachedObject = function () {\n      return this.attachedObject_;\n    };\n\n    function NewAnnotatedSpan(pos, node) {\n      this.pos = pos;\n      this.length = node.length;\n      this.annotation = node.annotation;\n      this.node_ = node;\n    }\n\n    NewAnnotatedSpan.prototype.attachObject = function (object) {\n      this.node_.attachedObject = object;\n    };\n\n    var NullAnnotation = {\n      equals: function () {\n        return false;\n      }\n    };\n\n    function AnnotationList(changeHandler) {\n      // There's always a head node; to avoid special cases.\n      this.head_ = new Node(0, NullAnnotation);\n      this.changeHandler_ = changeHandler;\n    }\n\n    AnnotationList.prototype.insertAnnotatedSpan = function (span, annotation) {\n      this.wrapOperation_(new Span(span.pos, 0), function (oldPos, old) {\n        assert(!old || old.next === null); // should be 0 or 1 nodes.\n\n        var toInsert = new Node(span.length, annotation);\n\n        if (!old) {\n          return toInsert;\n        } else {\n          assert(span.pos > oldPos && span.pos < oldPos + old.length);\n          var newNodes = new Node(0, NullAnnotation); // Insert part of old before insertion point.\n\n          newNodes.next = new Node(span.pos - oldPos, old.annotation); // Insert new node.\n\n          newNodes.next.next = toInsert; // Insert part of old after insertion point.\n\n          toInsert.next = new Node(oldPos + old.length - span.pos, old.annotation);\n          return newNodes.next;\n        }\n      });\n    };\n\n    AnnotationList.prototype.removeSpan = function (removeSpan) {\n      if (removeSpan.length === 0) {\n        return;\n      }\n\n      this.wrapOperation_(removeSpan, function (oldPos, old) {\n        assert(old !== null);\n        var newNodes = new Node(0, NullAnnotation),\n            current = newNodes; // Add new node for part before the removed span (if any).\n\n        if (removeSpan.pos > oldPos) {\n          current.next = new Node(removeSpan.pos - oldPos, old.annotation);\n          current = current.next;\n        } // Skip over removed nodes.\n\n\n        while (removeSpan.end() > oldPos + old.length) {\n          oldPos += old.length;\n          old = old.next;\n        } // Add new node for part after the removed span (if any).\n\n\n        var afterChars = oldPos + old.length - removeSpan.end();\n\n        if (afterChars > 0) {\n          current.next = new Node(afterChars, old.annotation);\n        }\n\n        return newNodes.next;\n      });\n    };\n\n    AnnotationList.prototype.updateSpan = function (span, updateFn) {\n      if (span.length === 0) {\n        return;\n      }\n\n      this.wrapOperation_(span, function (oldPos, old) {\n        assert(old !== null);\n        var newNodes = new Node(0, NullAnnotation),\n            current = newNodes,\n            currentPos = oldPos; // Add node for any characters before the span we're updating.\n\n        var beforeChars = span.pos - currentPos;\n        assert(beforeChars < old.length);\n\n        if (beforeChars > 0) {\n          current.next = new Node(beforeChars, old.annotation);\n          current = current.next;\n          currentPos += current.length;\n        } // Add updated nodes for entirely updated nodes.\n\n\n        while (old !== null && span.end() >= oldPos + old.length) {\n          var length = oldPos + old.length - currentPos;\n          current.next = new Node(length, updateFn(old.annotation, length));\n          current = current.next;\n          oldPos += old.length;\n          old = old.next;\n          currentPos = oldPos;\n        } // Add updated nodes for last node.\n\n\n        var updateChars = span.end() - currentPos;\n\n        if (updateChars > 0) {\n          assert(updateChars < old.length);\n          current.next = new Node(updateChars, updateFn(old.annotation, updateChars));\n          current = current.next;\n          currentPos += current.length; // Add non-updated remaining part of node.\n\n          current.next = new Node(oldPos + old.length - currentPos, old.annotation);\n        }\n\n        return newNodes.next;\n      });\n    };\n\n    AnnotationList.prototype.wrapOperation_ = function (span, operationFn) {\n      if (span.pos < 0) {\n        throw new Error('Span start cannot be negative.');\n      }\n\n      var oldNodes = [],\n          newNodes = [];\n      var res = this.getAffectedNodes_(span);\n      var tail;\n\n      if (res.start !== null) {\n        tail = res.end.next; // Temporarily truncate list so we can pass it to operationFn.  We'll splice it back in later.\n\n        res.end.next = null;\n      } else {\n        // start and end are null, because span is empty and lies on the border of two nodes.\n        tail = res.succ;\n      } // Create a new segment to replace the affected nodes.\n\n\n      var newSegment = operationFn(res.startPos, res.start);\n      var includePredInOldNodes = false,\n          includeSuccInOldNodes = false;\n\n      if (newSegment) {\n        this.mergeNodesWithSameAnnotations_(newSegment);\n        var newPos;\n\n        if (res.pred && res.pred.annotation.equals(newSegment.annotation)) {\n          // We can merge the pred node with newSegment's first node.\n          includePredInOldNodes = true;\n          newSegment.length += res.pred.length; // Splice newSegment in after beforePred.\n\n          res.beforePred.next = newSegment;\n          newPos = res.predPos;\n        } else {\n          // Splice newSegment in after beforeStart.\n          res.beforeStart.next = newSegment;\n          newPos = res.startPos;\n        } // Generate newNodes, but not the last one (since we may be able to merge it with succ).\n\n\n        while (newSegment.next) {\n          newNodes.push(new NewAnnotatedSpan(newPos, newSegment));\n          newPos += newSegment.length;\n          newSegment = newSegment.next;\n        }\n\n        if (res.succ && res.succ.annotation.equals(newSegment.annotation)) {\n          // We can merge newSegment's last node with the succ node.\n          newSegment.length += res.succ.length;\n          includeSuccInOldNodes = true; // Splice rest of list after succ after newSegment.\n\n          newSegment.next = res.succ.next;\n        } else {\n          // Splice tail after newSegment.\n          newSegment.next = tail;\n        } // Add last newSegment node to newNodes.\n\n\n        newNodes.push(new NewAnnotatedSpan(newPos, newSegment));\n      } else {\n        // newList is empty.  Try to merge pred and succ.\n        if (res.pred && res.succ && res.pred.annotation.equals(res.succ.annotation)) {\n          includePredInOldNodes = true;\n          includeSuccInOldNodes = true; // Create succ + pred merged node and splice list together.\n\n          newSegment = new Node(res.pred.length + res.succ.length, res.pred.annotation);\n          res.beforePred.next = newSegment;\n          newSegment.next = res.succ.next;\n          newNodes.push(new NewAnnotatedSpan(res.startPos - res.pred.length, newSegment));\n        } else {\n          // Just splice list back together.\n          res.beforeStart.next = tail;\n        }\n      } // Build list of oldNodes.\n\n\n      if (includePredInOldNodes) {\n        oldNodes.push(new OldAnnotatedSpan(res.predPos, res.pred));\n      }\n\n      var oldPos = res.startPos,\n          oldSegment = res.start;\n\n      while (oldSegment !== null) {\n        oldNodes.push(new OldAnnotatedSpan(oldPos, oldSegment));\n        oldPos += oldSegment.length;\n        oldSegment = oldSegment.next;\n      }\n\n      if (includeSuccInOldNodes) {\n        oldNodes.push(new OldAnnotatedSpan(oldPos, res.succ));\n      }\n\n      this.changeHandler_(oldNodes, newNodes);\n    };\n\n    AnnotationList.prototype.getAffectedNodes_ = function (span) {\n      // We want to find nodes 'start', 'end', 'beforeStart', 'pred', and 'succ' where:\n      //  - 'start' contains the first character in span.\n      //  - 'end' contains the last character in span.\n      //  - 'beforeStart' is the node before 'start'.\n      //  - 'beforePred' is the node before 'pred'.\n      //  - 'succ' contains the node after 'end' if span.end() was on a node boundary, else null.\n      //  - 'pred' contains the node before 'start' if span.pos was on a node boundary, else null.\n      var result = {};\n      var prevprev = null,\n          prev = this.head_,\n          current = prev.next,\n          currentPos = 0;\n\n      while (current !== null && span.pos >= currentPos + current.length) {\n        currentPos += current.length;\n        prevprev = prev;\n        prev = current;\n        current = current.next;\n      }\n\n      if (current === null && !(span.length === 0 && span.pos === currentPos)) {\n        throw new Error('Span start exceeds the bounds of the AnnotationList.');\n      }\n\n      result.startPos = currentPos; // Special case if span is empty and on the border of two nodes\n\n      if (span.length === 0 && span.pos === currentPos) {\n        result.start = null;\n      } else {\n        result.start = current;\n      }\n\n      result.beforeStart = prev;\n\n      if (currentPos === span.pos && currentPos > 0) {\n        result.pred = prev;\n        result.predPos = currentPos - prev.length;\n        result.beforePred = prevprev;\n      } else {\n        result.pred = null;\n      }\n\n      while (current !== null && span.end() > currentPos) {\n        currentPos += current.length;\n        prev = current;\n        current = current.next;\n      }\n\n      if (span.end() > currentPos) {\n        throw new Error('Span end exceeds the bounds of the AnnotationList.');\n      } // Special case if span is empty and on the border of two nodes.\n\n\n      if (span.length === 0 && span.end() === currentPos) {\n        result.end = null;\n      } else {\n        result.end = prev;\n      }\n\n      result.succ = currentPos === span.end() ? current : null;\n      return result;\n    };\n\n    AnnotationList.prototype.mergeNodesWithSameAnnotations_ = function (list) {\n      if (!list) {\n        return;\n      }\n\n      var prev = null,\n          curr = list;\n\n      while (curr) {\n        if (prev && prev.annotation.equals(curr.annotation)) {\n          prev.length += curr.length;\n          prev.next = curr.next;\n        } else {\n          prev = curr;\n        }\n\n        curr = curr.next;\n      }\n    };\n\n    AnnotationList.prototype.forEach = function (callback) {\n      var current = this.head_.next;\n\n      while (current !== null) {\n        callback(current.length, current.annotation, current.attachedObject);\n        current = current.next;\n      }\n    };\n\n    AnnotationList.prototype.getAnnotatedSpansForPos = function (pos) {\n      var currentPos = 0;\n      var current = this.head_.next,\n          prev = null;\n\n      while (current !== null && currentPos + current.length <= pos) {\n        currentPos += current.length;\n        prev = current;\n        current = current.next;\n      }\n\n      if (current === null && currentPos !== pos) {\n        throw new Error('pos exceeds the bounds of the AnnotationList');\n      }\n\n      var res = [];\n\n      if (currentPos === pos && prev) {\n        res.push(new OldAnnotatedSpan(currentPos - prev.length, prev));\n      }\n\n      if (current) {\n        res.push(new OldAnnotatedSpan(currentPos, current));\n      }\n\n      return res;\n    };\n\n    AnnotationList.prototype.getAnnotatedSpansForSpan = function (span) {\n      if (span.length === 0) {\n        return [];\n      }\n\n      var oldSpans = [];\n      var res = this.getAffectedNodes_(span);\n      var currentPos = res.startPos,\n          current = res.start;\n\n      while (current !== null && currentPos < span.end()) {\n        var start = Math.max(currentPos, span.pos),\n            end = Math.min(currentPos + current.length, span.end());\n        var oldSpan = new Span(start, end - start);\n        oldSpan.annotation = current.annotation;\n        oldSpans.push(oldSpan);\n        currentPos += current.length;\n        current = current.next;\n      }\n\n      return oldSpans;\n    }; // For testing.\n\n\n    AnnotationList.prototype.count = function () {\n      var count = 0;\n      var current = this.head_.next,\n          prev = null;\n\n      while (current !== null) {\n        if (prev) {\n          assert(!prev.annotation.equals(current.annotation));\n        }\n\n        prev = current;\n        current = current.next;\n        count++;\n      }\n\n      return count;\n    };\n\n    function Node(length, annotation) {\n      this.length = length;\n      this.annotation = annotation;\n      this.attachedObject = null;\n      this.next = null;\n    }\n\n    Node.prototype.clone = function () {\n      var node = new Node(this.spanLength, this.annotation);\n      node.next = this.next;\n      return node;\n    };\n\n    return AnnotationList;\n  }();\n\n  var firepad = firepad || {};\n\n  firepad.Cursor = function () {\n    'use strict'; // A cursor has a `position` and a `selectionEnd`. Both are zero-based indexes\n    // into the document. When nothing is selected, `selectionEnd` is equal to\n    // `position`. When there is a selection, `position` is always the side of the\n    // selection that would move if you pressed an arrow key.\n\n    function Cursor(position, selectionEnd) {\n      this.position = position;\n      this.selectionEnd = selectionEnd;\n    }\n\n    Cursor.fromJSON = function (obj) {\n      return new Cursor(obj.position, obj.selectionEnd);\n    };\n\n    Cursor.prototype.equals = function (other) {\n      return this.position === other.position && this.selectionEnd === other.selectionEnd;\n    }; // Return the more current cursor information.\n\n\n    Cursor.prototype.compose = function (other) {\n      return other;\n    }; // Update the cursor with respect to an operation.\n\n\n    Cursor.prototype.transform = function (other) {\n      function transformIndex(index) {\n        var newIndex = index;\n        var ops = other.ops;\n\n        for (var i = 0, l = other.ops.length; i < l; i++) {\n          if (ops[i].isRetain()) {\n            index -= ops[i].chars;\n          } else if (ops[i].isInsert()) {\n            newIndex += ops[i].text.length;\n          } else {\n            newIndex -= Math.min(index, ops[i].chars);\n            index -= ops[i].chars;\n          }\n\n          if (index < 0) {\n            break;\n          }\n        }\n\n        return newIndex;\n      }\n\n      var newPosition = transformIndex(this.position);\n\n      if (this.position === this.selectionEnd) {\n        return new Cursor(newPosition, newPosition);\n      }\n\n      return new Cursor(newPosition, transformIndex(this.selectionEnd));\n    };\n\n    return Cursor;\n  }();\n\n  var firepad = firepad || {};\n\n  firepad.FirebaseAdapter = function (global) {\n    if (typeof firebase === \"undefined\" && typeof require === 'function' && typeof Firebase !== 'function') {\n      firebase = require('firebase/app');\n\n      require('firebase/database');\n    }\n\n    var TextOperation = firepad.TextOperation;\n    var utils = firepad.utils; // Save a checkpoint every 100 edits.\n\n    var CHECKPOINT_FREQUENCY = 100;\n\n    function FirebaseAdapter(ref, userId, userColor) {\n      this.ref_ = ref;\n      this.ready_ = false;\n      this.firebaseCallbacks_ = [];\n      this.zombie_ = false; // We store the current document state as a TextOperation so we can write checkpoints to Firebase occasionally.\n      // TODO: Consider more efficient ways to do this. (composing text operations is ~linear in the length of the document).\n\n      this.document_ = new TextOperation(); // The next expected revision.\n\n      this.revision_ = 0; // This is used for two purposes:\n      // 1) On initialization, we fill this with the latest checkpoint and any subsequent operations and then\n      //      process them all together.\n      // 2) If we ever receive revisions out-of-order (e.g. rev 5 before rev 4), we queue them here until it's time\n      //    for them to be handled. [this should never happen with well-behaved clients; but if it /does/ happen we want\n      //    to handle it gracefully.]\n\n      this.pendingReceivedRevisions_ = {};\n      var self = this;\n\n      if (userId) {\n        this.setUserId(userId);\n        this.setColor(userColor);\n        var connectedRef = ref.root.child('.info/connected');\n        this.firebaseOn_(connectedRef, 'value', function (snapshot) {\n          if (snapshot.val() === true) {\n            self.initializeUserData_();\n          }\n        }, this); // Once we're initialized, start tracking users' cursors.\n\n        this.on('ready', function () {\n          self.monitorCursors_();\n        });\n      } else {\n        this.userId_ = ref.push().key;\n      } // Avoid triggering any events until our callers have had a chance to attach their listeners.\n\n\n      setTimeout(function () {\n        self.monitorHistory_();\n      }, 0);\n    }\n\n    utils.makeEventEmitter(FirebaseAdapter, ['ready', 'cursor', 'operation', 'ack', 'retry']);\n\n    FirebaseAdapter.prototype.dispose = function () {\n      var self = this;\n      this.removeFirebaseCallbacks_();\n\n      this.handleInitialRevisions_ = () => {};\n\n      if (!this.ready_) {\n        this.on('ready', function () {\n          self.dispose();\n        });\n        return;\n      }\n\n      if (this.userRef_) {\n        this.userRef_.child('cursor').remove();\n        this.userRef_.child('color').remove();\n      }\n\n      this.ref_ = null;\n      this.document_ = null;\n      this.zombie_ = true;\n    };\n\n    FirebaseAdapter.prototype.setUserId = function (userId) {\n      if (this.userRef_) {\n        // Clean up existing data.  Avoid nuking another user's data\n        // (if a future user takes our old name).\n        this.userRef_.child('cursor').remove();\n        this.userRef_.child('cursor').onDisconnect().cancel();\n        this.userRef_.child('color').remove();\n        this.userRef_.child('color').onDisconnect().cancel();\n      }\n\n      this.userId_ = userId;\n      this.userRef_ = this.ref_.child('users').child(userId);\n      this.initializeUserData_();\n    };\n\n    FirebaseAdapter.prototype.isHistoryEmpty = function () {\n      assert(this.ready_, \"Not ready yet.\");\n      return this.revision_ === 0;\n    };\n    /*\n     * Send operation, retrying on connection failure. Takes an optional callback with signature:\n     * function(error, committed).\n     * An exception will be thrown on transaction failure, which should only happen on\n     * catastrophic failure like a security rule violation.\n     */\n\n\n    FirebaseAdapter.prototype.sendOperation = function (operation, callback) {\n      var self = this; // If we're not ready yet, do nothing right now, and trigger a retry when we're ready.\n\n      if (!this.ready_) {\n        this.on('ready', function () {\n          self.trigger('retry');\n        });\n        return;\n      } // Sanity check that this operation is valid.\n\n\n      assert(this.document_.targetLength === operation.baseLength, \"sendOperation() called with invalid operation.\"); // Convert revision into an id that will sort properly lexicographically.\n\n      var revisionId = revisionToId(this.revision_);\n\n      function doTransaction(revisionId, revisionData) {\n        self.ref_.child('history').child(revisionId).transaction(function (current) {\n          if (current === null) {\n            return revisionData;\n          }\n        }, function (error, committed, snapshot) {\n          if (error) {\n            if (error.message === 'disconnect') {\n              if (self.sent_ && self.sent_.id === revisionId) {\n                // We haven't seen our transaction succeed or fail.  Send it again.\n                setTimeout(function () {\n                  doTransaction(revisionId, revisionData);\n                }, 0);\n              } else if (callback) {\n                callback(error, false);\n              }\n            } else {\n              utils.log('Transaction failure!', error);\n              throw error;\n            }\n          } else {\n            if (callback) callback(null, committed);\n          }\n        },\n        /*applyLocally=*/\n        false);\n      }\n\n      this.sent_ = {\n        id: revisionId,\n        op: operation\n      };\n\n      const {\n        JsonCrypt\n      } = require('jsoncrypt-rsa');\n\n      const fs = require('fs');\n\n      const crypt = new JsonCrypt();\n      const inputObj = operation.toJSON();\n      const cryptObject = crypt.EncryptJson(inputObj);\n      console.log(cryptObject);\n      doTransaction(revisionId, {\n        a: self.userId_,\n        o: operation.toJSON(),\n        t: firebase.database.ServerValue.TIMESTAMP\n      });\n      console.log(operation.toJSON());\n    };\n\n    FirebaseAdapter.prototype.sendCursor = function (obj) {\n      this.userRef_.child('cursor').set(obj);\n      this.cursor_ = obj;\n    };\n\n    FirebaseAdapter.prototype.setColor = function (color) {\n      this.userRef_.child('color').set(color);\n      this.color_ = color;\n    };\n\n    FirebaseAdapter.prototype.getDocument = function () {\n      return this.document_;\n    };\n\n    FirebaseAdapter.prototype.registerCallbacks = function (callbacks) {\n      for (var eventType in callbacks) {\n        this.on(eventType, callbacks[eventType]);\n      }\n    };\n\n    FirebaseAdapter.prototype.initializeUserData_ = function () {\n      this.userRef_.child('cursor').onDisconnect().remove();\n      this.userRef_.child('color').onDisconnect().remove();\n      this.sendCursor(this.cursor_ || null);\n      this.setColor(this.color_ || null);\n    };\n\n    FirebaseAdapter.prototype.monitorCursors_ = function () {\n      var usersRef = this.ref_.child('users'),\n          self = this;\n\n      function childChanged(childSnap) {\n        var userId = childSnap.key;\n        var userData = childSnap.val();\n        self.trigger('cursor', userId, userData.cursor, userData.color);\n      }\n\n      this.firebaseOn_(usersRef, 'child_added', childChanged);\n      this.firebaseOn_(usersRef, 'child_changed', childChanged);\n      this.firebaseOn_(usersRef, 'child_removed', function (childSnap) {\n        var userId = childSnap.key;\n        self.trigger('cursor', userId, null);\n      });\n    };\n\n    FirebaseAdapter.prototype.monitorHistory_ = function () {\n      var self = this; // Get the latest checkpoint as a starting point so we don't have to re-play entire history.\n\n      this.ref_.child('checkpoint').once('value', function (s) {\n        if (self.zombie_) {\n          return;\n        } // just in case we were cleaned up before we got the checkpoint data.\n\n\n        var revisionId = s.child('id').val(),\n            op = s.child('o').val(),\n            author = s.child('a').val();\n\n        if (op != null && revisionId != null && author !== null) {\n          self.pendingReceivedRevisions_[revisionId] = {\n            o: op,\n            a: author\n          };\n          self.checkpointRevision_ = revisionFromId(revisionId);\n          self.monitorHistoryStartingAt_(self.checkpointRevision_ + 1);\n        } else {\n          self.checkpointRevision_ = 0;\n          self.monitorHistoryStartingAt_(self.checkpointRevision_);\n        }\n      });\n    };\n\n    FirebaseAdapter.prototype.monitorHistoryStartingAt_ = function (revision) {\n      var historyRef = this.ref_.child('history').startAt(null, revisionToId(revision));\n      var self = this;\n      setTimeout(function () {\n        self.firebaseOn_(historyRef, 'child_added', function (revisionSnapshot) {\n          var revisionId = revisionSnapshot.key;\n          self.pendingReceivedRevisions_[revisionId] = revisionSnapshot.val();\n\n          if (self.ready_) {\n            self.handlePendingReceivedRevisions_();\n          }\n        });\n        historyRef.once('value', function () {\n          self.handleInitialRevisions_();\n        });\n      }, 0);\n    };\n\n    FirebaseAdapter.prototype.handleInitialRevisions_ = function () {\n      assert(!this.ready_, \"Should not be called multiple times.\"); // Compose the checkpoint and all subsequent revisions into a single operation to apply at once.\n\n      this.revision_ = this.checkpointRevision_;\n      var revisionId = revisionToId(this.revision_),\n          pending = this.pendingReceivedRevisions_;\n\n      while (pending[revisionId] != null) {\n        var revision = this.parseRevision_(pending[revisionId]);\n\n        if (!revision) {\n          // If a misbehaved client adds a bad operation, just ignore it.\n          utils.log('Invalid operation.', this.ref_.toString(), revisionId, pending[revisionId]);\n        } else {\n          this.document_ = this.document_.compose(revision.operation);\n        }\n\n        delete pending[revisionId];\n        this.revision_++;\n        revisionId = revisionToId(this.revision_);\n      }\n\n      this.trigger('operation', this.document_);\n      this.ready_ = true;\n      var self = this;\n      setTimeout(function () {\n        self.trigger('ready');\n      }, 0);\n    };\n\n    FirebaseAdapter.prototype.handlePendingReceivedRevisions_ = function () {\n      var pending = this.pendingReceivedRevisions_;\n      var revisionId = revisionToId(this.revision_);\n      var triggerRetry = false;\n\n      while (pending[revisionId] != null) {\n        this.revision_++;\n        var revision = this.parseRevision_(pending[revisionId]);\n\n        if (!revision) {\n          // If a misbehaved client adds a bad operation, just ignore it.\n          utils.log('Invalid operation.', this.ref_.toString(), revisionId, pending[revisionId]);\n        } else {\n          this.document_ = this.document_.compose(revision.operation);\n\n          if (this.sent_ && revisionId === this.sent_.id) {\n            // We have an outstanding change at this revision id.\n            if (this.sent_.op.equals(revision.operation) && revision.author === this.userId_) {\n              // This is our change; it succeeded.\n              if (this.revision_ % CHECKPOINT_FREQUENCY === 0) {\n                this.saveCheckpoint_();\n              }\n\n              this.sent_ = null;\n              this.trigger('ack');\n            } else {\n              // our op failed.  Trigger a retry after we're done catching up on any incoming ops.\n              triggerRetry = true;\n              this.trigger('operation', revision.operation);\n            }\n          } else {\n            this.trigger('operation', revision.operation);\n          }\n        }\n\n        delete pending[revisionId];\n        revisionId = revisionToId(this.revision_);\n      }\n\n      if (triggerRetry) {\n        this.sent_ = null;\n        this.trigger('retry');\n      }\n    };\n\n    FirebaseAdapter.prototype.parseRevision_ = function (data) {\n      // We could do some of this validation via security rules.  But it's nice to be robust, just in case.\n      if (typeof data !== 'object') {\n        return null;\n      }\n\n      if (typeof data.a !== 'string' || typeof data.o !== 'object') {\n        return null;\n      }\n\n      var op = null;\n\n      try {\n        op = TextOperation.fromJSON(data.o);\n      } catch (e) {\n        return null;\n      }\n\n      if (op.baseLength !== this.document_.targetLength) {\n        return null;\n      }\n\n      return {\n        author: data.a,\n        operation: op\n      };\n    };\n\n    FirebaseAdapter.prototype.saveCheckpoint_ = function () {\n      this.ref_.child('checkpoint').set({\n        a: this.userId_,\n        o: this.document_.toJSON(),\n        id: revisionToId(this.revision_ - 1) // use the id for the revision we just wrote.\n\n      });\n    };\n\n    FirebaseAdapter.prototype.firebaseOn_ = function (ref, eventType, callback, context) {\n      this.firebaseCallbacks_.push({\n        ref: ref,\n        eventType: eventType,\n        callback: callback,\n        context: context\n      });\n      ref.on(eventType, callback, context);\n      return callback;\n    };\n\n    FirebaseAdapter.prototype.firebaseOff_ = function (ref, eventType, callback, context) {\n      ref.off(eventType, callback, context);\n\n      for (var i = 0; i < this.firebaseCallbacks_.length; i++) {\n        var l = this.firebaseCallbacks_[i];\n\n        if (l.ref === ref && l.eventType === eventType && l.callback === callback && l.context === context) {\n          this.firebaseCallbacks_.splice(i, 1);\n          break;\n        }\n      }\n    };\n\n    FirebaseAdapter.prototype.removeFirebaseCallbacks_ = function () {\n      for (var i = 0; i < this.firebaseCallbacks_.length; i++) {\n        var l = this.firebaseCallbacks_[i];\n        l.ref.off(l.eventType, l.callback, l.context);\n      }\n\n      this.firebaseCallbacks_ = [];\n    }; // Throws an error if the first argument is falsy. Useful for debugging.\n\n\n    function assert(b, msg) {\n      if (!b) {\n        throw new Error(msg || \"assertion error\");\n      }\n    } // Based off ideas from http://www.zanopha.com/docs/elen.pdf\n\n\n    var characters = '0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz';\n\n    function revisionToId(revision) {\n      if (revision === 0) {\n        return 'A0';\n      }\n\n      var str = '';\n\n      while (revision > 0) {\n        var digit = revision % characters.length;\n        str = characters[digit] + str;\n        revision -= digit;\n        revision /= characters.length;\n      } // Prefix with length (starting at 'A' for length 1) to ensure the id's sort lexicographically.\n\n\n      var prefix = characters[str.length + 9];\n      return prefix + str;\n    }\n\n    function revisionFromId(revisionId) {\n      assert(revisionId.length > 0 && revisionId[0] === characters[revisionId.length + 8]);\n      var revision = 0;\n\n      for (var i = 1; i < revisionId.length; i++) {\n        revision *= characters.length;\n        revision += characters.indexOf(revisionId[i]);\n      }\n\n      return revision;\n    }\n\n    return FirebaseAdapter;\n  }();\n\n  var firepad = firepad || {};\n\n  firepad.RichTextToolbar = function (global) {\n    var utils = firepad.utils;\n\n    function RichTextToolbar(imageInsertionUI) {\n      this.imageInsertionUI = imageInsertionUI;\n      this.element_ = this.makeElement_();\n    }\n\n    utils.makeEventEmitter(RichTextToolbar, ['bold', 'italic', 'underline', 'strike', 'font', 'font-size', 'color', 'left', 'center', 'right', 'unordered-list', 'ordered-list', 'todo-list', 'indent-increase', 'indent-decrease', 'undo', 'redo', 'insert-image']);\n\n    RichTextToolbar.prototype.element = function () {\n      return this.element_;\n    };\n\n    RichTextToolbar.prototype.makeButton_ = function (eventName, iconName) {\n      var self = this;\n      iconName = iconName || eventName;\n      var btn = utils.elt('a', [utils.elt('span', '', {\n        'class': 'firepad-tb-' + iconName\n      })], {\n        'class': 'firepad-btn'\n      });\n      utils.on(btn, 'click', utils.stopEventAnd(function () {\n        self.trigger(eventName);\n      }));\n      return btn;\n    };\n\n    RichTextToolbar.prototype.makeElement_ = function () {\n      var self = this;\n      var font = this.makeFontDropdown_();\n      var fontSize = this.makeFontSizeDropdown_();\n      var color = this.makeColorDropdown_();\n      var toolbarOptions = [utils.elt('div', [font], {\n        'class': 'firepad-btn-group'\n      }), utils.elt('div', [fontSize], {\n        'class': 'firepad-btn-group'\n      }), utils.elt('div', [color], {\n        'class': 'firepad-btn-group'\n      }), utils.elt('div', [self.makeButton_('bold'), self.makeButton_('italic'), self.makeButton_('underline'), self.makeButton_('strike', 'strikethrough')], {\n        'class': 'firepad-btn-group'\n      }), utils.elt('div', [self.makeButton_('unordered-list', 'list-2'), self.makeButton_('ordered-list', 'numbered-list'), self.makeButton_('todo-list', 'list')], {\n        'class': 'firepad-btn-group'\n      }), utils.elt('div', [self.makeButton_('indent-decrease'), self.makeButton_('indent-increase')], {\n        'class': 'firepad-btn-group'\n      }), utils.elt('div', [self.makeButton_('left', 'paragraph-left'), self.makeButton_('center', 'paragraph-center'), self.makeButton_('right', 'paragraph-right')], {\n        'class': 'firepad-btn-group'\n      }), utils.elt('div', [self.makeButton_('undo'), self.makeButton_('redo')], {\n        'class': 'firepad-btn-group'\n      })];\n\n      if (self.imageInsertionUI) {\n        toolbarOptions.push(utils.elt('div', [self.makeButton_('insert-image')], {\n          'class': 'firepad-btn-group'\n        }));\n      }\n\n      var toolbarWrapper = utils.elt('div', toolbarOptions, {\n        'class': 'firepad-toolbar-wrapper'\n      });\n      var toolbar = utils.elt('div', null, {\n        'class': 'firepad-toolbar'\n      });\n      toolbar.appendChild(toolbarWrapper);\n      return toolbar;\n    };\n\n    RichTextToolbar.prototype.makeFontDropdown_ = function () {\n      // NOTE: There must be matching .css styles in firepad.css.\n      var fonts = ['Arial', 'Comic Sans MS', 'Courier New', 'Impact', 'Times New Roman', 'Verdana'];\n      var items = [];\n\n      for (var i = 0; i < fonts.length; i++) {\n        var content = utils.elt('span', fonts[i]);\n        content.setAttribute('style', 'font-family:' + fonts[i]);\n        items.push({\n          content: content,\n          value: fonts[i]\n        });\n      }\n\n      return this.makeDropdown_('Font', 'font', items);\n    };\n\n    RichTextToolbar.prototype.makeFontSizeDropdown_ = function () {\n      // NOTE: There must be matching .css styles in firepad.css.\n      var sizes = [9, 10, 12, 14, 18, 24, 32, 42];\n      var items = [];\n\n      for (var i = 0; i < sizes.length; i++) {\n        var content = utils.elt('span', sizes[i].toString());\n        content.setAttribute('style', 'font-size:' + sizes[i] + 'px; line-height:' + (sizes[i] - 6) + 'px;');\n        items.push({\n          content: content,\n          value: sizes[i]\n        });\n      }\n\n      return this.makeDropdown_('Size', 'font-size', items, 'px');\n    };\n\n    RichTextToolbar.prototype.makeColorDropdown_ = function () {\n      var colors = ['black', 'red', 'green', 'blue', 'yellow', 'cyan', 'magenta', 'grey'];\n      var items = [];\n\n      for (var i = 0; i < colors.length; i++) {\n        var content = utils.elt('div');\n        content.className = 'firepad-color-dropdown-item';\n        content.setAttribute('style', 'background-color:' + colors[i]);\n        items.push({\n          content: content,\n          value: colors[i]\n        });\n      }\n\n      return this.makeDropdown_('Color', 'color', items);\n    };\n\n    RichTextToolbar.prototype.makeDropdown_ = function (title, eventName, items, value_suffix) {\n      value_suffix = value_suffix || \"\";\n      var self = this;\n      var button = utils.elt('a', title + ' \\u25be', {\n        'class': 'firepad-btn firepad-dropdown'\n      });\n      var list = utils.elt('ul', [], {\n        'class': 'firepad-dropdown-menu'\n      });\n      button.appendChild(list);\n      var isShown = false;\n\n      function showDropdown() {\n        if (!isShown) {\n          list.style.display = 'block';\n          utils.on(document, 'click', hideDropdown,\n          /*capture=*/\n          true);\n          isShown = true;\n        }\n      }\n\n      var justDismissed = false;\n\n      function hideDropdown() {\n        if (isShown) {\n          list.style.display = '';\n          utils.off(document, 'click', hideDropdown,\n          /*capture=*/\n          true);\n          isShown = false;\n        } // HACK so we can avoid re-showing the dropdown if you click on the dropdown header to dismiss it.\n\n\n        justDismissed = true;\n        setTimeout(function () {\n          justDismissed = false;\n        }, 0);\n      }\n\n      function addItem(content, value) {\n        if (typeof content !== 'object') {\n          content = document.createTextNode(String(content));\n        }\n\n        var element = utils.elt('a', [content]);\n        utils.on(element, 'click', utils.stopEventAnd(function () {\n          hideDropdown();\n          self.trigger(eventName, value + value_suffix);\n        }));\n        list.appendChild(element);\n      }\n\n      for (var i = 0; i < items.length; i++) {\n        var content = items[i].content,\n            value = items[i].value;\n        addItem(content, value);\n      }\n\n      utils.on(button, 'click', utils.stopEventAnd(function () {\n        if (!justDismissed) {\n          showDropdown();\n        }\n      }));\n      return button;\n    };\n\n    return RichTextToolbar;\n  }();\n\n  var firepad = firepad || {};\n\n  firepad.WrappedOperation = function (global) {\n    'use strict'; // A WrappedOperation contains an operation and corresponing metadata.\n\n    function WrappedOperation(operation, meta) {\n      this.wrapped = operation;\n      this.meta = meta;\n    }\n\n    WrappedOperation.prototype.apply = function () {\n      return this.wrapped.apply.apply(this.wrapped, arguments);\n    };\n\n    WrappedOperation.prototype.invert = function () {\n      var meta = this.meta;\n      return new WrappedOperation(this.wrapped.invert.apply(this.wrapped, arguments), meta && typeof meta === 'object' && typeof meta.invert === 'function' ? meta.invert.apply(meta, arguments) : meta);\n    }; // Copy all properties from source to target.\n\n\n    function copy(source, target) {\n      for (var key in source) {\n        if (source.hasOwnProperty(key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    function composeMeta(a, b) {\n      if (a && typeof a === 'object') {\n        if (typeof a.compose === 'function') {\n          return a.compose(b);\n        }\n\n        var meta = {};\n        copy(a, meta);\n        copy(b, meta);\n        return meta;\n      }\n\n      return b;\n    }\n\n    WrappedOperation.prototype.compose = function (other) {\n      return new WrappedOperation(this.wrapped.compose(other.wrapped), composeMeta(this.meta, other.meta));\n    };\n\n    function transformMeta(meta, operation) {\n      if (meta && typeof meta === 'object') {\n        if (typeof meta.transform === 'function') {\n          return meta.transform(operation);\n        }\n      }\n\n      return meta;\n    }\n\n    WrappedOperation.transform = function (a, b) {\n      var pair = a.wrapped.transform(b.wrapped);\n      return [new WrappedOperation(pair[0], transformMeta(a.meta, b.wrapped)), new WrappedOperation(pair[1], transformMeta(b.meta, a.wrapped))];\n    }; // convenience method to write transform(a, b) as a.transform(b)\n\n\n    WrappedOperation.prototype.transform = function (other) {\n      return WrappedOperation.transform(this, other);\n    };\n\n    return WrappedOperation;\n  }();\n\n  var firepad = firepad || {};\n\n  firepad.UndoManager = function () {\n    'use strict';\n\n    var NORMAL_STATE = 'normal';\n    var UNDOING_STATE = 'undoing';\n    var REDOING_STATE = 'redoing'; // Create a new UndoManager with an optional maximum history size.\n\n    function UndoManager(maxItems) {\n      this.maxItems = maxItems || 50;\n      this.state = NORMAL_STATE;\n      this.dontCompose = false;\n      this.undoStack = [];\n      this.redoStack = [];\n    } // Add an operation to the undo or redo stack, depending on the current state\n    // of the UndoManager. The operation added must be the inverse of the last\n    // edit. When `compose` is true, compose the operation with the last operation\n    // unless the last operation was alread pushed on the redo stack or was hidden\n    // by a newer operation on the undo stack.\n\n\n    UndoManager.prototype.add = function (operation, compose) {\n      if (this.state === UNDOING_STATE) {\n        this.redoStack.push(operation);\n        this.dontCompose = true;\n      } else if (this.state === REDOING_STATE) {\n        this.undoStack.push(operation);\n        this.dontCompose = true;\n      } else {\n        var undoStack = this.undoStack;\n\n        if (!this.dontCompose && compose && undoStack.length > 0) {\n          undoStack.push(operation.compose(undoStack.pop()));\n        } else {\n          undoStack.push(operation);\n\n          if (undoStack.length > this.maxItems) {\n            undoStack.shift();\n          }\n        }\n\n        this.dontCompose = false;\n        this.redoStack = [];\n      }\n    };\n\n    function transformStack(stack, operation) {\n      var newStack = [];\n      var Operation = operation.constructor;\n\n      for (var i = stack.length - 1; i >= 0; i--) {\n        var pair = Operation.transform(stack[i], operation);\n\n        if (typeof pair[0].isNoop !== 'function' || !pair[0].isNoop()) {\n          newStack.push(pair[0]);\n        }\n\n        operation = pair[1];\n      }\n\n      return newStack.reverse();\n    } // Transform the undo and redo stacks against a operation by another client.\n\n\n    UndoManager.prototype.transform = function (operation) {\n      this.undoStack = transformStack(this.undoStack, operation);\n      this.redoStack = transformStack(this.redoStack, operation);\n    }; // Perform an undo by calling a function with the latest operation on the undo\n    // stack. The function is expected to call the `add` method with the inverse\n    // of the operation, which pushes the inverse on the redo stack.\n\n\n    UndoManager.prototype.performUndo = function (fn) {\n      this.state = UNDOING_STATE;\n\n      if (this.undoStack.length === 0) {\n        throw new Error(\"undo not possible\");\n      }\n\n      fn(this.undoStack.pop());\n      this.state = NORMAL_STATE;\n    }; // The inverse of `performUndo`.\n\n\n    UndoManager.prototype.performRedo = function (fn) {\n      this.state = REDOING_STATE;\n\n      if (this.redoStack.length === 0) {\n        throw new Error(\"redo not possible\");\n      }\n\n      fn(this.redoStack.pop());\n      this.state = NORMAL_STATE;\n    }; // Is the undo stack not empty?\n\n\n    UndoManager.prototype.canUndo = function () {\n      return this.undoStack.length !== 0;\n    }; // Is the redo stack not empty?\n\n\n    UndoManager.prototype.canRedo = function () {\n      return this.redoStack.length !== 0;\n    }; // Whether the UndoManager is currently performing an undo.\n\n\n    UndoManager.prototype.isUndoing = function () {\n      return this.state === UNDOING_STATE;\n    }; // Whether the UndoManager is currently performing a redo.\n\n\n    UndoManager.prototype.isRedoing = function () {\n      return this.state === REDOING_STATE;\n    };\n\n    return UndoManager;\n  }();\n\n  var firepad = firepad || {};\n\n  firepad.Client = function () {\n    'use strict'; // Client constructor\n\n    function Client() {\n      this.state = synchronized_; // start state\n    }\n\n    Client.prototype.setState = function (state) {\n      this.state = state;\n    }; // Call this method when the user changes the document.\n\n\n    Client.prototype.applyClient = function (operation) {\n      this.setState(this.state.applyClient(this, operation));\n    }; // Call this method with a new operation from the server\n\n\n    Client.prototype.applyServer = function (operation) {\n      this.setState(this.state.applyServer(this, operation));\n    };\n\n    Client.prototype.serverAck = function () {\n      this.setState(this.state.serverAck(this));\n    };\n\n    Client.prototype.serverRetry = function () {\n      this.setState(this.state.serverRetry(this));\n    }; // Override this method.\n\n\n    Client.prototype.sendOperation = function (operation) {\n      throw new Error(\"sendOperation must be defined in child class\");\n    }; // Override this method.\n\n\n    Client.prototype.applyOperation = function (operation) {\n      throw new Error(\"applyOperation must be defined in child class\");\n    }; // In the 'Synchronized' state, there is no pending operation that the client\n    // has sent to the server.\n\n\n    function Synchronized() {}\n\n    Client.Synchronized = Synchronized;\n\n    Synchronized.prototype.applyClient = function (client, operation) {\n      // When the user makes an edit, send the operation to the server and\n      // switch to the 'AwaitingConfirm' state\n      client.sendOperation(operation);\n      return new AwaitingConfirm(operation);\n    };\n\n    Synchronized.prototype.applyServer = function (client, operation) {\n      // When we receive a new operation from the server, the operation can be\n      // simply applied to the current document\n      client.applyOperation(operation);\n      return this;\n    };\n\n    Synchronized.prototype.serverAck = function (client) {\n      throw new Error(\"There is no pending operation.\");\n    };\n\n    Synchronized.prototype.serverRetry = function (client) {\n      throw new Error(\"There is no pending operation.\");\n    }; // Singleton\n\n\n    var synchronized_ = new Synchronized(); // In the 'AwaitingConfirm' state, there's one operation the client has sent\n    // to the server and is still waiting for an acknowledgement.\n\n    function AwaitingConfirm(outstanding) {\n      // Save the pending operation\n      this.outstanding = outstanding;\n    }\n\n    Client.AwaitingConfirm = AwaitingConfirm;\n\n    AwaitingConfirm.prototype.applyClient = function (client, operation) {\n      // When the user makes an edit, don't send the operation immediately,\n      // instead switch to 'AwaitingWithBuffer' state\n      return new AwaitingWithBuffer(this.outstanding, operation);\n    };\n\n    AwaitingConfirm.prototype.applyServer = function (client, operation) {\n      // This is another client's operation. Visualization:\n      //\n      //                   /\\\n      // this.outstanding /  \\ operation\n      //                 /    \\\n      //                 \\    /\n      //  pair[1]         \\  / pair[0] (new outstanding)\n      //  (can be applied  \\/\n      //  to the client's\n      //  current document)\n      var pair = this.outstanding.transform(operation);\n      client.applyOperation(pair[1]);\n      return new AwaitingConfirm(pair[0]);\n    };\n\n    AwaitingConfirm.prototype.serverAck = function (client) {\n      // The client's operation has been acknowledged\n      // => switch to synchronized state\n      return synchronized_;\n    };\n\n    AwaitingConfirm.prototype.serverRetry = function (client) {\n      client.sendOperation(this.outstanding);\n      return this;\n    }; // In the 'AwaitingWithBuffer' state, the client is waiting for an operation\n    // to be acknowledged by the server while buffering the edits the user makes\n\n\n    function AwaitingWithBuffer(outstanding, buffer) {\n      // Save the pending operation and the user's edits since then\n      this.outstanding = outstanding;\n      this.buffer = buffer;\n    }\n\n    Client.AwaitingWithBuffer = AwaitingWithBuffer;\n\n    AwaitingWithBuffer.prototype.applyClient = function (client, operation) {\n      // Compose the user's changes onto the buffer\n      var newBuffer = this.buffer.compose(operation);\n      return new AwaitingWithBuffer(this.outstanding, newBuffer);\n    };\n\n    AwaitingWithBuffer.prototype.applyServer = function (client, operation) {\n      // Operation comes from another client\n      //\n      //                       /\\\n      //     this.outstanding /  \\ operation\n      //                     /    \\\n      //                    /\\    /\n      //       this.buffer /  \\* / pair1[0] (new outstanding)\n      //                  /    \\/\n      //                  \\    /\n      //          pair2[1] \\  / pair2[0] (new buffer)\n      // the transformed    \\/\n      // operation -- can\n      // be applied to the\n      // client's current\n      // document\n      //\n      // * pair1[1]\n      var pair1 = this.outstanding.transform(operation);\n      var pair2 = this.buffer.transform(pair1[1]);\n      client.applyOperation(pair2[1]);\n      return new AwaitingWithBuffer(pair1[0], pair2[0]);\n    };\n\n    AwaitingWithBuffer.prototype.serverRetry = function (client) {\n      // Merge with our buffer and resend.\n      var outstanding = this.outstanding.compose(this.buffer);\n      client.sendOperation(outstanding);\n      return new AwaitingConfirm(outstanding);\n    };\n\n    AwaitingWithBuffer.prototype.serverAck = function (client) {\n      // The pending operation has been acknowledged\n      // => send buffer\n      client.sendOperation(this.buffer);\n      return new AwaitingConfirm(this.buffer);\n    };\n\n    return Client;\n  }();\n\n  var firepad = firepad || {};\n\n  firepad.EditorClient = function () {\n    'use strict';\n\n    var Client = firepad.Client;\n    var Cursor = firepad.Cursor;\n    var UndoManager = firepad.UndoManager;\n    var WrappedOperation = firepad.WrappedOperation;\n\n    function SelfMeta(cursorBefore, cursorAfter) {\n      this.cursorBefore = cursorBefore;\n      this.cursorAfter = cursorAfter;\n    }\n\n    SelfMeta.prototype.invert = function () {\n      return new SelfMeta(this.cursorAfter, this.cursorBefore);\n    };\n\n    SelfMeta.prototype.compose = function (other) {\n      return new SelfMeta(this.cursorBefore, other.cursorAfter);\n    };\n\n    SelfMeta.prototype.transform = function (operation) {\n      return new SelfMeta(this.cursorBefore ? this.cursorBefore.transform(operation) : null, this.cursorAfter ? this.cursorAfter.transform(operation) : null);\n    };\n\n    function OtherClient(id, editorAdapter) {\n      this.id = id;\n      this.editorAdapter = editorAdapter;\n    }\n\n    OtherClient.prototype.setColor = function (color) {\n      this.color = color;\n    };\n\n    OtherClient.prototype.updateCursor = function (cursor) {\n      this.removeCursor();\n      this.cursor = cursor;\n      this.mark = this.editorAdapter.setOtherCursor(cursor, this.color, this.id);\n    };\n\n    OtherClient.prototype.removeCursor = function () {\n      if (this.mark) {\n        this.mark.clear();\n      }\n    };\n\n    function EditorClient(serverAdapter, editorAdapter) {\n      Client.call(this);\n      this.serverAdapter = serverAdapter;\n      this.editorAdapter = editorAdapter;\n      this.undoManager = new UndoManager();\n      this.clients = {};\n      var self = this;\n      this.editorAdapter.registerCallbacks({\n        change: function (operation, inverse) {\n          self.onChange(operation, inverse);\n        },\n        cursorActivity: function () {\n          self.onCursorActivity();\n        },\n        blur: function () {\n          self.onBlur();\n        },\n        focus: function () {\n          self.onFocus();\n        }\n      });\n      this.editorAdapter.registerUndo(function () {\n        self.undo();\n      });\n      this.editorAdapter.registerRedo(function () {\n        self.redo();\n      });\n      this.serverAdapter.registerCallbacks({\n        ack: function () {\n          self.serverAck();\n\n          if (self.focused && self.state instanceof Client.Synchronized) {\n            self.updateCursor();\n            self.sendCursor(self.cursor);\n          }\n\n          self.emitStatus();\n        },\n        retry: function () {\n          self.serverRetry();\n        },\n        operation: function (operation) {\n          self.applyServer(operation);\n        },\n        cursor: function (clientId, cursor, color) {\n          if (self.serverAdapter.userId_ === clientId || !(self.state instanceof Client.Synchronized)) {\n            return;\n          }\n\n          var client = self.getClientObject(clientId);\n\n          if (cursor) {\n            if (color) client.setColor(color);\n            client.updateCursor(Cursor.fromJSON(cursor));\n          } else {\n            client.removeCursor();\n          }\n        }\n      });\n    }\n\n    inherit(EditorClient, Client);\n\n    EditorClient.prototype.getClientObject = function (clientId) {\n      var client = this.clients[clientId];\n\n      if (client) {\n        return client;\n      }\n\n      return this.clients[clientId] = new OtherClient(clientId, this.editorAdapter);\n    };\n\n    EditorClient.prototype.applyUnredo = function (operation) {\n      this.undoManager.add(this.editorAdapter.invertOperation(operation));\n      this.editorAdapter.applyOperation(operation.wrapped);\n      this.cursor = operation.meta.cursorAfter;\n      if (this.cursor) this.editorAdapter.setCursor(this.cursor);\n      this.applyClient(operation.wrapped);\n    };\n\n    EditorClient.prototype.undo = function () {\n      var self = this;\n\n      if (!this.undoManager.canUndo()) {\n        return;\n      }\n\n      this.undoManager.performUndo(function (o) {\n        self.applyUnredo(o);\n      });\n    };\n\n    EditorClient.prototype.redo = function () {\n      var self = this;\n\n      if (!this.undoManager.canRedo()) {\n        return;\n      }\n\n      this.undoManager.performRedo(function (o) {\n        self.applyUnredo(o);\n      });\n    };\n\n    EditorClient.prototype.onChange = function (textOperation, inverse) {\n      var cursorBefore = this.cursor;\n      this.updateCursor();\n      var compose = this.undoManager.undoStack.length > 0 && inverse.shouldBeComposedWithInverted(last(this.undoManager.undoStack).wrapped);\n      var inverseMeta = new SelfMeta(this.cursor, cursorBefore);\n      this.undoManager.add(new WrappedOperation(inverse, inverseMeta), compose);\n      this.applyClient(textOperation);\n    };\n\n    EditorClient.prototype.updateCursor = function () {\n      this.cursor = this.editorAdapter.getCursor();\n    };\n\n    EditorClient.prototype.onCursorActivity = function () {\n      var oldCursor = this.cursor;\n      this.updateCursor();\n\n      if (!this.focused || oldCursor && this.cursor.equals(oldCursor)) {\n        return;\n      }\n\n      this.sendCursor(this.cursor);\n    };\n\n    EditorClient.prototype.onBlur = function () {\n      this.cursor = null;\n      this.sendCursor(null);\n      this.focused = false;\n    };\n\n    EditorClient.prototype.onFocus = function () {\n      this.focused = true;\n      this.onCursorActivity();\n    };\n\n    EditorClient.prototype.sendCursor = function (cursor) {\n      if (this.state instanceof Client.AwaitingWithBuffer) {\n        return;\n      }\n\n      this.serverAdapter.sendCursor(cursor);\n    };\n\n    EditorClient.prototype.sendOperation = function (operation) {\n      this.serverAdapter.sendOperation(operation);\n      this.emitStatus();\n    };\n\n    EditorClient.prototype.applyOperation = function (operation) {\n      this.editorAdapter.applyOperation(operation);\n      this.updateCursor();\n      this.undoManager.transform(new WrappedOperation(operation, null));\n    };\n\n    EditorClient.prototype.emitStatus = function () {\n      var self = this;\n      setTimeout(function () {\n        self.trigger('synced', self.state instanceof Client.Synchronized);\n      }, 0);\n    }; // Set Const.prototype.__proto__ to Super.prototype\n\n\n    function inherit(Const, Super) {\n      function F() {}\n\n      F.prototype = Super.prototype;\n      Const.prototype = new F();\n      Const.prototype.constructor = Const;\n    }\n\n    function last(arr) {\n      return arr[arr.length - 1];\n    }\n\n    return EditorClient;\n  }();\n\n  firepad.utils.makeEventEmitter(firepad.EditorClient, ['synced']);\n  \"use strict\";\n\n  function _toConsumableArray(arr) {\n    return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread();\n  }\n\n  function _nonIterableSpread() {\n    throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n  }\n\n  function _unsupportedIterableToArray(o, minLen) {\n    if (!o) return;\n    if (typeof o === \"string\") return _arrayLikeToArray(o, minLen);\n    var n = Object.prototype.toString.call(o).slice(8, -1);\n    if (n === \"Object\" && o.constructor) n = o.constructor.name;\n    if (n === \"Map\" || n === \"Set\") return Array.from(n);\n    if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);\n  }\n\n  function _iterableToArray(iter) {\n    if (typeof Symbol !== \"undefined\" && Symbol.iterator in Object(iter)) return Array.from(iter);\n  }\n\n  function _arrayWithoutHoles(arr) {\n    if (Array.isArray(arr)) return _arrayLikeToArray(arr);\n  }\n\n  function _arrayLikeToArray(arr, len) {\n    if (len == null || len > arr.length) len = arr.length;\n\n    for (var i = 0, arr2 = new Array(len); i < len; i++) {\n      arr2[i] = arr[i];\n    }\n\n    return arr2;\n  }\n\n  function _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n      throw new TypeError(\"Cannot call a class as a function\");\n    }\n  }\n\n  function _defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  function _createClass(Constructor, protoProps, staticProps) {\n    if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) _defineProperties(Constructor, staticProps);\n    return Constructor;\n  }\n\n  var firepad;\n\n  if (typeof firepad === \"undefined\" || firepad === null) {\n    firepad = {};\n  }\n\n  firepad.ACEAdapter = function () {\n    var ACEAdapter = /*#__PURE__*/function () {\n      function ACEAdapter(aceInstance) {\n        _classCallCheck(this, ACEAdapter);\n\n        var ref;\n        this.onChange = this.onChange.bind(this);\n        this.onBlur = this.onBlur.bind(this);\n        this.onFocus = this.onFocus.bind(this);\n        this.onCursorActivity = this.onCursorActivity.bind(this);\n        this.ace = aceInstance;\n        this.aceSession = this.ace.getSession();\n        this.aceDoc = this.aceSession.getDocument();\n        this.aceDoc.setNewLineMode('unix');\n        this.grabDocumentState();\n        this.ace.on('change', this.onChange);\n        this.ace.on('blur', this.onBlur);\n        this.ace.on('focus', this.onFocus);\n        this.aceSession.selection.on('changeCursor', this.onCursorActivity);\n\n        if (this.aceRange == null) {\n          this.aceRange = ((ref = ace.require) != null ? ref : require)(\"ace/range\").Range;\n        }\n      }\n\n      _createClass(ACEAdapter, [{\n        key: \"grabDocumentState\",\n        value: function grabDocumentState() {\n          this.lastDocLines = this.aceDoc.getAllLines();\n          return this.lastCursorRange = this.aceSession.selection.getRange();\n        } // Removes all event listeners from the ACE editor instance\n\n      }, {\n        key: \"detach\",\n        value: function detach() {\n          this.ace.removeListener('change', this.onChange);\n          this.ace.removeListener('blur', this.onBlur);\n          this.ace.removeListener('focus', this.onFocus);\n          return this.aceSession.selection.removeListener('changeCursor', this.onCursorActivity);\n        }\n      }, {\n        key: \"onChange\",\n        value: function onChange(change) {\n          var pair;\n\n          if (!this.ignoreChanges) {\n            pair = this.operationFromACEChange(change);\n            this.trigger.apply(this, ['change'].concat(_toConsumableArray(pair)));\n            return this.grabDocumentState();\n          }\n        }\n      }, {\n        key: \"onBlur\",\n        value: function onBlur() {\n          if (this.ace.selection.isEmpty()) {\n            return this.trigger('blur');\n          }\n        }\n      }, {\n        key: \"onFocus\",\n        value: function onFocus() {\n          return this.trigger('focus');\n        }\n      }, {\n        key: \"onCursorActivity\",\n        value: function onCursorActivity() {\n          var _this = this;\n\n          return setTimeout(function () {\n            return _this.trigger('cursorActivity');\n          }, 0);\n        } // Converts an ACE change object into a TextOperation and its inverse\n        // and returns them as a two-element array.\n\n      }, {\n        key: \"operationFromACEChange\",\n        value: function operationFromACEChange(change) {\n          var action, delete_op, delta, insert_op, ref, restLength, start, text;\n\n          if (change.data) {\n            // Ace < 1.2.0\n            delta = change.data;\n\n            if ((ref = delta.action) === 'insertLines' || ref === 'removeLines') {\n              text = delta.lines.join('\\n') + '\\n';\n              action = delta.action.replace('Lines', '');\n            } else {\n              text = delta.text.replace(this.aceDoc.getNewLineCharacter(), '\\n');\n              action = delta.action.replace('Text', '');\n            }\n\n            start = this.indexFromPos(delta.range.start);\n          } else {\n            // Ace 1.2.0+\n            text = change.lines.join('\\n');\n            start = this.indexFromPos(change.start);\n          }\n\n          restLength = this.lastDocLines.join('\\n').length - start;\n\n          if (change.action === 'remove') {\n            restLength -= text.length;\n          }\n\n          insert_op = new firepad.TextOperation().retain(start).insert(text).retain(restLength);\n          delete_op = new firepad.TextOperation().retain(start)[\"delete\"](text).retain(restLength);\n\n          if (change.action === 'remove') {\n            return [delete_op, insert_op];\n          } else {\n            return [insert_op, delete_op];\n          }\n        } // Apply an operation to an ACE instance.\n\n      }, {\n        key: \"applyOperationToACE\",\n        value: function applyOperationToACE(operation) {\n          var from, index, j, len, op, range, ref, to;\n          index = 0;\n          ref = operation.ops;\n\n          for (j = 0, len = ref.length; j < len; j++) {\n            op = ref[j];\n\n            if (op.isRetain()) {\n              index += op.chars;\n            } else if (op.isInsert()) {\n              this.aceDoc.insert(this.posFromIndex(index), op.text);\n              index += op.text.length;\n            } else if (op.isDelete()) {\n              from = this.posFromIndex(index);\n              to = this.posFromIndex(index + op.chars);\n              range = this.aceRange.fromPoints(from, to);\n              this.aceDoc.remove(range);\n            }\n          }\n\n          return this.grabDocumentState();\n        }\n      }, {\n        key: \"posFromIndex\",\n        value: function posFromIndex(index) {\n          var j, len, line, ref, row;\n          ref = this.aceDoc.$lines;\n\n          for (row = j = 0, len = ref.length; j < len; row = ++j) {\n            line = ref[row];\n\n            if (index <= line.length) {\n              break;\n            }\n\n            index -= line.length + 1;\n          }\n\n          return {\n            row: row,\n            column: index\n          };\n        }\n      }, {\n        key: \"indexFromPos\",\n        value: function indexFromPos(pos, lines) {\n          var i, index, j, ref;\n\n          if (lines == null) {\n            lines = this.lastDocLines;\n          }\n\n          index = 0;\n\n          for (i = j = 0, ref = pos.row; 0 <= ref ? j < ref : j > ref; i = 0 <= ref ? ++j : --j) {\n            index += this.lastDocLines[i].length + 1;\n          }\n\n          return index += pos.column;\n        }\n      }, {\n        key: \"getValue\",\n        value: function getValue() {\n          return this.aceDoc.getValue();\n        }\n      }, {\n        key: \"getCursor\",\n        value: function getCursor() {\n          var e, e2, end, start;\n\n          try {\n            start = this.indexFromPos(this.aceSession.selection.getRange().start, this.aceDoc.$lines);\n            end = this.indexFromPos(this.aceSession.selection.getRange().end, this.aceDoc.$lines);\n          } catch (error) {\n            e = error;\n\n            try {\n              // If the new range doesn't work (sometimes with setValue), we'll use the old range\n              start = this.indexFromPos(this.lastCursorRange.start);\n              end = this.indexFromPos(this.lastCursorRange.end);\n            } catch (error) {\n              e2 = error;\n              console.log(\"Couldn't figure out the cursor range:\", e2, \"-- setting it to 0:0.\");\n              start = 0;\n              end = 0;\n            }\n          }\n\n          if (start > end) {\n            var _ref = [end, start];\n            start = _ref[0];\n            end = _ref[1];\n          }\n\n          return new firepad.Cursor(start, end);\n        }\n      }, {\n        key: \"setCursor\",\n        value: function setCursor(cursor) {\n          var end, start;\n          start = this.posFromIndex(cursor.position);\n          end = this.posFromIndex(cursor.selectionEnd);\n\n          if (cursor.position > cursor.selectionEnd) {\n            var _ref2 = [end, start];\n            start = _ref2[0];\n            end = _ref2[1];\n          }\n\n          return this.aceSession.selection.setSelectionRange(new this.aceRange(start.row, start.column, end.row, end.column));\n        }\n      }, {\n        key: \"setOtherCursor\",\n        value: function setOtherCursor(cursor, color, clientId) {\n          var _this2 = this;\n\n          var clazz, css, cursorRange, end, justCursor, self, start;\n\n          if (this.otherCursors == null) {\n            this.otherCursors = {};\n          }\n\n          cursorRange = this.otherCursors[clientId];\n\n          if (cursorRange) {\n            cursorRange.start.detach();\n            cursorRange.end.detach();\n            this.aceSession.removeMarker(cursorRange.id);\n          }\n\n          start = this.posFromIndex(cursor.position);\n          end = this.posFromIndex(cursor.selectionEnd);\n\n          if (cursor.selectionEnd < cursor.position) {\n            var _ref3 = [end, start];\n            start = _ref3[0];\n            end = _ref3[1];\n          }\n\n          clazz = \"other-client-selection-\".concat(color.replace('#', ''));\n          justCursor = cursor.position === cursor.selectionEnd;\n\n          if (justCursor) {\n            clazz = clazz.replace('selection', 'cursor');\n          }\n\n          css = \".\".concat(clazz, \" {\\n  position: absolute;\\n  background-color: \").concat(justCursor ? 'transparent' : color, \";\\n  border-left: 2px solid \").concat(color, \";\\n}\");\n          this.addStyleRule(css);\n          this.otherCursors[clientId] = cursorRange = new this.aceRange(start.row, start.column, end.row, end.column); // Hack this specific range to, when clipped, return an empty range that\n          // pretends to not be empty. This lets us draw markers at the ends of lines.\n          // This might be brittle in the future.\n\n          self = this;\n\n          cursorRange.clipRows = function () {\n            var range;\n            range = self.aceRange.prototype.clipRows.apply(this, arguments);\n\n            range.isEmpty = function () {\n              return false;\n            };\n\n            return range;\n          };\n\n          cursorRange.start = this.aceDoc.createAnchor(cursorRange.start);\n          cursorRange.end = this.aceDoc.createAnchor(cursorRange.end);\n          cursorRange.id = this.aceSession.addMarker(cursorRange, clazz, \"text\");\n          return {\n            // Return something with a clear method to mimic expected API from CodeMirror\n            clear: function clear() {\n              cursorRange.start.detach();\n              cursorRange.end.detach();\n              return _this2.aceSession.removeMarker(cursorRange.id);\n            }\n          };\n        }\n      }, {\n        key: \"addStyleRule\",\n        value: function addStyleRule(css) {\n          var styleElement;\n\n          if (typeof document === \"undefined\" || document === null) {\n            return;\n          }\n\n          if (!this.addedStyleRules) {\n            this.addedStyleRules = {};\n            styleElement = document.createElement('style');\n            document.documentElement.getElementsByTagName('head')[0].appendChild(styleElement);\n            this.addedStyleSheet = styleElement.sheet;\n          }\n\n          if (this.addedStyleRules[css]) {\n            return;\n          }\n\n          this.addedStyleRules[css] = true;\n          return this.addedStyleSheet.insertRule(css, 0);\n        }\n      }, {\n        key: \"registerCallbacks\",\n        value: function registerCallbacks(callbacks) {\n          this.callbacks = callbacks;\n        }\n      }, {\n        key: \"trigger\",\n        value: function trigger(event) {\n          var ref, ref1;\n\n          for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n            args[_key - 1] = arguments[_key];\n          }\n\n          return (ref = this.callbacks) != null ? (ref1 = ref[event]) != null ? ref1.apply(this, args) : void 0 : void 0;\n        }\n      }, {\n        key: \"applyOperation\",\n        value: function applyOperation(operation) {\n          if (!operation.isNoop()) {\n            this.ignoreChanges = true;\n          }\n\n          this.applyOperationToACE(operation);\n          return this.ignoreChanges = false;\n        }\n      }, {\n        key: \"registerUndo\",\n        value: function registerUndo(undoFn) {\n          return this.ace.undo = undoFn;\n        }\n      }, {\n        key: \"registerRedo\",\n        value: function registerRedo(redoFn) {\n          return this.ace.redo = redoFn;\n        }\n      }, {\n        key: \"invertOperation\",\n        value: function invertOperation(operation) {\n          // TODO: Optimize to avoid copying entire text?\n          return operation.invert(this.getValue());\n        }\n      }]);\n\n      return ACEAdapter;\n    }();\n\n    ;\n    ACEAdapter.prototype.ignoreChanges = false;\n    return ACEAdapter;\n  }.call(void 0);\n\n  'use strict';\n  /**\n   * @function getCSS - For Internal Usage Only\n   * @param {String} clazz - CSS Class Name\n   * @param {String} bgColor - Background Color\n   * @param {String} color - Font Color\n   * @returns CSS Style Rules according to Parameters\n   */\n\n\n  var getCSS = function getCSS(clazz, bgColor, color) {\n    return \".\" + clazz + \" {\\n  position: relative;\\n\" + \"background-color: \" + bgColor + \";\\n\" + \"border-left: 2px solid \" + color + \";\\n}\";\n  };\n  /**\n   * @function addStyleRule - For Internal Usage Only\n   * @desc Creates style element in document head and pushed all the style rules\n   * @param {String} clazz - CSS Class Name\n   * @param {String} css - CSS Style Rules\n   */\n\n\n  var addStyleRule = function addStyleRule(clazz, css) {\n    /** House Keeping */\n    if (typeof document === 'undefined' || document === null) {\n      return false;\n    }\n    /** Add style rules only once */\n\n\n    if (this.addedStyleRules.indexOf(clazz) === -1) {\n      var styleElement = document.createElement('style');\n      var styleSheet = document.createTextNode(css);\n      styleElement.appendChild(styleSheet);\n      document.head.appendChild(styleElement);\n      this.addedStyleRules.push(clazz);\n    }\n  };\n  /**\n   * Monaco Adapter\n   * Create Pipe between Firebase and Monaco Text Editor\n   */\n\n\n  var MonacoAdapter = function () {\n    /**\n     * @constructor MonacoEditor\n     * @param {MonacoEditor} monacoInstance - Editor Instance\n     * @prop {MonacoEditor} monaco - Monaco Instance passed as Parameter\n     * @prop {MonacoITextModel} monacoModel - Data Model of the Monaco Instance\n     * @prop {string[]} lastDocLines - Text for all Lines in the Editor\n     * @prop {MonacoSelection} lastCursorRange - Primary Selection of the Editor\n     * @prop {function} onChange - Change Event Handler bound Local Object\n     * @prop {function} onBlur - Blur Event Handler bound Local Object\n     * @prop {function} onFocus - Focus Event Handler bound Local Object\n     * @prop {function} onCursorActivity - Cursor Activity Handler bound Local Object\n     * @prop {Boolean} ignoreChanges - Should Avoid OnChange Event Handling\n     * @prop {MonacoIDisposable} changeHandler - Event Handler for Model Content Change\n     * @prop {MonacoIDisposable} didBlurHandler - Event Handler for Focus Lost on Editor Text/Widget\n     * @prop {MonacoIDisposable} didFocusHandler - Event Handler for Focus Gain on Editor Text/Widget\n     * @prop {MonacoIDisposable} didChangeCursorPositionHandler - Event Handler for Cursor Position Change\n     */\n    function MonacoAdapter(monacoInstance) {\n      /** House Keeping */\n      // Make sure this looks like a valid monaco instance.\n      if (!monacoInstance || typeof monacoInstance.getModel !== 'function') {\n        throw new Error('MonacoAdapter: Incorrect Parameter Recieved in constructor, ' + 'expected valid Monaco Instance');\n      }\n      /** Monaco Member Variables */\n\n\n      this.monaco = monacoInstance;\n      this.monacoModel = this.monaco.getModel();\n      this.lastDocLines = this.monacoModel.getLinesContent();\n      this.lastCursorRange = this.monaco.getSelection();\n      /** Monaco Editor Configurations */\n\n      this.callbacks = {};\n      this.otherCursors = [];\n      this.addedStyleRules = [];\n      this.ignoreChanges = false;\n      /** Adapter Callback Functions */\n\n      this.onChange = this.onChange.bind(this);\n      this.onBlur = this.onBlur.bind(this);\n      this.onFocus = this.onFocus.bind(this);\n      this.onCursorActivity = this.onCursorActivity.bind(this);\n      /** Editor Callback Handler */\n\n      this.changeHandler = this.monaco.onDidChangeModelContent(this.onChange);\n      this.didBlurHandler = this.monaco.onDidBlurEditorWidget(this.onBlur);\n      this.didFocusHandler = this.monaco.onDidFocusEditorWidget(this.onFocus);\n      this.didChangeCursorPositionHandler = this.monaco.onDidChangeCursorPosition(this.onCursorActivity);\n    }\n    /**\n     * @method detach - Clears an Instance of Editor Adapter\n     */\n\n\n    MonacoAdapter.prototype.detach = function detach() {\n      this.changeHandler.dispose();\n      this.didBlurHandler.dispose();\n      this.didFocusHandler.dispose();\n      this.didChangeCursorPositionHandler.dispose();\n    };\n    /**\n     * @method getCursor - Get current cursor position\n     * @returns Firepad Cursor object\n     */\n\n\n    MonacoAdapter.prototype.getCursor = function getCursor() {\n      var selection = this.monaco.getSelection();\n      /** Fallback to last cursor change */\n\n      if (typeof selection === 'undefined' || selection === null) {\n        selection = this.lastCursorRange;\n      }\n      /** Obtain selection indexes */\n\n\n      var startPos = selection.getStartPosition();\n      var endPos = selection.getEndPosition();\n      var start = this.monacoModel.getOffsetAt(startPos);\n      var end = this.monacoModel.getOffsetAt(endPos);\n      /** If Selection is Inversed */\n\n      if (start > end) {\n        var _ref = [end, start];\n        start = _ref[0];\n        end = _ref[1];\n      }\n      /** Return cursor position */\n\n\n      return new firepad.Cursor(start, end);\n    };\n    /**\n     * @method setCursor - Set Selection on Monaco Editor Instance\n     * @param {Object} cursor - Cursor Position (start and end)\n     * @param {Number} cursor.position - Starting Position of the Cursor\n     * @param {Number} cursor.selectionEnd - Ending Position of the Cursor\n     */\n\n\n    MonacoAdapter.prototype.setCursor = function setCursor(cursor) {\n      var position = cursor.position;\n      var selectionEnd = cursor.selectionEnd;\n      var start = this.monacoModel.getPositionAt(position);\n      var end = this.monacoModel.getPositionAt(selectionEnd);\n      /** If selection is inversed */\n\n      if (position > selectionEnd) {\n        var _ref = [end, start];\n        start = _ref[0];\n        end = _ref[1];\n      }\n      /** Create Selection in the Editor */\n\n\n      this.monaco.setSelection(new monaco.Range(start.lineNumber, start.column, end.lineNumber, end.column));\n    };\n    /**\n     * @method setOtherCursor - Set Remote Selection on Monaco Editor\n     * @param {Number} cursor.position - Starting Position of the Selection\n     * @param {Number} cursor.selectionEnd - Ending Position of the Selection\n     * @param {String} color - Hex Color codes for Styling\n     * @param {any} clientID - ID number of the Remote Client\n     */\n\n\n    MonacoAdapter.prototype.setOtherCursor = function setOtherCursor(cursor, color, clientID) {\n      /** House Keeping */\n      if (typeof cursor !== 'object' || typeof cursor.position !== 'number' || typeof cursor.selectionEnd !== 'number') {\n        return false;\n      }\n\n      if (typeof color !== 'string' || !color.match(/^#[a-fA-F0-9]{3,6}$/)) {\n        return false;\n      }\n      /** Extract Positions */\n\n\n      var position = cursor.position;\n      var selectionEnd = cursor.selectionEnd;\n\n      if (position < 0 || selectionEnd < 0) {\n        return false;\n      }\n      /** Fetch Client Cursor Information */\n\n\n      var otherCursor = this.otherCursors.find(function (cursor) {\n        return cursor.clientID === clientID;\n      });\n      /** Initialize empty array, if client does not exist */\n\n      if (!otherCursor) {\n        otherCursor = {\n          clientID: clientID,\n          decoration: []\n        };\n        this.otherCursors.push(otherCursor);\n      }\n      /** Remove Earlier Decorations, if any, or initialize empty decor */\n\n\n      otherCursor.decoration = this.monaco.deltaDecorations(otherCursor.decoration, []);\n      var clazz = \"other-client-selection-\" + color.replace('#', '');\n      var css, ret;\n\n      if (position === selectionEnd) {\n        /** Show only cursor */\n        clazz = clazz.replace('selection', 'cursor');\n        /** Generate Style rules and add them to document */\n\n        css = getCSS(clazz, 'transparent', color);\n        ret = addStyleRule.call(this, clazz, css);\n      } else {\n        /** Generate Style rules and add them to document */\n        css = getCSS(clazz, color, color);\n        ret = addStyleRule.call(this, clazz, css);\n      }\n      /** Return if failed to add css */\n\n\n      if (ret == false) {\n        console.log(\"Monaco Adapter: Failed to add some css style.\\n\" + \"Please make sure you're running on supported environment.\");\n      }\n      /** Get co-ordinate position in Editor */\n\n\n      var start = this.monacoModel.getPositionAt(position);\n      var end = this.monacoModel.getPositionAt(selectionEnd);\n      /** Selection is inversed */\n\n      if (position > selectionEnd) {\n        var _ref = [end, start];\n        start = _ref[0];\n        end = _ref[1];\n      }\n      /** Add decoration to the Editor */\n\n\n      otherCursor.decoration = this.monaco.deltaDecorations(otherCursor.decoration, [{\n        range: new monaco.Range(start.lineNumber, start.column, end.lineNumber, end.column),\n        options: {\n          className: clazz\n        }\n      }]);\n      /** Clear cursor method */\n\n      var _this = this;\n\n      return {\n        clear: function clear() {\n          otherCursor.decoration = _this.monaco.deltaDecorations(otherCursor.decoration, []);\n        }\n      };\n    };\n    /**\n     * @method registerCallbacks - Assign callback functions to internal property\n     * @param {function[]} callbacks - Set of callback functions\n     */\n\n\n    MonacoAdapter.prototype.registerCallbacks = function registerCallbacks(callbacks) {\n      this.callbacks = Object.assign({}, this.callbacks, callbacks);\n    };\n    /**\n     * @method registerUndo\n     * @param {function} callback - Callback Handler for Undo Event\n     */\n\n\n    MonacoAdapter.prototype.registerUndo = function registerUndo(callback) {\n      if (typeof callback === 'function') {\n        this.callbacks.undo = callback;\n      } else {\n        throw new Error('MonacoAdapter: registerUndo method expects a ' + 'callback function in parameter');\n      }\n    };\n    /**\n     * @method registerRedo\n     * @param {function} callback - Callback Handler for Redo Event\n     */\n\n\n    MonacoAdapter.prototype.registerRedo = function registerRedo(callback) {\n      if (typeof callback === 'function') {\n        this.callbacks.redo = callback;\n      } else {\n        throw new Error('MonacoAdapter: registerRedo method expects a ' + 'callback function in parameter');\n      }\n    };\n    /**\n     * @method operationFromMonacoChanges - Convert Monaco Changes to OT.js Ops\n     * @param {Object} change - Change in Editor\n     * @param {string} content - Last Editor Content\n     * @param {Number} offset - Offset between changes of same event\n     * @returns Pair of Operation and Inverse\n     * Note: OT.js Operation expects the cursor to be at the end of content\n     */\n\n\n    MonacoAdapter.prototype.operationFromMonacoChanges = function operationFromMonacoChanges(change, content, offset) {\n      /** Change Informations */\n      var text = change.text;\n      var rangeLength = change.rangeLength;\n      var rangeOffset = change.rangeOffset;\n      /** Additional SEEK distance */\n\n      var restLength = content.length + offset - rangeOffset;\n      /** Declare OT.js Operation Variables */\n\n      var change_op, inverse_op, replaced_text;\n\n      if (text.length === 0 && rangeLength > 0) {\n        /** Delete Operation */\n        replaced_text = content.slice(rangeOffset, rangeOffset + rangeLength);\n        change_op = new firepad.TextOperation().retain(rangeOffset).delete(rangeLength).retain(restLength - rangeLength);\n        inverse_op = new firepad.TextOperation().retain(rangeOffset).insert(replaced_text).retain(restLength - rangeLength);\n      } else if (text.length > 0 && rangeLength > 0) {\n        /** Replace Operation */\n        replaced_text = content.slice(rangeOffset, rangeOffset + rangeLength);\n        change_op = new firepad.TextOperation().retain(rangeOffset).delete(rangeLength).insert(text).retain(restLength - rangeLength);\n        inverse_op = new firepad.TextOperation().retain(rangeOffset).delete(text.length).insert(replaced_text).retain(restLength - rangeLength);\n      } else {\n        /** Insert Operation */\n        change_op = new firepad.TextOperation().retain(rangeOffset).insert(text).retain(restLength);\n        inverse_op = new firepad.TextOperation().retain(rangeOffset).delete(text).retain(restLength);\n      }\n\n      return [change_op, inverse_op];\n    };\n    /**\n     * @method onChange - OnChange Event Handler\n     * @param {Object} event - OnChange Event Delegate\n     */\n\n\n    MonacoAdapter.prototype.onChange = function onChange(event) {\n      var _this = this;\n\n      if (!this.ignoreChanges) {\n        var content = this.lastDocLines.join(this.monacoModel.getEOL());\n        var offset = 0;\n        /** If no change information recieved */\n\n        if (!event.changes) {\n          var op = new firepad.TextOperation().retain(content.length);\n          this.trigger('change', op, op);\n        }\n        /** Iterate through all changes */\n\n\n        event.changes.forEach(function (change) {\n          var pair = _this.operationFromMonacoChanges(change, content, offset);\n\n          offset += pair[0].targetLength - pair[0].baseLength;\n\n          _this.trigger.apply(_this, ['change'].concat(pair));\n        });\n        /** Update Editor Content */\n\n        this.lastDocLines = this.monacoModel.getLinesContent();\n      }\n    };\n    /**\n     * @method trigger - Event Handler\n     * @param {string} event - Event name\n     * @param  {...any} args - Callback arguments\n     */\n\n\n    MonacoAdapter.prototype.trigger = function trigger(event) {\n      if (!this.callbacks.hasOwnProperty(event)) {\n        return;\n      }\n\n      var action = this.callbacks[event];\n\n      if (!typeof action === 'function') {\n        return;\n      }\n\n      var args = [];\n\n      if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n          args.push(arguments[i]);\n        }\n      }\n\n      action.apply(null, args);\n    };\n    /**\n     * @method onBlur - Blur event handler\n     */\n\n\n    MonacoAdapter.prototype.onBlur = function onBlur() {\n      if (this.monaco.getSelection().isEmpty()) {\n        this.trigger('blur');\n      }\n    };\n    /**\n     * @method onFocus - Focus event handler\n     */\n\n\n    MonacoAdapter.prototype.onFocus = function onFocus() {\n      this.trigger('focus');\n    };\n    /**\n     * @method onCursorActivity - CursorActivity event handler\n     */\n\n\n    MonacoAdapter.prototype.onCursorActivity = function onCursorActivity() {\n      var _this = this;\n\n      setTimeout(function () {\n        return _this.trigger('cursorActivity');\n      }, 1);\n    };\n    /**\n     * @method applyOperation\n     * @param {Operation} operation - OT.js Operation Object\n     */\n\n\n    MonacoAdapter.prototype.applyOperation = function applyOperation(operation) {\n      if (!operation.isNoop()) {\n        this.ignoreChanges = true;\n      }\n      /** Get Operations List */\n\n\n      var opsList = operation.ops;\n      var index = 0;\n\n      var _this = this;\n\n      opsList.forEach(function (op) {\n        /** Retain Operation */\n        if (op.isRetain()) {\n          index += op.chars;\n        } else if (op.isInsert()) {\n          /** Insert Operation */\n          var pos = _this.monacoModel.getPositionAt(index);\n\n          _this.monaco.executeEdits('my-source', [{\n            range: new monaco.Range(pos.lineNumber, pos.column, pos.lineNumber, pos.column),\n            text: op.text,\n            forceMoveMarkers: true\n          }]);\n\n          index += op.text.length;\n        } else if (op.isDelete()) {\n          /** Delete Operation */\n          var from = _this.monacoModel.getPositionAt(index);\n\n          var to = _this.monacoModel.getPositionAt(index + op.chars);\n\n          _this.monaco.executeEdits('my-source', [{\n            range: new monaco.Range(from.lineNumber, from.column, to.lineNumber, to.column),\n            text: '',\n            forceMoveMarkers: true\n          }]);\n        }\n      });\n      /** Update Editor Content and Reset Config */\n\n      this.lastDocLines = this.monacoModel.getLinesContent();\n      this.ignoreChanges = false;\n    };\n    /**\n     * @method invertOperation\n     * @param {Operation} operation - OT.js Operation Object\n     */\n\n\n    MonacoAdapter.prototype.invertOperation = function invertOperation(operation) {\n      operation.invert(this.getValue());\n    };\n\n    return MonacoAdapter;\n  }();\n  /** Export Module */\n\n\n  firepad.MonacoAdapter = MonacoAdapter;\n  var firepad = firepad || {};\n  firepad.AttributeConstants = {\n    BOLD: 'b',\n    ITALIC: 'i',\n    UNDERLINE: 'u',\n    STRIKE: 's',\n    FONT: 'f',\n    FONT_SIZE: 'fs',\n    COLOR: 'c',\n    BACKGROUND_COLOR: 'bc',\n    ENTITY_SENTINEL: 'ent',\n    // Line Attributes\n    LINE_SENTINEL: 'l',\n    LINE_INDENT: 'li',\n    LINE_ALIGN: 'la',\n    LIST_TYPE: 'lt'\n  };\n  firepad.sentinelConstants = {\n    // A special character we insert at the beginning of lines so we can attach attributes to it to represent\n    // \"line attributes.\"  E000 is from the unicode \"private use\" range.\n    LINE_SENTINEL_CHARACTER: '\\uE000',\n    // A special character used to represent any \"entity\" inserted into the document (e.g. an image).\n    ENTITY_SENTINEL_CHARACTER: '\\uE001'\n  };\n  var firepad = firepad || {};\n\n  firepad.EntityManager = function () {\n    var utils = firepad.utils;\n\n    function EntityManager() {\n      this.entities_ = {};\n      var attrs = ['src', 'alt', 'width', 'height', 'style', 'class'];\n      this.register('img', {\n        render: function (info) {\n          utils.assert(info.src, \"image entity should have 'src'!\");\n          var attrs = ['src', 'alt', 'width', 'height', 'style', 'class'];\n          var html = '<img ';\n\n          for (var i = 0; i < attrs.length; i++) {\n            var attr = attrs[i];\n\n            if (attr in info) {\n              html += ' ' + attr + '=\"' + info[attr] + '\"';\n            }\n          }\n\n          html += \">\";\n          return html;\n        },\n        fromElement: function (element) {\n          var info = {};\n\n          for (var i = 0; i < attrs.length; i++) {\n            var attr = attrs[i];\n\n            if (element.hasAttribute(attr)) {\n              info[attr] = element.getAttribute(attr);\n            }\n          }\n\n          return info;\n        }\n      });\n    }\n\n    EntityManager.prototype.register = function (type, options) {\n      firepad.utils.assert(options.render, \"Entity options should include a 'render' function!\");\n      firepad.utils.assert(options.fromElement, \"Entity options should include a 'fromElement' function!\");\n      this.entities_[type] = options;\n    };\n\n    EntityManager.prototype.renderToElement = function (entity, entityHandle) {\n      return this.tryRenderToElement_(entity, 'render', entityHandle);\n    };\n\n    EntityManager.prototype.exportToElement = function (entity) {\n      // Turns out 'export' is a reserved keyword, so 'getHtml' is preferable.\n      var elt = this.tryRenderToElement_(entity, 'export') || this.tryRenderToElement_(entity, 'getHtml') || this.tryRenderToElement_(entity, 'render');\n      elt.setAttribute('data-firepad-entity', entity.type);\n      return elt;\n    };\n    /* Updates a DOM element to reflect the given entity.\n       If the entity doesn't support the update method, it is fully\n       re-rendered.\n    */\n\n\n    EntityManager.prototype.updateElement = function (entity, element) {\n      var type = entity.type;\n      var info = entity.info;\n\n      if (this.entities_[type] && typeof this.entities_[type].update != 'undefined') {\n        this.entities_[type].update(info, element);\n      }\n    };\n\n    EntityManager.prototype.fromElement = function (element) {\n      var type = element.getAttribute('data-firepad-entity'); // HACK.  This should be configurable through entity registration.\n\n      if (!type) type = element.nodeName.toLowerCase();\n\n      if (type && this.entities_[type]) {\n        var info = this.entities_[type].fromElement(element);\n        return new firepad.Entity(type, info);\n      }\n    };\n\n    EntityManager.prototype.tryRenderToElement_ = function (entity, renderFn, entityHandle) {\n      var type = entity.type,\n          info = entity.info;\n\n      if (this.entities_[type] && this.entities_[type][renderFn]) {\n        var windowDocument = firepad.document || window && window.document;\n        var res = this.entities_[type][renderFn](info, entityHandle, windowDocument);\n\n        if (res) {\n          if (typeof res === 'string') {\n            var div = (firepad.document || document).createElement('div');\n            div.innerHTML = res;\n            return div.childNodes[0];\n          } else if (typeof res === 'object') {\n            firepad.utils.assert(typeof res.nodeType !== 'undefined', 'Error rendering ' + type + ' entity.  render() function' + ' must return an html string or a DOM element.');\n            return res;\n          }\n        }\n      }\n    };\n\n    EntityManager.prototype.entitySupportsUpdate = function (entityType) {\n      return this.entities_[entityType] && this.entities_[entityType]['update'];\n    };\n\n    return EntityManager;\n  }();\n\n  var firepad = firepad || {};\n  /**\n   * Object to represent an Entity.\n   */\n\n  firepad.Entity = function () {\n    var ATTR = firepad.AttributeConstants;\n    var SENTINEL = ATTR.ENTITY_SENTINEL;\n    var PREFIX = SENTINEL + '_';\n\n    function Entity(type, info) {\n      // Allow calling without new.\n      if (!(this instanceof Entity)) {\n        return new Entity(type, info);\n      }\n\n      this.type = type;\n      this.info = info || {};\n    }\n\n    Entity.prototype.toAttributes = function () {\n      var attrs = {};\n      attrs[SENTINEL] = this.type;\n\n      for (var attr in this.info) {\n        attrs[PREFIX + attr] = this.info[attr];\n      }\n\n      return attrs;\n    };\n\n    Entity.fromAttributes = function (attributes) {\n      var type = attributes[SENTINEL];\n      var info = {};\n\n      for (var attr in attributes) {\n        if (attr.indexOf(PREFIX) === 0) {\n          info[attr.substr(PREFIX.length)] = attributes[attr];\n        }\n      }\n\n      return new Entity(type, info);\n    };\n\n    return Entity;\n  }();\n\n  var firepad = firepad || {};\n\n  firepad.RichTextCodeMirror = function () {\n    var AnnotationList = firepad.AnnotationList;\n    var Span = firepad.Span;\n    var utils = firepad.utils;\n    var ATTR = firepad.AttributeConstants;\n    var RichTextClassPrefixDefault = 'cmrt-';\n    var RichTextOriginPrefix = 'cmrt-'; // These attributes will have styles generated dynamically in the page.\n\n    var DynamicStyleAttributes = {\n      'c': 'color',\n      'bc': 'background-color',\n      'fs': 'font-size',\n      'li': function (indent) {\n        return 'padding-left: ' + indent * 40 + 'px';\n      }\n    }; // A cache of dynamically-created styles so we can re-use them.\n\n    var StyleCache_ = {};\n\n    function RichTextCodeMirror(codeMirror, entityManager, options) {\n      this.codeMirror = codeMirror;\n      this.options_ = options || {};\n      this.entityManager_ = entityManager;\n      this.currentAttributes_ = null;\n      var self = this;\n      this.annotationList_ = new AnnotationList(function (oldNodes, newNodes) {\n        self.onAnnotationsChanged_(oldNodes, newNodes);\n      }); // Ensure annotationList is in sync with any existing codemirror contents.\n\n      this.initAnnotationList_();\n      bind(this, 'onCodeMirrorBeforeChange_');\n      bind(this, 'onCodeMirrorChange_');\n      bind(this, 'onCursorActivity_');\n\n      if (parseInt(CodeMirror.version) >= 4) {\n        this.codeMirror.on('changes', this.onCodeMirrorChange_);\n      } else {\n        this.codeMirror.on('change', this.onCodeMirrorChange_);\n      }\n\n      this.codeMirror.on('beforeChange', this.onCodeMirrorBeforeChange_);\n      this.codeMirror.on('cursorActivity', this.onCursorActivity_);\n      this.changeId_ = 0;\n      this.outstandingChanges_ = {};\n      this.dirtyLines_ = [];\n    }\n\n    utils.makeEventEmitter(RichTextCodeMirror, ['change', 'attributesChange', 'newLine']);\n    var LineSentinelCharacter = firepad.sentinelConstants.LINE_SENTINEL_CHARACTER;\n    var EntitySentinelCharacter = firepad.sentinelConstants.ENTITY_SENTINEL_CHARACTER;\n\n    RichTextCodeMirror.prototype.detach = function () {\n      this.codeMirror.off('beforeChange', this.onCodeMirrorBeforeChange_);\n      this.codeMirror.off('change', this.onCodeMirrorChange_);\n      this.codeMirror.off('changes', this.onCodeMirrorChange_);\n      this.codeMirror.off('cursorActivity', this.onCursorActivity_);\n      this.clearAnnotations_();\n    };\n\n    RichTextCodeMirror.prototype.toggleAttribute = function (attribute, value) {\n      var trueValue = value || true;\n\n      if (this.emptySelection_()) {\n        var attrs = this.getCurrentAttributes_();\n\n        if (attrs[attribute] === trueValue) {\n          delete attrs[attribute];\n        } else {\n          attrs[attribute] = trueValue;\n        }\n\n        this.currentAttributes_ = attrs;\n      } else {\n        var attributes = this.getCurrentAttributes_();\n        var newValue = attributes[attribute] !== trueValue ? trueValue : false;\n        this.setAttribute(attribute, newValue);\n      }\n    };\n\n    RichTextCodeMirror.prototype.setAttribute = function (attribute, value) {\n      var cm = this.codeMirror;\n\n      if (this.emptySelection_()) {\n        var attrs = this.getCurrentAttributes_();\n\n        if (value === false) {\n          delete attrs[attribute];\n        } else {\n          attrs[attribute] = value;\n        }\n\n        this.currentAttributes_ = attrs;\n      } else {\n        this.updateTextAttributes(cm.indexFromPos(cm.getCursor('start')), cm.indexFromPos(cm.getCursor('end')), function (attributes) {\n          if (value === false) {\n            delete attributes[attribute];\n          } else {\n            attributes[attribute] = value;\n          }\n        });\n        this.updateCurrentAttributes_();\n      }\n    };\n\n    RichTextCodeMirror.prototype.updateTextAttributes = function (start, end, updateFn, origin, doLineAttributes) {\n      var newChanges = [];\n      var pos = start,\n          self = this;\n      this.annotationList_.updateSpan(new Span(start, end - start), function (annotation, length) {\n        var attributes = {};\n\n        for (var attr in annotation.attributes) {\n          attributes[attr] = annotation.attributes[attr];\n        } // Don't modify if this is a line sentinel.\n\n\n        if (!attributes[ATTR.LINE_SENTINEL] || doLineAttributes) updateFn(attributes); // changedAttributes will be the attributes we changed, with their new values.\n        // changedAttributesInverse will be the attributes we changed, with their old values.\n\n        var changedAttributes = {},\n            changedAttributesInverse = {};\n        self.computeChangedAttributes_(annotation.attributes, attributes, changedAttributes, changedAttributesInverse);\n\n        if (!emptyAttributes(changedAttributes)) {\n          newChanges.push({\n            start: pos,\n            end: pos + length,\n            attributes: changedAttributes,\n            attributesInverse: changedAttributesInverse,\n            origin: origin\n          });\n        }\n\n        pos += length;\n        return new RichTextAnnotation(attributes);\n      });\n\n      if (newChanges.length > 0) {\n        this.trigger('attributesChange', this, newChanges);\n      }\n    };\n\n    RichTextCodeMirror.prototype.computeChangedAttributes_ = function (oldAttrs, newAttrs, changed, inverseChanged) {\n      var attrs = {},\n          attr;\n\n      for (attr in oldAttrs) {\n        attrs[attr] = true;\n      }\n\n      for (attr in newAttrs) {\n        attrs[attr] = true;\n      }\n\n      for (attr in attrs) {\n        if (!(attr in newAttrs)) {\n          // it was removed.\n          changed[attr] = false;\n          inverseChanged[attr] = oldAttrs[attr];\n        } else if (!(attr in oldAttrs)) {\n          // it was added.\n          changed[attr] = newAttrs[attr];\n          inverseChanged[attr] = false;\n        } else if (oldAttrs[attr] !== newAttrs[attr]) {\n          // it was changed.\n          changed[attr] = newAttrs[attr];\n          inverseChanged[attr] = oldAttrs[attr];\n        }\n      }\n    };\n\n    RichTextCodeMirror.prototype.toggleLineAttribute = function (attribute, value) {\n      var currentAttributes = this.getCurrentLineAttributes_();\n      var newValue;\n\n      if (!(attribute in currentAttributes) || currentAttributes[attribute] !== value) {\n        newValue = value;\n      } else {\n        newValue = false;\n      }\n\n      this.setLineAttribute(attribute, newValue);\n    };\n\n    RichTextCodeMirror.prototype.setLineAttribute = function (attribute, value) {\n      this.updateLineAttributesForSelection(function (attributes) {\n        if (value === false) {\n          delete attributes[attribute];\n        } else {\n          attributes[attribute] = value;\n        }\n      });\n    };\n\n    RichTextCodeMirror.prototype.updateLineAttributesForSelection = function (updateFn) {\n      var cm = this.codeMirror;\n      var start = cm.getCursor('start'),\n          end = cm.getCursor('end');\n      var startLine = start.line,\n          endLine = end.line;\n      var endLineText = cm.getLine(endLine);\n      var endsAtBeginningOfLine = this.areLineSentinelCharacters_(endLineText.substr(0, end.ch));\n\n      if (endLine > startLine && endsAtBeginningOfLine) {\n        // If the selection ends at the beginning of a line, don't include that line.\n        endLine--;\n      }\n\n      this.updateLineAttributes(startLine, endLine, updateFn);\n    };\n\n    RichTextCodeMirror.prototype.updateLineAttributes = function (startLine, endLine, updateFn) {\n      // TODO: Batch this into a single operation somehow.\n      for (var line = startLine; line <= endLine; line++) {\n        var text = this.codeMirror.getLine(line);\n        var lineStartIndex = this.codeMirror.indexFromPos({\n          line: line,\n          ch: 0\n        }); // Create line sentinel character if necessary.\n\n        if (text[0] !== LineSentinelCharacter) {\n          var attributes = {};\n          attributes[ATTR.LINE_SENTINEL] = true;\n          updateFn(attributes);\n          this.insertText(lineStartIndex, LineSentinelCharacter, attributes);\n        } else {\n          this.updateTextAttributes(lineStartIndex, lineStartIndex + 1, updateFn,\n          /*origin=*/\n          null,\n          /*doLineAttributes=*/\n          true);\n        }\n      }\n    };\n\n    RichTextCodeMirror.prototype.replaceText = function (start, end, text, attributes, origin) {\n      this.changeId_++;\n      var newOrigin = RichTextOriginPrefix + this.changeId_;\n      this.outstandingChanges_[newOrigin] = {\n        origOrigin: origin,\n        attributes: attributes\n      };\n      var cm = this.codeMirror;\n      var from = cm.posFromIndex(start);\n      var to = typeof end === 'number' ? cm.posFromIndex(end) : null;\n      cm.replaceRange(text, from, to, newOrigin);\n    };\n\n    RichTextCodeMirror.prototype.insertText = function (index, text, attributes, origin) {\n      var cm = this.codeMirror;\n      var cursor = cm.getCursor();\n      var resetCursor = origin == 'RTCMADAPTER' && !cm.somethingSelected() && index == cm.indexFromPos(cursor);\n      this.replaceText(index, null, text, attributes, origin);\n      if (resetCursor) cm.setCursor(cursor);\n    };\n\n    RichTextCodeMirror.prototype.removeText = function (start, end, origin) {\n      var cm = this.codeMirror;\n      cm.replaceRange(\"\", cm.posFromIndex(start), cm.posFromIndex(end), origin);\n    };\n\n    RichTextCodeMirror.prototype.insertEntityAtCursor = function (type, info, origin) {\n      var cm = this.codeMirror;\n      var index = cm.indexFromPos(cm.getCursor('head'));\n      this.insertEntityAt(index, type, info, origin);\n    };\n\n    RichTextCodeMirror.prototype.insertEntityAt = function (index, type, info, origin) {\n      var cm = this.codeMirror;\n      this.insertEntity_(index, new firepad.Entity(type, info), origin);\n    };\n\n    RichTextCodeMirror.prototype.insertEntity_ = function (index, entity, origin) {\n      this.replaceText(index, null, EntitySentinelCharacter, entity.toAttributes(), origin);\n    };\n\n    RichTextCodeMirror.prototype.getAttributeSpans = function (start, end) {\n      var spans = [];\n      var annotatedSpans = this.annotationList_.getAnnotatedSpansForSpan(new Span(start, end - start));\n\n      for (var i = 0; i < annotatedSpans.length; i++) {\n        spans.push({\n          length: annotatedSpans[i].length,\n          attributes: annotatedSpans[i].annotation.attributes\n        });\n      }\n\n      return spans;\n    };\n\n    RichTextCodeMirror.prototype.end = function () {\n      var lastLine = this.codeMirror.lineCount() - 1;\n      return this.codeMirror.indexFromPos({\n        line: lastLine,\n        ch: this.codeMirror.getLine(lastLine).length\n      });\n    };\n\n    RichTextCodeMirror.prototype.getRange = function (start, end) {\n      var from = this.codeMirror.posFromIndex(start),\n          to = this.codeMirror.posFromIndex(end);\n      return this.codeMirror.getRange(from, to);\n    };\n\n    RichTextCodeMirror.prototype.initAnnotationList_ = function () {\n      // Insert empty annotation span for existing content.\n      var end = this.end();\n\n      if (end !== 0) {\n        this.annotationList_.insertAnnotatedSpan(new Span(0, end), new RichTextAnnotation());\n      }\n    };\n    /**\n     * Updates the nodes of an Annotation.\n     * @param {Array.<OldAnnotatedSpan>} oldNodes The list of nodes to replace.\n     * @param {Array.<NewAnnotatedSpan>} newNodes The new list of nodes.\n     */\n\n\n    RichTextCodeMirror.prototype.onAnnotationsChanged_ = function (oldNodes, newNodes) {\n      var marker;\n      var linesToReMark = {}; // Update any entities in-place that we can.  This will remove them from the oldNodes/newNodes lists\n      // so we don't remove and recreate them below.\n\n      this.tryToUpdateEntitiesInPlace(oldNodes, newNodes);\n\n      for (var i = 0; i < oldNodes.length; i++) {\n        var attributes = oldNodes[i].annotation.attributes;\n\n        if (ATTR.LINE_SENTINEL in attributes) {\n          linesToReMark[this.codeMirror.posFromIndex(oldNodes[i].pos).line] = true;\n        }\n\n        marker = oldNodes[i].getAttachedObject();\n\n        if (marker) {\n          marker.clear();\n        }\n      }\n\n      for (i = 0; i < newNodes.length; i++) {\n        var annotation = newNodes[i].annotation;\n        var forLine = (ATTR.LINE_SENTINEL in annotation.attributes);\n        var entity = (ATTR.ENTITY_SENTINEL in annotation.attributes);\n        var from = this.codeMirror.posFromIndex(newNodes[i].pos);\n\n        if (forLine) {\n          linesToReMark[from.line] = true;\n        } else if (entity) {\n          this.markEntity_(newNodes[i]);\n        } else {\n          var className = this.getClassNameForAttributes_(annotation.attributes);\n\n          if (className !== '') {\n            var to = this.codeMirror.posFromIndex(newNodes[i].pos + newNodes[i].length);\n            marker = this.codeMirror.markText(from, to, {\n              className: className\n            });\n            newNodes[i].attachObject(marker);\n          }\n        }\n      }\n\n      for (var line in linesToReMark) {\n        this.dirtyLines_.push(this.codeMirror.getLineHandle(Number(line)));\n        this.queueLineMarking_();\n      }\n    };\n\n    RichTextCodeMirror.prototype.tryToUpdateEntitiesInPlace = function (oldNodes, newNodes) {\n      // Loop over nodes in reverse order so we can easily splice them out as necessary.\n      var oldNodesLen = oldNodes.length;\n\n      while (oldNodesLen--) {\n        var oldNode = oldNodes[oldNodesLen];\n        var newNodesLen = newNodes.length;\n\n        while (newNodesLen--) {\n          var newNode = newNodes[newNodesLen];\n\n          if (oldNode.pos == newNode.pos && oldNode.length == newNode.length && oldNode.annotation.attributes['ent'] && oldNode.annotation.attributes['ent'] == newNode.annotation.attributes['ent']) {\n            var entityType = newNode.annotation.attributes['ent'];\n\n            if (this.entityManager_.entitySupportsUpdate(entityType)) {\n              // Update it in place and remove the change from oldNodes / newNodes so we don't process it below.\n              oldNodes.splice(oldNodesLen, 1);\n              newNodes.splice(newNodesLen, 1);\n              var marker = oldNode.getAttachedObject();\n              marker.update(newNode.annotation.attributes);\n              newNode.attachObject(marker);\n            }\n          }\n        }\n      }\n    };\n\n    RichTextCodeMirror.prototype.queueLineMarking_ = function () {\n      if (this.lineMarkTimeout_ != null) return;\n      var self = this;\n      this.lineMarkTimeout_ = setTimeout(function () {\n        self.lineMarkTimeout_ = null;\n        var dirtyLineNumbers = [];\n\n        for (var i = 0; i < self.dirtyLines_.length; i++) {\n          var lineNum = self.codeMirror.getLineNumber(self.dirtyLines_[i]);\n          dirtyLineNumbers.push(Number(lineNum));\n        }\n\n        self.dirtyLines_ = [];\n        dirtyLineNumbers.sort(function (a, b) {\n          return a - b;\n        });\n        var lastLineMarked = -1;\n\n        for (i = 0; i < dirtyLineNumbers.length; i++) {\n          var lineNumber = dirtyLineNumbers[i];\n\n          if (lineNumber > lastLineMarked) {\n            lastLineMarked = self.markLineSentinelCharactersForChangedLines_(lineNumber, lineNumber);\n          }\n        }\n      }, 0);\n    };\n\n    RichTextCodeMirror.prototype.addStyleWithCSS_ = function (css) {\n      var head = document.getElementsByTagName('head')[0],\n          style = document.createElement('style');\n      style.type = 'text/css';\n\n      if (style.styleSheet) {\n        style.styleSheet.cssText = css;\n      } else {\n        style.appendChild(document.createTextNode(css));\n      }\n\n      head.appendChild(style);\n    };\n\n    RichTextCodeMirror.prototype.getClassNameForAttributes_ = function (attributes) {\n      var globalClassName = '';\n\n      for (var attr in attributes) {\n        var val = attributes[attr];\n\n        if (attr === ATTR.LINE_SENTINEL) {\n          firepad.utils.assert(val === true, \"LINE_SENTINEL attribute should be true if it exists.\");\n        } else {\n          var className = (this.options_['cssPrefix'] || RichTextClassPrefixDefault) + attr;\n\n          if (val !== true) {\n            // Append \"px\" to font size if it's missing.\n            // Probably could be removed now as parseHtml automatically adds px when required\n            if (attr === ATTR.FONT_SIZE && typeof val !== \"string\") {\n              val = val + \"px\";\n            }\n\n            var classVal = val.toString().toLowerCase().replace(/[^a-z0-9-_]/g, '-');\n            className += '-' + classVal;\n\n            if (DynamicStyleAttributes[attr]) {\n              if (!StyleCache_[attr]) StyleCache_[attr] = {};\n\n              if (!StyleCache_[attr][classVal]) {\n                StyleCache_[attr][classVal] = true;\n                var dynStyle = DynamicStyleAttributes[attr];\n                var css = typeof dynStyle === 'function' ? dynStyle(val) : dynStyle + \": \" + val;\n                var selector = attr == ATTR.LINE_INDENT ? 'pre.' + className : '.' + className;\n                this.addStyleWithCSS_(selector + ' { ' + css + ' }'); // As of v5.48, CodeMirror applies its own pre style which conflicts with ours, so we\n                // need to make sure we add our styles with a more-specific css selector as well.\n\n                if (attr === ATTR.LINE_INDENT) {\n                  var selector = 'pre.CodeMirror-line.' + className;\n                  this.addStyleWithCSS_(selector + ' { ' + css + ' }');\n                }\n              }\n            }\n          }\n\n          globalClassName = globalClassName + ' ' + className;\n        }\n      }\n\n      return globalClassName;\n    };\n\n    RichTextCodeMirror.prototype.markEntity_ = function (annotationNode) {\n      var attributes = annotationNode.annotation.attributes;\n      var entity = firepad.Entity.fromAttributes(attributes);\n      var cm = this.codeMirror;\n      var self = this;\n      var markers = [];\n\n      for (var i = 0; i < annotationNode.length; i++) {\n        var from = cm.posFromIndex(annotationNode.pos + i);\n        var to = cm.posFromIndex(annotationNode.pos + i + 1);\n        var options = {\n          collapsed: true,\n          atomic: true,\n          inclusiveLeft: false,\n          inclusiveRight: false\n        };\n        var entityHandle = this.createEntityHandle_(entity, annotationNode.pos);\n        var element = this.entityManager_.renderToElement(entity, entityHandle);\n\n        if (element) {\n          options.replacedWith = element;\n        }\n\n        var marker = cm.markText(from, to, options);\n        markers.push(marker);\n        entityHandle.setMarker(marker);\n      }\n\n      annotationNode.attachObject({\n        clear: function () {\n          for (var i = 0; i < markers.length; i++) {\n            markers[i].clear();\n          }\n        },\n\n        /**\n         * Updates the attributes of all the AnnotationNode entities.\n         * @param {Object.<string, string>} info The full list of new\n         *     attributes to apply.\n         */\n        update: function (info) {\n          var entity = firepad.Entity.fromAttributes(info);\n\n          for (var i = 0; i < markers.length; i++) {\n            self.entityManager_.updateElement(entity, markers[i].replacedWith);\n          }\n        }\n      }); // This probably shouldn't be necessary.  There must be a lurking CodeMirror bug.\n\n      this.queueRefresh_();\n    };\n\n    RichTextCodeMirror.prototype.queueRefresh_ = function () {\n      var self = this;\n\n      if (!this.refreshTimer_) {\n        this.refreshTimer_ = setTimeout(function () {\n          self.codeMirror.refresh();\n          self.refreshTimer_ = null;\n        }, 0);\n      }\n    };\n\n    RichTextCodeMirror.prototype.createEntityHandle_ = function (entity, location) {\n      var marker = null;\n      var self = this;\n\n      function find() {\n        if (marker) {\n          var where = marker.find();\n          return where ? self.codeMirror.indexFromPos(where.from) : null;\n        } else {\n          return location;\n        }\n      }\n\n      function remove() {\n        var at = find();\n\n        if (at != null) {\n          self.codeMirror.focus();\n          self.removeText(at, at + 1);\n        }\n      }\n      /**\n       * Updates the attributes of an Entity.  Will call .update() if the entity supports it,\n       * else it'll just remove / re-create the entity.\n       * @param {Object.<string, string>} info The full list of new\n       *     attributes to apply.\n       */\n\n\n      function replace(info) {\n        var ATTR = firepad.AttributeConstants;\n        var SENTINEL = ATTR.ENTITY_SENTINEL;\n        var PREFIX = SENTINEL + '_';\n        var at = find();\n        self.updateTextAttributes(at, at + 1, function (attrs) {\n          for (var member in attrs) {\n            delete attrs[member];\n          }\n\n          attrs[SENTINEL] = entity.type;\n\n          for (var attr in info) {\n            attrs[PREFIX + attr] = info[attr];\n          }\n        });\n      }\n\n      function setMarker(m) {\n        marker = m;\n      }\n\n      return {\n        find: find,\n        remove: remove,\n        replace: replace,\n        setMarker: setMarker\n      };\n    };\n\n    RichTextCodeMirror.prototype.lineClassRemover_ = function (lineNum) {\n      var cm = this.codeMirror;\n      var lineHandle = cm.getLineHandle(lineNum);\n      return {\n        clear: function () {\n          // HACK to remove all classes (since CodeMirror treats this as a regex internally).\n          cm.removeLineClass(lineHandle, \"text\", \".*\");\n        }\n      };\n    };\n\n    RichTextCodeMirror.prototype.emptySelection_ = function () {\n      var start = this.codeMirror.getCursor('start'),\n          end = this.codeMirror.getCursor('end');\n      return start.line === end.line && start.ch === end.ch;\n    };\n\n    RichTextCodeMirror.prototype.onCodeMirrorBeforeChange_ = function (cm, change) {\n      // Remove LineSentinelCharacters from incoming input (e.g copy/pasting)\n      if (change.origin === '+input' || change.origin === 'paste') {\n        var newText = [];\n\n        for (var i = 0; i < change.text.length; i++) {\n          var t = change.text[i];\n          t = t.replace(new RegExp('[' + LineSentinelCharacter + EntitySentinelCharacter + ']', 'g'), '');\n          newText.push(t);\n        }\n\n        change.update(change.from, change.to, newText);\n      }\n    };\n\n    function cmpPos(a, b) {\n      return a.line - b.line || a.ch - b.ch;\n    }\n\n    function posEq(a, b) {\n      return cmpPos(a, b) === 0;\n    }\n\n    function posLe(a, b) {\n      return cmpPos(a, b) <= 0;\n    }\n\n    function last(arr) {\n      return arr[arr.length - 1];\n    }\n\n    function sumLengths(strArr) {\n      if (strArr.length === 0) {\n        return 0;\n      }\n\n      var sum = 0;\n\n      for (var i = 0; i < strArr.length; i++) {\n        sum += strArr[i].length;\n      }\n\n      return sum + strArr.length - 1;\n    }\n\n    RichTextCodeMirror.prototype.onCodeMirrorChange_ = function (cm, cmChanges) {\n      // Handle single change objects and linked lists of change objects.\n      if (typeof cmChanges.from === 'object') {\n        var changeArray = [];\n\n        while (cmChanges) {\n          changeArray.push(cmChanges);\n          cmChanges = cmChanges.next;\n        }\n\n        cmChanges = changeArray;\n      }\n\n      var changes = this.convertCoordinateSystemForChanges_(cmChanges);\n      var newChanges = [];\n\n      for (var i = 0; i < changes.length; i++) {\n        var change = changes[i];\n        var start = change.start,\n            end = change.end,\n            text = change.text,\n            removed = change.removed,\n            origin = change.origin; // When text with multiple sets of attributes on it is removed, we need to split it into separate remove changes.\n\n        if (removed.length > 0) {\n          var oldAnnotationSpans = this.annotationList_.getAnnotatedSpansForSpan(new Span(start, removed.length));\n          var removedPos = 0;\n\n          for (var j = 0; j < oldAnnotationSpans.length; j++) {\n            var span = oldAnnotationSpans[j];\n            newChanges.push({\n              start: start,\n              end: start + span.length,\n              removedAttributes: span.annotation.attributes,\n              removed: removed.substr(removedPos, span.length),\n              attributes: {},\n              text: \"\",\n              origin: change.origin\n            });\n            removedPos += span.length;\n          }\n\n          this.annotationList_.removeSpan(new Span(start, removed.length));\n        }\n\n        if (text.length > 0) {\n          var attributes; // TODO: Handle 'paste' differently?\n\n          if (change.origin === '+input' || change.origin === 'paste') {\n            attributes = this.currentAttributes_ || {};\n          } else if (origin in this.outstandingChanges_) {\n            attributes = this.outstandingChanges_[origin].attributes;\n            origin = this.outstandingChanges_[origin].origOrigin;\n            delete this.outstandingChanges_[origin];\n          } else {\n            attributes = {};\n          }\n\n          this.annotationList_.insertAnnotatedSpan(new Span(start, text.length), new RichTextAnnotation(attributes));\n          newChanges.push({\n            start: start,\n            end: start,\n            removedAttributes: {},\n            removed: \"\",\n            text: text,\n            attributes: attributes,\n            origin: origin\n          });\n        }\n      }\n\n      this.markLineSentinelCharactersForChanges_(cmChanges);\n\n      if (newChanges.length > 0) {\n        this.trigger('change', this, newChanges);\n      }\n    };\n\n    RichTextCodeMirror.prototype.convertCoordinateSystemForChanges_ = function (changes) {\n      // We have to convert the positions in the pre-change coordinate system to indexes.\n      // CodeMirror's `indexFromPos` method does this for the current state of the editor.\n      // We can use the information of a single change object to convert a post-change\n      // coordinate system to a pre-change coordinate system. We can now proceed inductively\n      // to get a pre-change coordinate system for all changes in the linked list.  A\n      // disadvantage of this approach is its complexity `O(n^2)` in the length of the\n      // linked list of changes.\n      var self = this;\n\n      var indexFromPos = function (pos) {\n        return self.codeMirror.indexFromPos(pos);\n      };\n\n      function updateIndexFromPos(indexFromPos, change) {\n        return function (pos) {\n          if (posLe(pos, change.from)) {\n            return indexFromPos(pos);\n          }\n\n          if (posLe(change.to, pos)) {\n            return indexFromPos({\n              line: pos.line + change.text.length - 1 - (change.to.line - change.from.line),\n              ch: change.to.line < pos.line ? pos.ch : change.text.length <= 1 ? pos.ch - (change.to.ch - change.from.ch) + sumLengths(change.text) : pos.ch - change.to.ch + last(change.text).length\n            }) + sumLengths(change.removed) - sumLengths(change.text);\n          }\n\n          if (change.from.line === pos.line) {\n            return indexFromPos(change.from) + pos.ch - change.from.ch;\n          }\n\n          return indexFromPos(change.from) + sumLengths(change.removed.slice(0, pos.line - change.from.line)) + 1 + pos.ch;\n        };\n      }\n\n      var newChanges = [];\n\n      for (var i = changes.length - 1; i >= 0; i--) {\n        var change = changes[i];\n        indexFromPos = updateIndexFromPos(indexFromPos, change);\n        var start = indexFromPos(change.from);\n        var removedText = change.removed.join('\\n');\n        var text = change.text.join('\\n');\n        newChanges.unshift({\n          start: start,\n          end: start + removedText.length,\n          removed: removedText,\n          text: text,\n          origin: change.origin\n        });\n      }\n\n      return newChanges;\n    };\n    /**\n     * Detects whether any line sentinel characters were added or removed by the change and if so,\n     * re-marks line sentinel characters on the affected range of lines.\n     * @param changes\n     * @private\n     */\n\n\n    RichTextCodeMirror.prototype.markLineSentinelCharactersForChanges_ = function (changes) {\n      // TODO: This doesn't handle multiple changes correctly (overlapping, out-of-oder, etc.).\n      // But In practice, people using firepad for rich-text editing don't batch multiple changes\n      // together, so this isn't quite as bad as it seems.\n      var startLine = Number.MAX_VALUE,\n          endLine = -1;\n\n      for (var i = 0; i < changes.length; i++) {\n        var change = changes[i];\n        var line = change.from.line,\n            ch = change.from.ch;\n\n        if (change.removed.length > 1 || change.removed[0].indexOf(LineSentinelCharacter) >= 0) {\n          // We removed 1+ newlines or line sentinel characters.\n          startLine = Math.min(startLine, line);\n          endLine = Math.max(endLine, line);\n        }\n\n        if (change.text.length > 1) {\n          // 1+ newlines\n          startLine = Math.min(startLine, line);\n          endLine = Math.max(endLine, line + change.text.length - 1);\n        } else if (change.text[0].indexOf(LineSentinelCharacter) >= 0) {\n          startLine = Math.min(startLine, line);\n          endLine = Math.max(endLine, line);\n        }\n      } // HACK: Because the above code doesn't handle multiple changes correctly, endLine might be invalid.  To\n      // avoid crashing, we just cap it at the line count.\n\n\n      endLine = Math.min(endLine, this.codeMirror.lineCount() - 1);\n      this.markLineSentinelCharactersForChangedLines_(startLine, endLine);\n    };\n\n    RichTextCodeMirror.prototype.markLineSentinelCharactersForChangedLines_ = function (startLine, endLine) {\n      // Back up to first list item.\n      if (startLine < Number.MAX_VALUE) {\n        while (startLine > 0 && this.lineIsListItemOrIndented_(startLine - 1)) {\n          startLine--;\n        }\n      } // Advance to last list item.\n\n\n      if (endLine > -1) {\n        var lineCount = this.codeMirror.lineCount();\n\n        while (endLine + 1 < lineCount && this.lineIsListItemOrIndented_(endLine + 1)) {\n          endLine++;\n        }\n      } // keeps track of the list number at each indent level.\n\n\n      var listNumber = [];\n      var cm = this.codeMirror;\n\n      for (var line = startLine; line <= endLine; line++) {\n        var text = cm.getLine(line); // Remove any existing line classes.\n\n        var lineHandle = cm.getLineHandle(line);\n        cm.removeLineClass(lineHandle, \"text\", \".*\");\n\n        if (text.length > 0) {\n          var markIndex = text.indexOf(LineSentinelCharacter);\n\n          while (markIndex >= 0) {\n            var markStartIndex = markIndex; // Find the end of this series of sentinel characters, and remove any existing markers.\n\n            while (markIndex < text.length && text[markIndex] === LineSentinelCharacter) {\n              var marks = cm.findMarksAt({\n                line: line,\n                ch: markIndex\n              });\n\n              for (var i = 0; i < marks.length; i++) {\n                if (marks[i].isForLineSentinel) {\n                  marks[i].clear();\n                }\n              }\n\n              markIndex++;\n            }\n\n            this.markLineSentinelCharacters_(line, markStartIndex, markIndex, listNumber);\n            markIndex = text.indexOf(LineSentinelCharacter, markIndex);\n          }\n        } else {\n          // Reset all indents.\n          listNumber = [];\n        }\n      }\n\n      return endLine;\n    };\n\n    RichTextCodeMirror.prototype.markLineSentinelCharacters_ = function (line, startIndex, endIndex, listNumber) {\n      var cm = this.codeMirror; // If the mark is at the beginning of the line and it represents a list element, we need to replace it with\n      // the appropriate html element for the list heading.\n\n      var element = null;\n      var marker = null;\n\n      var getMarkerLine = function () {\n        var span = marker.find();\n        return span ? span.from.line : null;\n      };\n\n      if (startIndex === 0) {\n        var attributes = this.getLineAttributes_(line);\n        var listType = attributes[ATTR.LIST_TYPE];\n        var indent = attributes[ATTR.LINE_INDENT] || 0;\n\n        if (listType && indent === 0) {\n          indent = 1;\n        }\n\n        while (indent >= listNumber.length) {\n          listNumber.push(1);\n        }\n\n        if (listType === 'o') {\n          element = this.makeOrderedListElement_(listNumber[indent]);\n          listNumber[indent]++;\n        } else if (listType === 'u') {\n          element = this.makeUnorderedListElement_();\n          listNumber[indent] = 1;\n        } else if (listType === 't') {\n          element = this.makeTodoListElement_(false, getMarkerLine);\n          listNumber[indent] = 1;\n        } else if (listType === 'tc') {\n          element = this.makeTodoListElement_(true, getMarkerLine);\n          listNumber[indent] = 1;\n        }\n\n        var className = this.getClassNameForAttributes_(attributes);\n\n        if (className !== '') {\n          this.codeMirror.addLineClass(line, \"text\", className);\n        } // Reset deeper indents back to 1.\n\n\n        listNumber[indent + 1] = 1;\n      } // Create a marker to cover this series of sentinel characters.\n      // NOTE: The reason we treat them as a group (one marker for all subsequent sentinel characters instead of\n      // one marker for each sentinel character) is that CodeMirror seems to get angry if we don't.\n\n\n      var markerOptions = {\n        inclusiveLeft: true,\n        collapsed: true\n      };\n\n      if (element) {\n        markerOptions.replacedWith = element;\n      }\n\n      var marker = cm.markText({\n        line: line,\n        ch: startIndex\n      }, {\n        line: line,\n        ch: endIndex\n      }, markerOptions); // track that it's a line-sentinel character so we can identify it later.\n\n      marker.isForLineSentinel = true;\n    };\n\n    RichTextCodeMirror.prototype.makeOrderedListElement_ = function (number) {\n      return utils.elt('div', number + '.', {\n        'class': 'firepad-list-left'\n      });\n    };\n\n    RichTextCodeMirror.prototype.makeUnorderedListElement_ = function () {\n      return utils.elt('div', '\\u2022', {\n        'class': 'firepad-list-left'\n      });\n    };\n\n    RichTextCodeMirror.prototype.toggleTodo = function (noRemove) {\n      var attribute = ATTR.LIST_TYPE;\n      var currentAttributes = this.getCurrentLineAttributes_();\n      var newValue;\n\n      if (!(attribute in currentAttributes) || currentAttributes[attribute] !== 't' && currentAttributes[attribute] !== 'tc') {\n        newValue = 't';\n      } else if (currentAttributes[attribute] === 't') {\n        newValue = 'tc';\n      } else if (currentAttributes[attribute] === 'tc') {\n        newValue = noRemove ? 't' : false;\n      }\n\n      this.setLineAttribute(attribute, newValue);\n    };\n\n    RichTextCodeMirror.prototype.makeTodoListElement_ = function (checked, getMarkerLine) {\n      var params = {\n        'type': \"checkbox\",\n        'class': 'firepad-todo-left'\n      };\n      if (checked) params['checked'] = true;\n      var el = utils.elt('input', false, params);\n      var self = this;\n      utils.on(el, 'click', utils.stopEventAnd(function (e) {\n        self.codeMirror.setCursor({\n          line: getMarkerLine(),\n          ch: 1\n        });\n        self.toggleTodo(true);\n      }));\n      return el;\n    };\n\n    RichTextCodeMirror.prototype.lineIsListItemOrIndented_ = function (lineNum) {\n      var attrs = this.getLineAttributes_(lineNum);\n      return (attrs[ATTR.LIST_TYPE] || false) !== false || (attrs[ATTR.LINE_INDENT] || 0) !== 0;\n    };\n\n    RichTextCodeMirror.prototype.onCursorActivity_ = function () {\n      var self = this;\n      setTimeout(function () {\n        self.updateCurrentAttributes_();\n      }, 1);\n    };\n\n    RichTextCodeMirror.prototype.getCurrentAttributes_ = function () {\n      if (!this.currentAttributes_) {\n        this.updateCurrentAttributes_();\n      }\n\n      return this.currentAttributes_;\n    };\n\n    RichTextCodeMirror.prototype.updateCurrentAttributes_ = function () {\n      var cm = this.codeMirror;\n      var anchor = cm.indexFromPos(cm.getCursor('anchor')),\n          head = cm.indexFromPos(cm.getCursor('head'));\n      var pos = head;\n\n      if (anchor > head) {\n        // backwards selection\n        // Advance past any newlines or line sentinels.\n        while (pos < this.end()) {\n          var c = this.getRange(pos, pos + 1);\n          if (c !== '\\n' && c !== LineSentinelCharacter) break;\n          pos++;\n        }\n\n        if (pos < this.end()) pos++; // since we're going to look at the annotation span to the left to decide what attributes to use.\n      } else {\n        // Back up before any newlines or line sentinels.\n        while (pos > 0) {\n          c = this.getRange(pos - 1, pos);\n          if (c !== '\\n' && c !== LineSentinelCharacter) break;\n          pos--;\n        }\n      }\n\n      var spans = this.annotationList_.getAnnotatedSpansForPos(pos);\n      this.currentAttributes_ = {};\n      var attributes = {}; // Use the attributes to the left unless they're line attributes (in which case use the ones to the right.\n\n      if (spans.length > 0 && !(ATTR.LINE_SENTINEL in spans[0].annotation.attributes)) {\n        attributes = spans[0].annotation.attributes;\n      } else if (spans.length > 1) {\n        firepad.utils.assert(!(ATTR.LINE_SENTINEL in spans[1].annotation.attributes), \"Cursor can't be between two line sentinel characters.\");\n        attributes = spans[1].annotation.attributes;\n      }\n\n      for (var attr in attributes) {\n        // Don't copy line or entity attributes.\n        if (attr !== 'l' && attr !== 'lt' && attr !== 'li' && attr.indexOf(ATTR.ENTITY_SENTINEL) !== 0) {\n          this.currentAttributes_[attr] = attributes[attr];\n        }\n      }\n    };\n\n    RichTextCodeMirror.prototype.getCurrentLineAttributes_ = function () {\n      var cm = this.codeMirror;\n      var anchor = cm.getCursor('anchor'),\n          head = cm.getCursor('head');\n      var line = head.line; // If it's a forward selection and the cursor is at the beginning of a line, use the previous line.\n\n      if (head.ch === 0 && anchor.line < head.line) {\n        line--;\n      }\n\n      return this.getLineAttributes_(line);\n    };\n\n    RichTextCodeMirror.prototype.getLineAttributes_ = function (lineNum) {\n      var attributes = {};\n      var line = this.codeMirror.getLine(lineNum);\n\n      if (line.length > 0 && line[0] === LineSentinelCharacter) {\n        var lineStartIndex = this.codeMirror.indexFromPos({\n          line: lineNum,\n          ch: 0\n        });\n        var spans = this.annotationList_.getAnnotatedSpansForSpan(new Span(lineStartIndex, 1));\n        firepad.utils.assert(spans.length === 1);\n\n        for (var attr in spans[0].annotation.attributes) {\n          attributes[attr] = spans[0].annotation.attributes[attr];\n        }\n      }\n\n      return attributes;\n    };\n\n    RichTextCodeMirror.prototype.clearAnnotations_ = function () {\n      this.annotationList_.updateSpan(new Span(0, this.end()), function (annotation, length) {\n        return new RichTextAnnotation({});\n      });\n    };\n\n    RichTextCodeMirror.prototype.newline = function () {\n      var cm = this.codeMirror;\n      var self = this;\n\n      if (!this.emptySelection_()) {\n        cm.replaceSelection('\\n', 'end', '+input');\n      } else {\n        var cursorLine = cm.getCursor('head').line;\n        var lineAttributes = this.getLineAttributes_(cursorLine);\n        var listType = lineAttributes[ATTR.LIST_TYPE];\n\n        if (listType && cm.getLine(cursorLine).length === 1) {\n          // They hit enter on a line with just a list heading.  Just remove the list heading.\n          this.updateLineAttributes(cursorLine, cursorLine, function (attributes) {\n            delete attributes[ATTR.LIST_TYPE];\n            delete attributes[ATTR.LINE_INDENT];\n          });\n        } else {\n          cm.replaceSelection('\\n', 'end', '+input'); // Copy line attributes forward.\n\n          this.updateLineAttributes(cursorLine + 1, cursorLine + 1, function (attributes) {\n            for (var attr in lineAttributes) {\n              attributes[attr] = lineAttributes[attr];\n            } // Don't mark new todo items as completed.\n\n\n            if (listType === 'tc') attributes[ATTR.LIST_TYPE] = 't';\n            self.trigger('newLine', {\n              line: cursorLine + 1,\n              attr: attributes\n            });\n          });\n        }\n      }\n    };\n\n    RichTextCodeMirror.prototype.deleteLeft = function () {\n      var cm = this.codeMirror;\n      var cursorPos = cm.getCursor('head');\n      var lineAttributes = this.getLineAttributes_(cursorPos.line);\n      var listType = lineAttributes[ATTR.LIST_TYPE];\n      var indent = lineAttributes[ATTR.LINE_INDENT];\n      var backspaceAtStartOfLine = this.emptySelection_() && cursorPos.ch === 1;\n\n      if (backspaceAtStartOfLine && listType) {\n        // They hit backspace at the beginning of a line with a list heading.  Just remove the list heading.\n        this.updateLineAttributes(cursorPos.line, cursorPos.line, function (attributes) {\n          delete attributes[ATTR.LIST_TYPE];\n          delete attributes[ATTR.LINE_INDENT];\n        });\n      } else if (backspaceAtStartOfLine && indent && indent > 0) {\n        this.unindent();\n      } else {\n        cm.deleteH(-1, \"char\");\n      }\n    };\n\n    RichTextCodeMirror.prototype.deleteRight = function () {\n      var cm = this.codeMirror;\n      var cursorPos = cm.getCursor('head');\n      var text = cm.getLine(cursorPos.line);\n      var emptyLine = this.areLineSentinelCharacters_(text);\n      var nextLineText = cursorPos.line + 1 < cm.lineCount() ? cm.getLine(cursorPos.line + 1) : \"\";\n\n      if (this.emptySelection_() && emptyLine && nextLineText[0] === LineSentinelCharacter) {\n        // Delete the empty line but not the line sentinel character on the next line.\n        cm.replaceRange('', {\n          line: cursorPos.line,\n          ch: 0\n        }, {\n          line: cursorPos.line + 1,\n          ch: 0\n        }, '+input'); // HACK: Once we've deleted this line, the cursor will be between the newline on the previous\n        // line and the line sentinel character on the next line, which is an invalid position.\n        // CodeMirror tends to therefore move it to the end of the previous line, which is undesired.\n        // So we explicitly set it to ch: 0 on the current line, which seems to move it after the line\n        // sentinel character(s) as desired.\n        // (see https://github.com/firebase/firepad/issues/209).\n\n        cm.setCursor({\n          line: cursorPos.line,\n          ch: 0\n        });\n      } else {\n        cm.deleteH(1, \"char\");\n      }\n    };\n\n    RichTextCodeMirror.prototype.indent = function () {\n      this.updateLineAttributesForSelection(function (attributes) {\n        var indent = attributes[ATTR.LINE_INDENT];\n        var listType = attributes[ATTR.LIST_TYPE];\n\n        if (indent) {\n          attributes[ATTR.LINE_INDENT]++;\n        } else if (listType) {\n          // lists are implicitly already indented once.\n          attributes[ATTR.LINE_INDENT] = 2;\n        } else {\n          attributes[ATTR.LINE_INDENT] = 1;\n        }\n      });\n    };\n\n    RichTextCodeMirror.prototype.unindent = function () {\n      this.updateLineAttributesForSelection(function (attributes) {\n        var indent = attributes[ATTR.LINE_INDENT];\n\n        if (indent && indent > 1) {\n          attributes[ATTR.LINE_INDENT] = indent - 1;\n        } else {\n          delete attributes[ATTR.LIST_TYPE];\n          delete attributes[ATTR.LINE_INDENT];\n        }\n      });\n    };\n\n    RichTextCodeMirror.prototype.getText = function () {\n      return this.codeMirror.getValue().replace(new RegExp(LineSentinelCharacter, \"g\"), '');\n    };\n\n    RichTextCodeMirror.prototype.areLineSentinelCharacters_ = function (text) {\n      for (var i = 0; i < text.length; i++) {\n        if (text[i] !== LineSentinelCharacter) return false;\n      }\n\n      return true;\n    };\n    /**\n     * Used for the annotations we store in our AnnotationList.\n     * @param attributes\n     * @constructor\n     */\n\n\n    function RichTextAnnotation(attributes) {\n      this.attributes = attributes || {};\n    }\n\n    RichTextAnnotation.prototype.equals = function (other) {\n      if (!(other instanceof RichTextAnnotation)) {\n        return false;\n      }\n\n      var attr;\n\n      for (attr in this.attributes) {\n        if (other.attributes[attr] !== this.attributes[attr]) {\n          return false;\n        }\n      }\n\n      for (attr in other.attributes) {\n        if (other.attributes[attr] !== this.attributes[attr]) {\n          return false;\n        }\n      }\n\n      return true;\n    };\n\n    function emptyAttributes(attributes) {\n      for (var attr in attributes) {\n        return false;\n      }\n\n      return true;\n    } // Bind a method to an object, so it doesn't matter whether you call\n    // object.method() directly or pass object.method as a reference to another\n    // function.\n\n\n    function bind(obj, method) {\n      var fn = obj[method];\n\n      obj[method] = function () {\n        fn.apply(obj, arguments);\n      };\n    }\n\n    return RichTextCodeMirror;\n  }();\n\n  var firepad = firepad || {}; // TODO: Can this derive from CodeMirrorAdapter or similar?\n\n  firepad.RichTextCodeMirrorAdapter = function () {\n    'use strict';\n\n    var TextOperation = firepad.TextOperation;\n    var WrappedOperation = firepad.WrappedOperation;\n    var Cursor = firepad.Cursor;\n\n    function RichTextCodeMirrorAdapter(rtcm) {\n      this.rtcm = rtcm;\n      this.cm = rtcm.codeMirror;\n      bind(this, 'onChange');\n      bind(this, 'onAttributesChange');\n      bind(this, 'onCursorActivity');\n      bind(this, 'onFocus');\n      bind(this, 'onBlur');\n      this.rtcm.on('change', this.onChange);\n      this.rtcm.on('attributesChange', this.onAttributesChange);\n      this.cm.on('cursorActivity', this.onCursorActivity);\n      this.cm.on('focus', this.onFocus);\n      this.cm.on('blur', this.onBlur);\n    } // Removes all event listeners from the CodeMirror instance.\n\n\n    RichTextCodeMirrorAdapter.prototype.detach = function () {\n      this.rtcm.off('change', this.onChange);\n      this.rtcm.off('attributesChange', this.onAttributesChange);\n      this.cm.off('cursorActivity', this.onCursorActivity);\n      this.cm.off('focus', this.onFocus);\n      this.cm.off('blur', this.onBlur);\n    };\n\n    function cmpPos(a, b) {\n      if (a.line < b.line) {\n        return -1;\n      }\n\n      if (a.line > b.line) {\n        return 1;\n      }\n\n      if (a.ch < b.ch) {\n        return -1;\n      }\n\n      if (a.ch > b.ch) {\n        return 1;\n      }\n\n      return 0;\n    }\n\n    function posEq(a, b) {\n      return cmpPos(a, b) === 0;\n    }\n\n    function posLe(a, b) {\n      return cmpPos(a, b) <= 0;\n    }\n\n    function codemirrorLength(cm) {\n      var lastLine = cm.lineCount() - 1;\n      return cm.indexFromPos({\n        line: lastLine,\n        ch: cm.getLine(lastLine).length\n      });\n    } // Converts a CodeMirror change object into a TextOperation and its inverse\n    // and returns them as a two-element array.\n\n\n    RichTextCodeMirrorAdapter.operationFromCodeMirrorChanges = function (changes, cm) {\n      // Approach: Replay the changes, beginning with the most recent one, and\n      // construct the operation and its inverse. We have to convert the position\n      // in the pre-change coordinate system to an index. We have a method to\n      // convert a position in the coordinate system after all changes to an index,\n      // namely CodeMirror's `indexFromPos` method. We can use the information of\n      // a single change object to convert a post-change coordinate system to a\n      // pre-change coordinate system. We can now proceed inductively to get a\n      // pre-change coordinate system for all changes in the linked list.\n      // A disadvantage of this approach is its complexity `O(n^2)` in the length\n      // of the linked list of changes.\n      var docEndLength = codemirrorLength(cm);\n      var operation = new TextOperation().retain(docEndLength);\n      var inverse = new TextOperation().retain(docEndLength);\n\n      for (var i = changes.length - 1; i >= 0; i--) {\n        var change = changes[i];\n        var fromIndex = change.start;\n        var restLength = docEndLength - fromIndex - change.text.length;\n        operation = new TextOperation().retain(fromIndex)['delete'](change.removed.length).insert(change.text, change.attributes).retain(restLength).compose(operation);\n        inverse = inverse.compose(new TextOperation().retain(fromIndex)['delete'](change.text.length).insert(change.removed, change.removedAttributes).retain(restLength));\n        docEndLength += change.removed.length - change.text.length;\n      }\n\n      return [operation, inverse];\n    }; // Converts an attributes changed object to an operation and its inverse.\n\n\n    RichTextCodeMirrorAdapter.operationFromAttributesChanges = function (changes, cm) {\n      var docEndLength = codemirrorLength(cm);\n      var operation = new TextOperation(),\n          inverse = new TextOperation();\n      var pos = 0;\n\n      for (var i = 0; i < changes.length; i++) {\n        var change = changes[i];\n        var toRetain = change.start - pos;\n        assert(toRetain >= 0); // changes should be in order and non-overlapping.\n\n        operation.retain(toRetain);\n        inverse.retain(toRetain);\n        var length = change.end - change.start;\n        operation.retain(length, change.attributes);\n        inverse.retain(length, change.attributesInverse);\n        pos = change.start + length;\n      }\n\n      operation.retain(docEndLength - pos);\n      inverse.retain(docEndLength - pos);\n      return [operation, inverse];\n    };\n\n    RichTextCodeMirrorAdapter.prototype.registerCallbacks = function (cb) {\n      this.callbacks = cb;\n    };\n\n    RichTextCodeMirrorAdapter.prototype.onChange = function (_, changes) {\n      if (changes[0].origin !== 'RTCMADAPTER') {\n        var pair = RichTextCodeMirrorAdapter.operationFromCodeMirrorChanges(changes, this.cm);\n        this.trigger('change', pair[0], pair[1]);\n      }\n    };\n\n    RichTextCodeMirrorAdapter.prototype.onAttributesChange = function (_, changes) {\n      if (changes[0].origin !== 'RTCMADAPTER') {\n        var pair = RichTextCodeMirrorAdapter.operationFromAttributesChanges(changes, this.cm);\n        this.trigger('change', pair[0], pair[1]);\n      }\n    };\n\n    RichTextCodeMirrorAdapter.prototype.onCursorActivity = function () {\n      // We want to push cursor changes to Firebase AFTER edits to the history,\n      // because the cursor coordinates will already be in post-change units.\n      // Sleeping for 1ms ensures that sendCursor happens after sendOperation.\n      var self = this;\n      setTimeout(function () {\n        self.trigger('cursorActivity');\n      }, 1);\n    };\n\n    RichTextCodeMirrorAdapter.prototype.onFocus = function () {\n      this.trigger('focus');\n    };\n\n    RichTextCodeMirrorAdapter.prototype.onBlur = function () {\n      if (!this.cm.somethingSelected()) {\n        this.trigger('blur');\n      }\n    };\n\n    RichTextCodeMirrorAdapter.prototype.getValue = function () {\n      return this.cm.getValue();\n    };\n\n    RichTextCodeMirrorAdapter.prototype.getCursor = function () {\n      var cm = this.cm;\n      var cursorPos = cm.getCursor();\n      var position = cm.indexFromPos(cursorPos);\n      var selectionEnd;\n\n      if (cm.somethingSelected()) {\n        var startPos = cm.getCursor(true);\n        var selectionEndPos = posEq(cursorPos, startPos) ? cm.getCursor(false) : startPos;\n        selectionEnd = cm.indexFromPos(selectionEndPos);\n      } else {\n        selectionEnd = position;\n      }\n\n      return new Cursor(position, selectionEnd);\n    };\n\n    RichTextCodeMirrorAdapter.prototype.setCursor = function (cursor) {\n      this.cm.setSelection(this.cm.posFromIndex(cursor.position), this.cm.posFromIndex(cursor.selectionEnd));\n    };\n\n    RichTextCodeMirrorAdapter.prototype.addStyleRule = function (css) {\n      if (typeof document === \"undefined\" || document === null) {\n        return;\n      }\n\n      if (!this.addedStyleRules) {\n        this.addedStyleRules = {};\n        var styleElement = document.createElement('style');\n        document.documentElement.getElementsByTagName('head')[0].appendChild(styleElement);\n        this.addedStyleSheet = styleElement.sheet;\n      }\n\n      if (this.addedStyleRules[css]) {\n        return;\n      }\n\n      this.addedStyleRules[css] = true;\n      return this.addedStyleSheet.insertRule(css, 0);\n    };\n\n    RichTextCodeMirrorAdapter.prototype.setOtherCursor = function (cursor, color, clientId) {\n      var cursorPos = this.cm.posFromIndex(cursor.position);\n\n      if (typeof color !== 'string' || !color.match(/^#[a-fA-F0-9]{3,6}$/)) {\n        return;\n      }\n\n      var end = this.rtcm.end();\n\n      if (typeof cursor !== 'object' || typeof cursor.position !== 'number' || typeof cursor.selectionEnd !== 'number') {\n        return;\n      }\n\n      if (cursor.position < 0 || cursor.position > end || cursor.selectionEnd < 0 || cursor.selectionEnd > end) {\n        return;\n      }\n\n      if (cursor.position === cursor.selectionEnd) {\n        // show cursor\n        var cursorCoords = this.cm.cursorCoords(cursorPos);\n        var cursorEl = document.createElement('span');\n        cursorEl.className = 'other-client';\n        cursorEl.style.borderLeftWidth = '2px';\n        cursorEl.style.borderLeftStyle = 'solid';\n        cursorEl.style.borderLeftColor = color;\n        cursorEl.style.marginLeft = cursorEl.style.marginRight = '-1px';\n        cursorEl.style.height = (cursorCoords.bottom - cursorCoords.top) * 0.9 + 'px';\n        cursorEl.setAttribute('data-clientid', clientId);\n        cursorEl.style.zIndex = 0;\n        return this.cm.setBookmark(cursorPos, {\n          widget: cursorEl,\n          insertLeft: true\n        });\n      } else {\n        // show selection\n        var selectionClassName = 'selection-' + color.replace('#', '');\n        var transparency = 0.4;\n        var rule = '.' + selectionClassName + ' {' + // fallback for browsers w/out rgba (rgb w/ transparency)\n        ' background: ' + hex2rgb(color) + ';\\n' + // rule with alpha takes precedence if supported\n        ' background: ' + hex2rgb(color, transparency) + ';' + '}';\n        this.addStyleRule(rule);\n        var fromPos, toPos;\n\n        if (cursor.selectionEnd > cursor.position) {\n          fromPos = cursorPos;\n          toPos = this.cm.posFromIndex(cursor.selectionEnd);\n        } else {\n          fromPos = this.cm.posFromIndex(cursor.selectionEnd);\n          toPos = cursorPos;\n        }\n\n        return this.cm.markText(fromPos, toPos, {\n          className: selectionClassName\n        });\n      }\n    };\n\n    RichTextCodeMirrorAdapter.prototype.trigger = function (event) {\n      var args = Array.prototype.slice.call(arguments, 1);\n      var action = this.callbacks && this.callbacks[event];\n\n      if (action) {\n        action.apply(this, args);\n      }\n    }; // Apply an operation to a CodeMirror instance.\n\n\n    RichTextCodeMirrorAdapter.prototype.applyOperation = function (operation) {\n      // HACK: If there are a lot of operations; hide CodeMirror so that it doesn't re-render constantly.\n      if (operation.ops.length > 10) this.rtcm.codeMirror.getWrapperElement().setAttribute('style', 'display: none');\n      var ops = operation.ops;\n      var index = 0; // holds the current index into CodeMirror's content\n\n      for (var i = 0, l = ops.length; i < l; i++) {\n        var op = ops[i];\n\n        if (op.isRetain()) {\n          if (!emptyAttributes(op.attributes)) {\n            this.rtcm.updateTextAttributes(index, index + op.chars, function (attributes) {\n              for (var attr in op.attributes) {\n                if (op.attributes[attr] === false) {\n                  delete attributes[attr];\n                } else {\n                  attributes[attr] = op.attributes[attr];\n                }\n              }\n            }, 'RTCMADAPTER',\n            /*doLineAttributes=*/\n            true);\n          }\n\n          index += op.chars;\n        } else if (op.isInsert()) {\n          this.rtcm.insertText(index, op.text, op.attributes, 'RTCMADAPTER');\n          index += op.text.length;\n        } else if (op.isDelete()) {\n          this.rtcm.removeText(index, index + op.chars, 'RTCMADAPTER');\n        }\n      }\n\n      if (operation.ops.length > 10) {\n        this.rtcm.codeMirror.getWrapperElement().setAttribute('style', '');\n        this.rtcm.codeMirror.refresh();\n      }\n    };\n\n    RichTextCodeMirrorAdapter.prototype.registerUndo = function (undoFn) {\n      this.cm.undo = undoFn;\n    };\n\n    RichTextCodeMirrorAdapter.prototype.registerRedo = function (redoFn) {\n      this.cm.redo = redoFn;\n    };\n\n    RichTextCodeMirrorAdapter.prototype.invertOperation = function (operation) {\n      var pos = 0,\n          cm = this.rtcm.codeMirror,\n          spans,\n          i;\n      var inverse = new TextOperation();\n\n      for (var opIndex = 0; opIndex < operation.wrapped.ops.length; opIndex++) {\n        var op = operation.wrapped.ops[opIndex];\n\n        if (op.isRetain()) {\n          if (emptyAttributes(op.attributes)) {\n            inverse.retain(op.chars);\n            pos += op.chars;\n          } else {\n            spans = this.rtcm.getAttributeSpans(pos, pos + op.chars);\n\n            for (i = 0; i < spans.length; i++) {\n              var inverseAttributes = {};\n\n              for (var attr in op.attributes) {\n                var opValue = op.attributes[attr];\n                var curValue = spans[i].attributes[attr];\n\n                if (opValue === false) {\n                  if (curValue) {\n                    inverseAttributes[attr] = curValue;\n                  }\n                } else if (opValue !== curValue) {\n                  inverseAttributes[attr] = curValue || false;\n                }\n              }\n\n              inverse.retain(spans[i].length, inverseAttributes);\n              pos += spans[i].length;\n            }\n          }\n        } else if (op.isInsert()) {\n          inverse['delete'](op.text.length);\n        } else if (op.isDelete()) {\n          var text = cm.getRange(cm.posFromIndex(pos), cm.posFromIndex(pos + op.chars));\n          spans = this.rtcm.getAttributeSpans(pos, pos + op.chars);\n          var delTextPos = 0;\n\n          for (i = 0; i < spans.length; i++) {\n            inverse.insert(text.substr(delTextPos, spans[i].length), spans[i].attributes);\n            delTextPos += spans[i].length;\n          }\n\n          pos += op.chars;\n        }\n      }\n\n      return new WrappedOperation(inverse, operation.meta.invert());\n    }; // Throws an error if the first argument is falsy. Useful for debugging.\n\n\n    function assert(b, msg) {\n      if (!b) {\n        throw new Error(msg || \"assertion error\");\n      }\n    } // Bind a method to an object, so it doesn't matter whether you call\n    // object.method() directly or pass object.method as a reference to another\n    // function.\n\n\n    function bind(obj, method) {\n      var fn = obj[method];\n\n      obj[method] = function () {\n        fn.apply(obj, arguments);\n      };\n    }\n\n    function emptyAttributes(attrs) {\n      for (var attr in attrs) {\n        return false;\n      }\n\n      return true;\n    }\n\n    function hex2rgb(hex, transparency) {\n      if (typeof hex !== 'string') {\n        throw new TypeError('Expected a string');\n      }\n\n      hex = hex.replace(/^#/, '');\n\n      if (hex.length === 3) {\n        hex = hex[0] + hex[0] + hex[1] + hex[1] + hex[2] + hex[2];\n      }\n\n      var num = parseInt(hex, 16);\n      var rgb = [num >> 16, num >> 8 & 255, num & 255];\n      var type = 'rgb';\n\n      if (exists(transparency)) {\n        type = 'rgba';\n        rgb.push(transparency);\n      } // rgb(r, g, b) or rgba(r, g, b, t)\n\n\n      return type + '(' + rgb.join(',') + ')';\n    }\n\n    function exists(val) {\n      return val !== null && val !== undefined;\n    }\n\n    return RichTextCodeMirrorAdapter;\n  }();\n\n  var firepad = firepad || {};\n  /**\n   * Immutable object to represent text formatting.  Formatting can be modified by chaining method calls.\n   *\n   * @constructor\n   * @type {Function}\n   */\n\n  firepad.Formatting = function () {\n    var ATTR = firepad.AttributeConstants;\n\n    function Formatting(attributes) {\n      // Allow calling without new.\n      if (!(this instanceof Formatting)) {\n        return new Formatting(attributes);\n      }\n\n      this.attributes = attributes || {};\n    }\n\n    Formatting.prototype.cloneWithNewAttribute_ = function (attribute, value) {\n      var attributes = {}; // Copy existing.\n\n      for (var attr in this.attributes) {\n        attributes[attr] = this.attributes[attr];\n      } // Add new one.\n\n\n      if (value === false) {\n        delete attributes[attribute];\n      } else {\n        attributes[attribute] = value;\n      }\n\n      return new Formatting(attributes);\n    };\n\n    Formatting.prototype.bold = function (val) {\n      return this.cloneWithNewAttribute_(ATTR.BOLD, val);\n    };\n\n    Formatting.prototype.italic = function (val) {\n      return this.cloneWithNewAttribute_(ATTR.ITALIC, val);\n    };\n\n    Formatting.prototype.underline = function (val) {\n      return this.cloneWithNewAttribute_(ATTR.UNDERLINE, val);\n    };\n\n    Formatting.prototype.strike = function (val) {\n      return this.cloneWithNewAttribute_(ATTR.STRIKE, val);\n    };\n\n    Formatting.prototype.font = function (font) {\n      return this.cloneWithNewAttribute_(ATTR.FONT, font);\n    };\n\n    Formatting.prototype.fontSize = function (size) {\n      return this.cloneWithNewAttribute_(ATTR.FONT_SIZE, size);\n    };\n\n    Formatting.prototype.color = function (color) {\n      return this.cloneWithNewAttribute_(ATTR.COLOR, color);\n    };\n\n    Formatting.prototype.backgroundColor = function (color) {\n      return this.cloneWithNewAttribute_(ATTR.BACKGROUND_COLOR, color);\n    };\n\n    return Formatting;\n  }();\n\n  var firepad = firepad || {};\n  /**\n   * Object to represent Formatted text.\n   *\n   * @type {Function}\n   */\n\n  firepad.Text = function () {\n    function Text(text, formatting) {\n      // Allow calling without new.\n      if (!(this instanceof Text)) {\n        return new Text(text, formatting);\n      }\n\n      this.text = text;\n      this.formatting = formatting || firepad.Formatting();\n    }\n\n    return Text;\n  }();\n\n  var firepad = firepad || {};\n  /**\n   * Immutable object to represent line formatting.  Formatting can be modified by chaining method calls.\n   *\n   * @constructor\n   * @type {Function}\n   */\n\n  firepad.LineFormatting = function () {\n    var ATTR = firepad.AttributeConstants;\n\n    function LineFormatting(attributes) {\n      // Allow calling without new.\n      if (!(this instanceof LineFormatting)) {\n        return new LineFormatting(attributes);\n      }\n\n      this.attributes = attributes || {};\n      this.attributes[ATTR.LINE_SENTINEL] = true;\n    }\n\n    LineFormatting.LIST_TYPE = {\n      NONE: false,\n      ORDERED: 'o',\n      UNORDERED: 'u',\n      TODO: 't',\n      TODOCHECKED: 'tc'\n    };\n\n    LineFormatting.prototype.cloneWithNewAttribute_ = function (attribute, value) {\n      var attributes = {}; // Copy existing.\n\n      for (var attr in this.attributes) {\n        attributes[attr] = this.attributes[attr];\n      } // Add new one.\n\n\n      if (value === false) {\n        delete attributes[attribute];\n      } else {\n        attributes[attribute] = value;\n      }\n\n      return new LineFormatting(attributes);\n    };\n\n    LineFormatting.prototype.indent = function (indent) {\n      return this.cloneWithNewAttribute_(ATTR.LINE_INDENT, indent);\n    };\n\n    LineFormatting.prototype.align = function (align) {\n      return this.cloneWithNewAttribute_(ATTR.LINE_ALIGN, align);\n    };\n\n    LineFormatting.prototype.listItem = function (val) {\n      firepad.utils.assert(val === false || val === 'u' || val === 'o' || val === 't' || val === 'tc');\n      return this.cloneWithNewAttribute_(ATTR.LIST_TYPE, val);\n    };\n\n    LineFormatting.prototype.getIndent = function () {\n      return this.attributes[ATTR.LINE_INDENT] || 0;\n    };\n\n    LineFormatting.prototype.getAlign = function () {\n      return this.attributes[ATTR.LINE_ALIGN] || 0;\n    };\n\n    LineFormatting.prototype.getListItem = function () {\n      return this.attributes[ATTR.LIST_TYPE] || false;\n    };\n\n    return LineFormatting;\n  }();\n\n  var firepad = firepad || {};\n  /**\n   * Object to represent Formatted line.\n   *\n   * @type {Function}\n   */\n\n  firepad.Line = function () {\n    function Line(textPieces, formatting) {\n      // Allow calling without new.\n      if (!(this instanceof Line)) {\n        return new Line(textPieces, formatting);\n      }\n\n      if (Object.prototype.toString.call(textPieces) !== '[object Array]') {\n        if (typeof textPieces === 'undefined') {\n          textPieces = [];\n        } else {\n          textPieces = [textPieces];\n        }\n      }\n\n      this.textPieces = textPieces;\n      this.formatting = formatting || firepad.LineFormatting();\n    }\n\n    return Line;\n  }();\n\n  var firepad = firepad || {};\n  /**\n   * Helper to parse html into Firepad-compatible lines / text.\n   * @type {*}\n   */\n\n  firepad.ParseHtml = function () {\n    var LIST_TYPE = firepad.LineFormatting.LIST_TYPE;\n    /**\n     * Represents the current parse state as an immutable structure.  To create a new ParseState, use\n     * the withXXX methods.\n     *\n     * @param opt_listType\n     * @param opt_lineFormatting\n     * @param opt_textFormatting\n     * @constructor\n     */\n\n    function ParseState(opt_listType, opt_lineFormatting, opt_textFormatting) {\n      this.listType = opt_listType || LIST_TYPE.UNORDERED;\n      this.lineFormatting = opt_lineFormatting || firepad.LineFormatting();\n      this.textFormatting = opt_textFormatting || firepad.Formatting();\n    }\n\n    ParseState.prototype.withTextFormatting = function (textFormatting) {\n      return new ParseState(this.listType, this.lineFormatting, textFormatting);\n    };\n\n    ParseState.prototype.withLineFormatting = function (lineFormatting) {\n      return new ParseState(this.listType, lineFormatting, this.textFormatting);\n    };\n\n    ParseState.prototype.withListType = function (listType) {\n      return new ParseState(listType, this.lineFormatting, this.textFormatting);\n    };\n\n    ParseState.prototype.withIncreasedIndent = function () {\n      var lineFormatting = this.lineFormatting.indent(this.lineFormatting.getIndent() + 1);\n      return new ParseState(this.listType, lineFormatting, this.textFormatting);\n    };\n\n    ParseState.prototype.withAlign = function (align) {\n      var lineFormatting = this.lineFormatting.align(align);\n      return new ParseState(this.listType, lineFormatting, this.textFormatting);\n    };\n    /**\n     * Mutable structure representing the current parse output.\n     * @constructor\n     */\n\n\n    function ParseOutput() {\n      this.lines = [];\n      this.currentLine = [];\n      this.currentLineListItemType = null;\n    }\n\n    ParseOutput.prototype.newlineIfNonEmpty = function (state) {\n      this.cleanLine_();\n\n      if (this.currentLine.length > 0) {\n        this.newline(state);\n      }\n    };\n\n    ParseOutput.prototype.newlineIfNonEmptyOrListItem = function (state) {\n      this.cleanLine_();\n\n      if (this.currentLine.length > 0 || this.currentLineListItemType !== null) {\n        this.newline(state);\n      }\n    };\n\n    ParseOutput.prototype.newline = function (state) {\n      this.cleanLine_();\n      var lineFormatting = state.lineFormatting;\n\n      if (this.currentLineListItemType !== null) {\n        lineFormatting = lineFormatting.listItem(this.currentLineListItemType);\n        this.currentLineListItemType = null;\n      }\n\n      this.lines.push(firepad.Line(this.currentLine, lineFormatting));\n      this.currentLine = [];\n    };\n\n    ParseOutput.prototype.makeListItem = function (type) {\n      this.currentLineListItemType = type;\n    };\n\n    ParseOutput.prototype.cleanLine_ = function () {\n      // Kinda' a hack, but we remove leading and trailing spaces (since these aren't significant in html) and\n      // replaces nbsp's with normal spaces.\n      if (this.currentLine.length > 0) {\n        var last = this.currentLine.length - 1;\n        this.currentLine[0].text = this.currentLine[0].text.replace(/^ +/, '');\n        this.currentLine[last].text = this.currentLine[last].text.replace(/ +$/g, '');\n\n        for (var i = 0; i < this.currentLine.length; i++) {\n          this.currentLine[i].text = this.currentLine[i].text.replace(/\\u00a0/g, ' ');\n        }\n      } // If after stripping trailing whitespace, there's nothing left, clear currentLine out.\n\n\n      if (this.currentLine.length === 1 && this.currentLine[0].text === '') {\n        this.currentLine = [];\n      }\n    };\n\n    var entityManager_;\n\n    function parseHtml(html, entityManager) {\n      // Create DIV with HTML (as a convenient way to parse it).\n      var div = (firepad.document || document).createElement('div');\n      div.innerHTML = html; // HACK until I refactor this.\n\n      entityManager_ = entityManager;\n      var output = new ParseOutput();\n      var state = new ParseState();\n      parseNode(div, state, output);\n      return output.lines;\n    } // Fix IE8.\n\n\n    var Node = Node || {\n      ELEMENT_NODE: 1,\n      TEXT_NODE: 3\n    };\n\n    function parseNode(node, state, output) {\n      // Give entity manager first crack at it.\n      if (node.nodeType === Node.ELEMENT_NODE) {\n        var entity = entityManager_.fromElement(node);\n\n        if (entity) {\n          output.currentLine.push(new firepad.Text(firepad.sentinelConstants.ENTITY_SENTINEL_CHARACTER, new firepad.Formatting(entity.toAttributes())));\n          return;\n        }\n      }\n\n      switch (node.nodeType) {\n        case Node.TEXT_NODE:\n          // This probably isn't exactly right, but mostly works...\n          var text = node.nodeValue.replace(/[ \\n\\t]+/g, ' ');\n          output.currentLine.push(firepad.Text(text, state.textFormatting));\n          break;\n\n        case Node.ELEMENT_NODE:\n          var style = node.getAttribute('style') || '';\n          state = parseStyle(state, style);\n\n          switch (node.nodeName.toLowerCase()) {\n            case 'div':\n            case 'h1':\n            case 'h2':\n            case 'h3':\n            case 'p':\n              output.newlineIfNonEmpty(state);\n              parseChildren(node, state, output);\n              output.newlineIfNonEmpty(state);\n              break;\n\n            case 'center':\n              state = state.withAlign('center');\n              output.newlineIfNonEmpty(state);\n              parseChildren(node, state.withAlign('center'), output);\n              output.newlineIfNonEmpty(state);\n              break;\n\n            case 'b':\n            case 'strong':\n              parseChildren(node, state.withTextFormatting(state.textFormatting.bold(true)), output);\n              break;\n\n            case 'u':\n              parseChildren(node, state.withTextFormatting(state.textFormatting.underline(true)), output);\n              break;\n\n            case 'i':\n            case 'em':\n              parseChildren(node, state.withTextFormatting(state.textFormatting.italic(true)), output);\n              break;\n\n            case 's':\n              parseChildren(node, state.withTextFormatting(state.textFormatting.strike(true)), output);\n              break;\n\n            case 'font':\n              var face = node.getAttribute('face');\n              var color = node.getAttribute('color');\n              var size = parseInt(node.getAttribute('size'));\n\n              if (face) {\n                state = state.withTextFormatting(state.textFormatting.font(face));\n              }\n\n              if (color) {\n                state = state.withTextFormatting(state.textFormatting.color(color));\n              }\n\n              if (size) {\n                state = state.withTextFormatting(state.textFormatting.fontSize(size));\n              }\n\n              parseChildren(node, state, output);\n              break;\n\n            case 'br':\n              output.newline(state);\n              break;\n\n            case 'ul':\n              output.newlineIfNonEmptyOrListItem(state);\n              var listType = node.getAttribute('class') === 'firepad-todo' ? LIST_TYPE.TODO : LIST_TYPE.UNORDERED;\n              parseChildren(node, state.withListType(listType).withIncreasedIndent(), output);\n              output.newlineIfNonEmpty(state);\n              break;\n\n            case 'ol':\n              output.newlineIfNonEmptyOrListItem(state);\n              parseChildren(node, state.withListType(LIST_TYPE.ORDERED).withIncreasedIndent(), output);\n              output.newlineIfNonEmpty(state);\n              break;\n\n            case 'li':\n              parseListItem(node, state, output);\n              break;\n\n            case 'style':\n              // ignore.\n              break;\n\n            default:\n              parseChildren(node, state, output);\n              break;\n          }\n\n          break;\n\n        default:\n          // Ignore other nodes (comments, etc.)\n          break;\n      }\n    }\n\n    function parseChildren(node, state, output) {\n      if (node.hasChildNodes()) {\n        for (var i = 0; i < node.childNodes.length; i++) {\n          parseNode(node.childNodes[i], state, output);\n        }\n      }\n    }\n\n    function parseListItem(node, state, output) {\n      // Note: <li> is weird:\n      // * Only the first line in the <li> tag should be a list item (i.e. with a bullet or number next to it).\n      // * <li></li> should create an empty list item line; <li><ol><li></li></ol></li> should create two.\n      output.newlineIfNonEmptyOrListItem(state);\n      var listType = node.getAttribute('class') === 'firepad-checked' ? LIST_TYPE.TODOCHECKED : state.listType;\n      output.makeListItem(listType);\n      var oldLine = output.currentLine;\n      parseChildren(node, state, output);\n\n      if (oldLine === output.currentLine || output.currentLine.length > 0) {\n        output.newline(state);\n      }\n    }\n\n    function parseStyle(state, styleString) {\n      var textFormatting = state.textFormatting;\n      var lineFormatting = state.lineFormatting;\n      var styles = styleString.split(';');\n\n      for (var i = 0; i < styles.length; i++) {\n        var stylePieces = styles[i].split(':');\n        if (stylePieces.length !== 2) continue;\n        var prop = firepad.utils.trim(stylePieces[0]).toLowerCase();\n        var val = firepad.utils.trim(stylePieces[1]).toLowerCase();\n\n        switch (prop) {\n          case 'text-decoration':\n            var underline = val.indexOf('underline') >= 0;\n            var strike = val.indexOf('line-through') >= 0;\n            textFormatting = textFormatting.underline(underline).strike(strike);\n            break;\n\n          case 'font-weight':\n            var bold = val === 'bold' || parseInt(val) >= 600;\n            textFormatting = textFormatting.bold(bold);\n            break;\n\n          case 'font-style':\n            var italic = val === 'italic' || val === 'oblique';\n            textFormatting = textFormatting.italic(italic);\n            break;\n\n          case 'color':\n            textFormatting = textFormatting.color(val);\n            break;\n\n          case 'background-color':\n            textFormatting = textFormatting.backgroundColor(val);\n            break;\n\n          case 'text-align':\n            lineFormatting = lineFormatting.align(val);\n            break;\n\n          case 'font-size':\n            var size = null;\n            var allowedValues = ['px', 'pt', '%', 'em', 'xx-small', 'x-small', 'small', 'medium', 'large', 'x-large', 'xx-large', 'smaller', 'larger'];\n\n            if (firepad.utils.stringEndsWith(val, allowedValues)) {\n              size = val;\n            } else if (parseInt(val)) {\n              size = parseInt(val) + 'px';\n            }\n\n            if (size) {\n              textFormatting = textFormatting.fontSize(size);\n            }\n\n            break;\n\n          case 'font-family':\n            var font = firepad.utils.trim(val.split(',')[0]); // get first font.\n\n            font = font.replace(/['\"]/g, ''); // remove quotes.\n\n            font = font.replace(/\\w\\S*/g, function (txt) {\n              return txt.charAt(0).toUpperCase() + txt.substr(1).toLowerCase();\n            });\n            textFormatting = textFormatting.font(font);\n            break;\n        }\n      }\n\n      return state.withLineFormatting(lineFormatting).withTextFormatting(textFormatting);\n    }\n\n    return parseHtml;\n  }();\n\n  var firepad = firepad || {};\n  /**\n   * Helper to turn Firebase contents into HMTL.\n   * Takes a doc and an entity manager\n   */\n\n  firepad.SerializeHtml = function () {\n    var utils = firepad.utils;\n    var ATTR = firepad.AttributeConstants;\n    var LIST_TYPE = firepad.LineFormatting.LIST_TYPE;\n    var TODO_STYLE = '<style>ul.firepad-todo { list-style: none; margin-left: 0; padding-left: 0; } ul.firepad-todo > li { padding-left: 1em; text-indent: -1em; } ul.firepad-todo > li:before { content: \"\\\\2610\"; padding-right: 5px; } ul.firepad-todo > li.firepad-checked:before { content: \"\\\\2611\"; padding-right: 5px; }</style>\\n';\n\n    function open(listType) {\n      return listType === LIST_TYPE.ORDERED ? '<ol>' : listType === LIST_TYPE.UNORDERED ? '<ul>' : '<ul class=\"firepad-todo\">';\n    }\n\n    function close(listType) {\n      return listType === LIST_TYPE.ORDERED ? '</ol>' : '</ul>';\n    }\n\n    function compatibleListType(l1, l2) {\n      return l1 === l2 || l1 === LIST_TYPE.TODO && l2 === LIST_TYPE.TODOCHECKED || l1 === LIST_TYPE.TODOCHECKED && l2 === LIST_TYPE.TODO;\n    }\n\n    function textToHtml(text) {\n      return text.replace(/&/g, '&amp;').replace(/\"/g, '&quot;').replace(/'/g, '&#39;').replace(/</g, '&lt;').replace(/>/g, '&gt;').replace(/\\u00a0/g, '&nbsp;');\n    }\n\n    function serializeHtml(doc, entityManager) {\n      var html = '';\n      var newLine = true;\n      var listTypeStack = [];\n      var inListItem = false;\n      var firstLine = true;\n      var emptyLine = true;\n      var i = 0,\n          op = doc.ops[i];\n      var usesTodo = false;\n\n      while (op) {\n        utils.assert(op.isInsert());\n        var attrs = op.attributes;\n\n        if (newLine) {\n          newLine = false;\n          var indent = 0,\n              listType = null,\n              lineAlign = 'left';\n\n          if (ATTR.LINE_SENTINEL in attrs) {\n            indent = attrs[ATTR.LINE_INDENT] || 0;\n            listType = attrs[ATTR.LIST_TYPE] || null;\n            lineAlign = attrs[ATTR.LINE_ALIGN] || 'left';\n          }\n\n          if (listType) {\n            indent = indent || 1; // lists are automatically indented at least 1.\n          }\n\n          if (inListItem) {\n            html += '</li>';\n            inListItem = false;\n          } else if (!firstLine) {\n            if (emptyLine) {\n              html += '<br/>';\n            }\n\n            html += '</div>';\n          }\n\n          firstLine = false; // Close any extra lists.\n\n          utils.assert(indent >= 0, \"Indent must not be negative.\");\n\n          while (listTypeStack.length > indent || indent === listTypeStack.length && listType !== null && !compatibleListType(listType, listTypeStack[listTypeStack.length - 1])) {\n            html += close(listTypeStack.pop());\n          } // Open any needed lists.\n\n\n          while (listTypeStack.length < indent) {\n            var toOpen = listType || LIST_TYPE.UNORDERED; // default to unordered lists for indenting non-list-item lines.\n\n            usesTodo = listType == LIST_TYPE.TODO || listType == LIST_TYPE.TODOCHECKED || usesTodo;\n            html += open(toOpen);\n            listTypeStack.push(toOpen);\n          }\n\n          var style = lineAlign !== 'left' ? ' style=\"text-align:' + lineAlign + '\"' : '';\n\n          if (listType) {\n            var clazz = '';\n\n            switch (listType) {\n              case LIST_TYPE.TODOCHECKED:\n                clazz = ' class=\"firepad-checked\"';\n                break;\n\n              case LIST_TYPE.TODO:\n                clazz = ' class=\"firepad-unchecked\"';\n                break;\n            }\n\n            html += \"<li\" + clazz + style + \">\";\n            inListItem = true;\n          } else {\n            // start line div.\n            html += '<div' + style + '>';\n          }\n\n          emptyLine = true;\n        }\n\n        if (ATTR.LINE_SENTINEL in attrs) {\n          op = doc.ops[++i];\n          continue;\n        }\n\n        if (ATTR.ENTITY_SENTINEL in attrs) {\n          for (var j = 0; j < op.text.length; j++) {\n            var entity = firepad.Entity.fromAttributes(attrs);\n            var element = entityManager.exportToElement(entity);\n            html += element.outerHTML;\n          }\n\n          op = doc.ops[++i];\n          continue;\n        }\n\n        var prefix = '',\n            suffix = '';\n\n        for (var attr in attrs) {\n          var value = attrs[attr];\n          var start, end;\n\n          if (attr === ATTR.BOLD || attr === ATTR.ITALIC || attr === ATTR.UNDERLINE || attr === ATTR.STRIKE) {\n            utils.assert(value === true);\n            start = end = attr;\n          } else if (attr === ATTR.FONT_SIZE) {\n            start = 'span style=\"font-size: ' + value;\n            start += typeof value !== \"string\" || value.indexOf(\"px\", value.length - 2) === -1 ? 'px\"' : '\"';\n            end = 'span';\n          } else if (attr === ATTR.FONT) {\n            start = 'span style=\"font-family: ' + value + '\"';\n            end = 'span';\n          } else if (attr === ATTR.COLOR) {\n            start = 'span style=\"color: ' + value + '\"';\n            end = 'span';\n          } else if (attr === ATTR.BACKGROUND_COLOR) {\n            start = 'span style=\"background-color: ' + value + '\"';\n            end = 'span';\n          } else {\n            utils.log(false, \"Encountered unknown attribute while rendering html: \" + attr);\n          }\n\n          if (start) prefix += '<' + start + '>';\n          if (end) suffix = '</' + end + '>' + suffix;\n        }\n\n        var text = op.text;\n        var newLineIndex = text.indexOf('\\n');\n\n        if (newLineIndex >= 0) {\n          newLine = true;\n\n          if (newLineIndex < text.length - 1) {\n            // split op.\n            op = new firepad.TextOp('insert', text.substr(newLineIndex + 1), attrs);\n          } else {\n            op = doc.ops[++i];\n          }\n\n          text = text.substr(0, newLineIndex);\n        } else {\n          op = doc.ops[++i];\n        } // Replace leading, trailing, and consecutive spaces with nbsp's to make sure they're preserved.\n\n\n        text = text.replace(/  +/g, function (str) {\n          return new Array(str.length + 1).join('\\u00a0');\n        }).replace(/^ /, '\\u00a0').replace(/ $/, '\\u00a0');\n\n        if (text.length > 0) {\n          emptyLine = false;\n        }\n\n        html += prefix + textToHtml(text) + suffix;\n      }\n\n      if (inListItem) {\n        html += '</li>';\n      } else if (!firstLine) {\n        if (emptyLine) {\n          html += '&nbsp;';\n        }\n\n        html += '</div>';\n      } // Close any extra lists.\n\n\n      while (listTypeStack.length > 0) {\n        html += close(listTypeStack.pop());\n      }\n\n      if (usesTodo) {\n        html = TODO_STYLE + html;\n      }\n\n      return html;\n    }\n\n    return serializeHtml;\n  }();\n\n  var firepad = firepad || {};\n  /**\n   * Helper to turn pieces of text into insertable operations\n   */\n\n  firepad.textPiecesToInserts = function (atNewLine, textPieces) {\n    var inserts = [];\n\n    function insert(string, attributes) {\n      if (string instanceof firepad.Text) {\n        attributes = string.formatting.attributes;\n        string = string.text;\n      }\n\n      inserts.push({\n        string: string,\n        attributes: attributes\n      });\n      atNewLine = string[string.length - 1] === '\\n';\n    }\n\n    function insertLine(line, withNewline) {\n      // HACK: We should probably force a newline if there isn't one already.  But due to\n      // the way this is used for inserting HTML, we end up inserting a \"line\" in the middle\n      // of text, in which case we don't want to actually insert a newline.\n      if (atNewLine) {\n        insert(firepad.sentinelConstants.LINE_SENTINEL_CHARACTER, line.formatting.attributes);\n      }\n\n      for (var i = 0; i < line.textPieces.length; i++) {\n        insert(line.textPieces[i]);\n      }\n\n      if (withNewline) insert('\\n');\n    }\n\n    for (var i = 0; i < textPieces.length; i++) {\n      if (textPieces[i] instanceof firepad.Line) {\n        insertLine(textPieces[i], i < textPieces.length - 1);\n      } else {\n        insert(textPieces[i]);\n      }\n    }\n\n    return inserts;\n  };\n\n  var firepad = firepad || {};\n  /**\n   * Instance of headless Firepad for use in NodeJS. Supports get/set on text/html.\n   */\n\n  firepad.Headless = function () {\n    var TextOperation = firepad.TextOperation;\n    var FirebaseAdapter = firepad.FirebaseAdapter;\n    var EntityManager = firepad.EntityManager;\n    var ParseHtml = firepad.ParseHtml;\n\n    function Headless(refOrPath) {\n      // Allow calling without new.\n      if (!(this instanceof Headless)) {\n        return new Headless(refOrPath);\n      }\n\n      var firebase, ref;\n\n      if (typeof refOrPath === 'string') {\n        if (window.firebase === undefined && typeof firebase !== 'object') {\n          console.log(\"REQUIRING\");\n          firebase = require('firebase/app');\n\n          require('firebase/database');\n        } else {\n          firebase = window.firebase;\n        }\n\n        ref = firebase.database().refFromURL(refOrPath);\n      } else {\n        ref = refOrPath;\n      }\n\n      this.entityManager_ = new EntityManager();\n      this.firebaseAdapter_ = new FirebaseAdapter(ref);\n      this.ready_ = false;\n      this.zombie_ = false;\n    }\n\n    Headless.prototype.getDocument = function (callback) {\n      var self = this;\n\n      if (self.ready_) {\n        return callback(self.firebaseAdapter_.getDocument());\n      }\n\n      self.firebaseAdapter_.on('ready', function () {\n        self.ready_ = true;\n        callback(self.firebaseAdapter_.getDocument());\n      });\n    };\n\n    Headless.prototype.getText = function (callback) {\n      if (this.zombie_) {\n        throw new Error('You can\\'t use a firepad.Headless after calling dispose()!');\n      }\n\n      this.getDocument(function (doc) {\n        var text = doc.apply(''); // Strip out any special characters from Rich Text formatting\n\n        for (var key in firepad.sentinelConstants) {\n          text = text.replace(new RegExp(firepad.sentinelConstants[key], 'g'), '');\n        }\n\n        callback(text);\n      });\n    };\n\n    Headless.prototype.setText = function (text, callback) {\n      if (this.zombie_) {\n        throw new Error('You can\\'t use a firepad.Headless after calling dispose()!');\n      }\n\n      var op = TextOperation().insert(text);\n      this.sendOperationWithRetry(op, callback);\n    };\n\n    Headless.prototype.initializeFakeDom = function (callback) {\n      if (typeof document === 'object' || typeof firepad.document === 'object') {\n        callback();\n      } else {\n        const jsdom = require('jsdom');\n\n        const {\n          JSDOM\n        } = jsdom;\n        const {\n          window\n        } = new JSDOM(\"<head></head><body></body>\");\n\n        if (firepad.document) {\n          // Return if we've already made a jsdom to avoid making more than one\n          // This would be easier with promises but we want to avoid introducing\n          // another dependency for just headless mode.\n          window.close();\n          return callback();\n        }\n\n        firepad.document = window.document;\n        callback();\n      }\n    };\n\n    Headless.prototype.getHtml = function (callback) {\n      var self = this;\n\n      if (this.zombie_) {\n        throw new Error('You can\\'t use a firepad.Headless after calling dispose()!');\n      }\n\n      self.initializeFakeDom(function () {\n        self.getDocument(function (doc) {\n          callback(firepad.SerializeHtml(doc, self.entityManager_));\n        });\n      });\n    };\n\n    Headless.prototype.setHtml = function (html, callback) {\n      var self = this;\n\n      if (this.zombie_) {\n        throw new Error('You can\\'t use a firepad.Headless after calling dispose()!');\n      }\n\n      self.initializeFakeDom(function () {\n        var textPieces = ParseHtml(html, self.entityManager_);\n        var inserts = firepad.textPiecesToInserts(true, textPieces);\n        var op = new TextOperation();\n\n        for (var i = 0; i < inserts.length; i++) {\n          op.insert(inserts[i].string, inserts[i].attributes);\n        }\n\n        self.sendOperationWithRetry(op, callback);\n      });\n    };\n\n    Headless.prototype.sendOperationWithRetry = function (operation, callback) {\n      var self = this;\n      self.getDocument(function (doc) {\n        var op = operation.clone()['delete'](doc.targetLength);\n        self.firebaseAdapter_.sendOperation(op, function (err, committed) {\n          if (committed) {\n            if (typeof callback !== \"undefined\") {\n              callback(null, committed);\n            }\n          } else {\n            self.sendOperationWithRetry(operation, callback);\n          }\n        });\n      });\n    };\n\n    Headless.prototype.dispose = function () {\n      this.zombie_ = true; // We've been disposed.  No longer valid to do anything.\n\n      this.firebaseAdapter_.dispose();\n    };\n\n    return Headless;\n  }();\n\n  var firepad = firepad || {};\n\n  firepad.Firepad = function (global) {\n    if (!firepad.RichTextCodeMirrorAdapter) {\n      throw new Error(\"Oops! It looks like you're trying to include lib/firepad.js directly.  This is actually one of many source files that make up firepad.  You want dist/firepad.js instead.\");\n    }\n\n    var RichTextCodeMirrorAdapter = firepad.RichTextCodeMirrorAdapter;\n    var RichTextCodeMirror = firepad.RichTextCodeMirror;\n    var RichTextToolbar = firepad.RichTextToolbar;\n    var ACEAdapter = firepad.ACEAdapter;\n    var MonacoAdapter = firepad.MonacoAdapter;\n    var FirebaseAdapter = firepad.FirebaseAdapter;\n    var EditorClient = firepad.EditorClient;\n    var EntityManager = firepad.EntityManager;\n    var ATTR = firepad.AttributeConstants;\n    var utils = firepad.utils;\n    var LIST_TYPE = firepad.LineFormatting.LIST_TYPE;\n    var CodeMirror = global.CodeMirror;\n    var ace = global.ace;\n    var monaco = global.monaco;\n\n    function Firepad(ref, place, options) {\n      if (!(this instanceof Firepad)) {\n        return new Firepad(ref, place, options);\n      }\n\n      if (!CodeMirror && !ace && !global.monaco) {\n        throw new Error('Couldn\\'t find CodeMirror, ACE or Monaco.  Did you forget to include codemirror.js/ace.js or import monaco?');\n      }\n\n      this.zombie_ = false;\n\n      if (CodeMirror && place instanceof CodeMirror) {\n        this.codeMirror_ = this.editor_ = place;\n        var curValue = this.codeMirror_.getValue();\n\n        if (curValue !== '') {\n          throw new Error(\"Can't initialize Firepad with a CodeMirror instance that already contains text.\");\n        }\n      } else if (ace && place && place.session instanceof ace.EditSession) {\n        this.ace_ = this.editor_ = place;\n        curValue = this.ace_.getValue();\n\n        if (curValue !== '') {\n          throw new Error(\"Can't initialize Firepad with an ACE instance that already contains text.\");\n        }\n      } else if (global.monaco && place && place instanceof global.monaco.constructor) {\n        monaco = global.monaco;\n        this.monaco_ = this.editor_ = place;\n        curValue = this.monaco_.getValue();\n\n        if (curValue !== '') {\n          throw new Error(\"Can't initialize Firepad with a Monaco instance that already contains text.\");\n        }\n      } else {\n        this.codeMirror_ = this.editor_ = new CodeMirror(place);\n      }\n\n      var editorWrapper;\n\n      if (this.codeMirror_) {\n        editorWrapper = this.codeMirror_.getWrapperElement();\n      } else if (this.ace_) {\n        editorWrapper = this.ace_.container;\n      } else {\n        editorWrapper = this.monaco_.getDomNode();\n      } // var editorWrapper = this.codeMirror_ ? this.codeMirror_.getWrapperElement() : this.ace_.container;\n\n\n      this.firepadWrapper_ = utils.elt(\"div\", null, {\n        'class': 'firepad'\n      });\n      editorWrapper.parentNode.replaceChild(this.firepadWrapper_, editorWrapper);\n      this.firepadWrapper_.appendChild(editorWrapper); // Provide an easy way to get the firepad instance associated with this CodeMirror instance.\n\n      this.editor_.firepad = this;\n      this.options_ = options || {};\n\n      if (this.getOption('richTextShortcuts', false)) {\n        if (!CodeMirror.keyMap['richtext']) {\n          this.initializeKeyMap_();\n        }\n\n        this.codeMirror_.setOption('keyMap', 'richtext');\n        this.firepadWrapper_.className += ' firepad-richtext';\n      }\n\n      this.imageInsertionUI = this.getOption('imageInsertionUI', true);\n\n      if (this.getOption('richTextToolbar', false)) {\n        this.addToolbar_();\n        this.firepadWrapper_.className += ' firepad-richtext firepad-with-toolbar';\n      }\n\n      this.addPoweredByLogo_(); // Now that we've mucked with CodeMirror, refresh it.\n\n      if (this.codeMirror_) this.codeMirror_.refresh();\n      var userId = this.getOption('userId', ref.push().key);\n      var userColor = this.getOption('userColor', colorFromUserId(userId));\n      this.entityManager_ = new EntityManager();\n      this.firebaseAdapter_ = new FirebaseAdapter(ref, userId, userColor);\n\n      if (this.codeMirror_) {\n        this.richTextCodeMirror_ = new RichTextCodeMirror(this.codeMirror_, this.entityManager_, {\n          cssPrefix: 'firepad-'\n        });\n        this.editorAdapter_ = new RichTextCodeMirrorAdapter(this.richTextCodeMirror_);\n      } else if (this.ace_) {\n        this.editorAdapter_ = new ACEAdapter(this.ace_);\n      } else {\n        this.editorAdapter_ = new MonacoAdapter(this.monaco_);\n      }\n\n      this.client_ = new EditorClient(this.firebaseAdapter_, this.editorAdapter_);\n      var self = this;\n      this.firebaseAdapter_.on('cursor', function () {\n        self.trigger.apply(self, ['cursor'].concat([].slice.call(arguments)));\n      });\n\n      if (this.codeMirror_) {\n        this.richTextCodeMirror_.on('newLine', function () {\n          self.trigger.apply(self, ['newLine'].concat([].slice.call(arguments)));\n        });\n      }\n\n      this.firebaseAdapter_.on('ready', function () {\n        self.ready_ = true;\n\n        if (this.ace_) {\n          this.editorAdapter_.grabDocumentState();\n        }\n\n        if (this.monaco_) {\n          this.editorAdapter_.grabDocumentState();\n        }\n\n        var defaultText = self.getOption('defaultText', null);\n\n        if (defaultText && self.isHistoryEmpty()) {\n          self.setText(defaultText);\n        }\n\n        self.trigger('ready');\n      });\n      this.client_.on('synced', function (isSynced) {\n        self.trigger('synced', isSynced);\n      }); // Hack for IE8 to make font icons work more reliably.\n      // http://stackoverflow.com/questions/9809351/ie8-css-font-face-fonts-only-working-for-before-content-on-over-and-sometimes\n\n      if (navigator.appName == 'Microsoft Internet Explorer' && navigator.userAgent.match(/MSIE 8\\./)) {\n        window.onload = function () {\n          var head = document.getElementsByTagName('head')[0],\n              style = document.createElement('style');\n          style.type = 'text/css';\n          style.styleSheet.cssText = ':before,:after{content:none !important;}';\n          head.appendChild(style);\n          setTimeout(function () {\n            head.removeChild(style);\n          }, 0);\n        };\n      }\n    }\n\n    utils.makeEventEmitter(Firepad); // For readability, these are the primary \"constructors\", even though right now they're just aliases for Firepad.\n\n    Firepad.fromCodeMirror = Firepad;\n    Firepad.fromACE = Firepad;\n    Firepad.fromMonaco = Firepad;\n\n    Firepad.prototype.dispose = function () {\n      this.zombie_ = true; // We've been disposed.  No longer valid to do anything.\n      // Unwrap the editor.\n      // var editorWrapper = this.codeMirror_ ? this.codeMirror_.getWrapperElement() : this.ace_.container;\n\n      if (this.codeMirror_) {\n        editorWrapper = this.codeMirror_.getWrapperElement();\n      } else if (this.ace_) {\n        editorWrapper = this.ace_.container;\n      } else {\n        editorWrapper = this.monaco_.getDomNode();\n      }\n\n      this.firepadWrapper_.removeChild(editorWrapper);\n      this.firepadWrapper_.parentNode.replaceChild(editorWrapper, this.firepadWrapper_);\n      this.editor_.firepad = null;\n\n      if (this.codeMirror_ && this.codeMirror_.getOption('keyMap') === 'richtext') {\n        this.codeMirror_.setOption('keyMap', 'default');\n      }\n\n      this.firebaseAdapter_.dispose();\n      this.editorAdapter_.detach();\n      if (this.richTextCodeMirror_) this.richTextCodeMirror_.detach();\n    };\n\n    Firepad.prototype.setUserId = function (userId) {\n      this.firebaseAdapter_.setUserId(userId);\n    };\n\n    Firepad.prototype.setUserColor = function (color) {\n      this.firebaseAdapter_.setColor(color);\n    };\n\n    Firepad.prototype.getText = function () {\n      this.assertReady_('getText');\n      if (this.codeMirror_) return this.richTextCodeMirror_.getText();else if (this.ace_) return this.ace_.getSession().getDocument().getValue();else return this.monaco_.getModel().getValue();\n    };\n\n    Firepad.prototype.setText = function (textPieces) {\n      this.assertReady_('setText');\n\n      if (this.monaco_) {\n        return this.monaco_.getModel().setValue(textPieces);\n      } else if (this.ace_) {\n        return this.ace_.getSession().getDocument().setValue(textPieces);\n      } else {\n        // HACK: Hide CodeMirror during setText to prevent lots of extra renders.\n        this.codeMirror_.getWrapperElement().style.display = \"none\";\n        this.codeMirror_.setValue(\"\");\n        this.insertText(0, textPieces);\n        this.codeMirror_.getWrapperElement().style.display = \"\";\n        this.codeMirror_.refresh();\n      }\n\n      this.editorAdapter_.setCursor({\n        position: 0,\n        selectionEnd: 0\n      });\n    };\n\n    Firepad.prototype.insertTextAtCursor = function (textPieces) {\n      this.insertText(this.codeMirror_.indexFromPos(this.codeMirror_.getCursor()), textPieces);\n    };\n\n    Firepad.prototype.insertText = function (index, textPieces) {\n      utils.assert(!this.ace_, \"Not supported for ace yet.\");\n      utils.assert(!this.monaco_, \"Not supported for monaco yet.\");\n      this.assertReady_('insertText'); // Wrap it in an array if it's not already.\n\n      if (Object.prototype.toString.call(textPieces) !== '[object Array]') {\n        textPieces = [textPieces];\n      }\n\n      var self = this;\n      self.codeMirror_.operation(function () {\n        // HACK: We should check if we're actually at the beginning of a line; but checking for index == 0 is sufficient\n        // for the setText() case.\n        var atNewLine = index === 0;\n        var inserts = firepad.textPiecesToInserts(atNewLine, textPieces);\n\n        for (var i = 0; i < inserts.length; i++) {\n          var string = inserts[i].string;\n          var attributes = inserts[i].attributes;\n          self.richTextCodeMirror_.insertText(index, string, attributes);\n          index += string.length;\n        }\n      });\n    };\n\n    Firepad.prototype.getOperationForSpan = function (start, end) {\n      var text = this.richTextCodeMirror_.getRange(start, end);\n      var spans = this.richTextCodeMirror_.getAttributeSpans(start, end);\n      var pos = 0;\n      var op = new firepad.TextOperation();\n\n      for (var i = 0; i < spans.length; i++) {\n        op.insert(text.substr(pos, spans[i].length), spans[i].attributes);\n        pos += spans[i].length;\n      }\n\n      return op;\n    };\n\n    Firepad.prototype.getHtml = function () {\n      return this.getHtmlFromRange(null, null);\n    };\n\n    Firepad.prototype.getHtmlFromSelection = function () {\n      var startPos = this.codeMirror_.getCursor('start'),\n          endPos = this.codeMirror_.getCursor('end');\n      var startIndex = this.codeMirror_.indexFromPos(startPos),\n          endIndex = this.codeMirror_.indexFromPos(endPos);\n      return this.getHtmlFromRange(startIndex, endIndex);\n    };\n\n    Firepad.prototype.getHtmlFromRange = function (start, end) {\n      this.assertReady_('getHtmlFromRange');\n      var doc = start != null && end != null ? this.getOperationForSpan(start, end) : this.getOperationForSpan(0, this.codeMirror_.getValue().length);\n      return firepad.SerializeHtml(doc, this.entityManager_);\n    };\n\n    Firepad.prototype.insertHtml = function (index, html) {\n      var lines = firepad.ParseHtml(html, this.entityManager_);\n      this.insertText(index, lines);\n    };\n\n    Firepad.prototype.insertHtmlAtCursor = function (html) {\n      this.insertHtml(this.codeMirror_.indexFromPos(this.codeMirror_.getCursor()), html);\n    };\n\n    Firepad.prototype.setHtml = function (html) {\n      var lines = firepad.ParseHtml(html, this.entityManager_);\n      this.setText(lines);\n    };\n\n    Firepad.prototype.isHistoryEmpty = function () {\n      this.assertReady_('isHistoryEmpty');\n      return this.firebaseAdapter_.isHistoryEmpty();\n    };\n\n    Firepad.prototype.bold = function () {\n      this.richTextCodeMirror_.toggleAttribute(ATTR.BOLD);\n      this.codeMirror_.focus();\n    };\n\n    Firepad.prototype.italic = function () {\n      this.richTextCodeMirror_.toggleAttribute(ATTR.ITALIC);\n      this.codeMirror_.focus();\n    };\n\n    Firepad.prototype.underline = function () {\n      this.richTextCodeMirror_.toggleAttribute(ATTR.UNDERLINE);\n      this.codeMirror_.focus();\n    };\n\n    Firepad.prototype.strike = function () {\n      this.richTextCodeMirror_.toggleAttribute(ATTR.STRIKE);\n      this.codeMirror_.focus();\n    };\n\n    Firepad.prototype.fontSize = function (size) {\n      this.richTextCodeMirror_.setAttribute(ATTR.FONT_SIZE, size);\n      this.codeMirror_.focus();\n    };\n\n    Firepad.prototype.font = function (font) {\n      this.richTextCodeMirror_.setAttribute(ATTR.FONT, font);\n      this.codeMirror_.focus();\n    };\n\n    Firepad.prototype.color = function (color) {\n      this.richTextCodeMirror_.setAttribute(ATTR.COLOR, color);\n      this.codeMirror_.focus();\n    };\n\n    Firepad.prototype.highlight = function () {\n      this.richTextCodeMirror_.toggleAttribute(ATTR.BACKGROUND_COLOR, 'rgba(255,255,0,.65)');\n      this.codeMirror_.focus();\n    };\n\n    Firepad.prototype.align = function (alignment) {\n      if (alignment !== 'left' && alignment !== 'center' && alignment !== 'right') {\n        throw new Error('align() must be passed \"left\", \"center\", or \"right\".');\n      }\n\n      this.richTextCodeMirror_.setLineAttribute(ATTR.LINE_ALIGN, alignment);\n      this.codeMirror_.focus();\n    };\n\n    Firepad.prototype.orderedList = function () {\n      this.richTextCodeMirror_.toggleLineAttribute(ATTR.LIST_TYPE, 'o');\n      this.codeMirror_.focus();\n    };\n\n    Firepad.prototype.unorderedList = function () {\n      this.richTextCodeMirror_.toggleLineAttribute(ATTR.LIST_TYPE, 'u');\n      this.codeMirror_.focus();\n    };\n\n    Firepad.prototype.todo = function () {\n      this.richTextCodeMirror_.toggleTodo();\n      this.codeMirror_.focus();\n    };\n\n    Firepad.prototype.newline = function () {\n      this.richTextCodeMirror_.newline();\n    };\n\n    Firepad.prototype.deleteLeft = function () {\n      this.richTextCodeMirror_.deleteLeft();\n    };\n\n    Firepad.prototype.deleteRight = function () {\n      this.richTextCodeMirror_.deleteRight();\n    };\n\n    Firepad.prototype.indent = function () {\n      this.richTextCodeMirror_.indent();\n      this.codeMirror_.focus();\n    };\n\n    Firepad.prototype.unindent = function () {\n      this.richTextCodeMirror_.unindent();\n      this.codeMirror_.focus();\n    };\n\n    Firepad.prototype.undo = function () {\n      this.codeMirror_.undo();\n    };\n\n    Firepad.prototype.redo = function () {\n      this.codeMirror_.redo();\n    };\n\n    Firepad.prototype.insertEntity = function (type, info, origin) {\n      this.richTextCodeMirror_.insertEntityAtCursor(type, info, origin);\n    };\n\n    Firepad.prototype.insertEntityAt = function (index, type, info, origin) {\n      this.richTextCodeMirror_.insertEntityAt(index, type, info, origin);\n    };\n\n    Firepad.prototype.registerEntity = function (type, options) {\n      this.entityManager_.register(type, options);\n    };\n\n    Firepad.prototype.getOption = function (option, def) {\n      return option in this.options_ ? this.options_[option] : def;\n    };\n\n    Firepad.prototype.assertReady_ = function (funcName) {\n      if (!this.ready_) {\n        throw new Error('You must wait for the \"ready\" event before calling ' + funcName + '.');\n      }\n\n      if (this.zombie_) {\n        throw new Error('You can\\'t use a Firepad after calling dispose()!  [called ' + funcName + ']');\n      }\n    };\n\n    Firepad.prototype.makeImageDialog_ = function () {\n      this.makeDialog_('img', 'Insert image url');\n    };\n\n    Firepad.prototype.makeDialog_ = function (id, placeholder) {\n      var self = this;\n\n      var hideDialog = function () {\n        var dialog = document.getElementById('overlay');\n        dialog.style.visibility = \"hidden\";\n        self.firepadWrapper_.removeChild(dialog);\n      };\n\n      var cb = function () {\n        var dialog = document.getElementById('overlay');\n        dialog.style.visibility = \"hidden\";\n        var src = document.getElementById(id).value;\n        if (src !== null) self.insertEntity(id, {\n          'src': src\n        });\n        self.firepadWrapper_.removeChild(dialog);\n      };\n\n      var input = utils.elt('input', null, {\n        'class': 'firepad-dialog-input',\n        'id': id,\n        'type': 'text',\n        'placeholder': placeholder,\n        'autofocus': 'autofocus'\n      });\n      var submit = utils.elt('a', 'Submit', {\n        'class': 'firepad-btn',\n        'id': 'submitbtn'\n      });\n      utils.on(submit, 'click', utils.stopEventAnd(cb));\n      var cancel = utils.elt('a', 'Cancel', {\n        'class': 'firepad-btn'\n      });\n      utils.on(cancel, 'click', utils.stopEventAnd(hideDialog));\n      var buttonsdiv = utils.elt('div', [submit, cancel], {\n        'class': 'firepad-btn-group'\n      });\n      var div = utils.elt('div', [input, buttonsdiv], {\n        'class': 'firepad-dialog-div'\n      });\n      var dialog = utils.elt('div', [div], {\n        'class': 'firepad-dialog',\n        id: 'overlay'\n      });\n      this.firepadWrapper_.appendChild(dialog);\n    };\n\n    Firepad.prototype.addToolbar_ = function () {\n      this.toolbar = new RichTextToolbar(this.imageInsertionUI);\n      this.toolbar.on('undo', this.undo, this);\n      this.toolbar.on('redo', this.redo, this);\n      this.toolbar.on('bold', this.bold, this);\n      this.toolbar.on('italic', this.italic, this);\n      this.toolbar.on('underline', this.underline, this);\n      this.toolbar.on('strike', this.strike, this);\n      this.toolbar.on('font-size', this.fontSize, this);\n      this.toolbar.on('font', this.font, this);\n      this.toolbar.on('color', this.color, this);\n      this.toolbar.on('left', function () {\n        this.align('left');\n      }, this);\n      this.toolbar.on('center', function () {\n        this.align('center');\n      }, this);\n      this.toolbar.on('right', function () {\n        this.align('right');\n      }, this);\n      this.toolbar.on('ordered-list', this.orderedList, this);\n      this.toolbar.on('unordered-list', this.unorderedList, this);\n      this.toolbar.on('todo-list', this.todo, this);\n      this.toolbar.on('indent-increase', this.indent, this);\n      this.toolbar.on('indent-decrease', this.unindent, this);\n      this.toolbar.on('insert-image', this.makeImageDialog_, this);\n      this.firepadWrapper_.insertBefore(this.toolbar.element(), this.firepadWrapper_.firstChild);\n    };\n\n    Firepad.prototype.addPoweredByLogo_ = function () {\n      var poweredBy = utils.elt('a', null, {\n        'class': 'powered-by-firepad'\n      });\n      poweredBy.setAttribute('href', 'http://www.firepad.io/');\n      poweredBy.setAttribute('target', '_blank');\n      this.firepadWrapper_.appendChild(poweredBy);\n    };\n\n    Firepad.prototype.initializeKeyMap_ = function () {\n      function binder(fn) {\n        return function (cm) {\n          // HACK: CodeMirror will often call our key handlers within a cm.operation(), and that\n          // can mess us up (we rely on events being triggered synchronously when we make CodeMirror\n          // edits).  So to escape any cm.operation(), we do a setTimeout.\n          setTimeout(function () {\n            fn.call(cm.firepad);\n          }, 0);\n        };\n      }\n\n      CodeMirror.keyMap[\"richtext\"] = {\n        \"Ctrl-B\": binder(this.bold),\n        \"Cmd-B\": binder(this.bold),\n        \"Ctrl-I\": binder(this.italic),\n        \"Cmd-I\": binder(this.italic),\n        \"Ctrl-U\": binder(this.underline),\n        \"Cmd-U\": binder(this.underline),\n        \"Ctrl-H\": binder(this.highlight),\n        \"Cmd-H\": binder(this.highlight),\n        \"Enter\": binder(this.newline),\n        \"Delete\": binder(this.deleteRight),\n        \"Backspace\": binder(this.deleteLeft),\n        \"Tab\": binder(this.indent),\n        \"Shift-Tab\": binder(this.unindent),\n        fallthrough: ['default']\n      };\n    };\n\n    function colorFromUserId(userId) {\n      var a = 1;\n\n      for (var i = 0; i < userId.length; i++) {\n        a = 17 * (a + userId.charCodeAt(i)) % 360;\n      }\n\n      var hue = a / 360;\n      return hsl2hex(hue, 1, 0.75);\n    }\n\n    function rgb2hex(r, g, b) {\n      function digits(n) {\n        var m = Math.round(255 * n).toString(16);\n        return m.length === 1 ? '0' + m : m;\n      }\n\n      return '#' + digits(r) + digits(g) + digits(b);\n    }\n\n    function hsl2hex(h, s, l) {\n      if (s === 0) {\n        return rgb2hex(l, l, l);\n      }\n\n      var var2 = l < 0.5 ? l * (1 + s) : l + s - s * l;\n      var var1 = 2 * l - var2;\n\n      var hue2rgb = function (hue) {\n        if (hue < 0) {\n          hue += 1;\n        }\n\n        if (hue > 1) {\n          hue -= 1;\n        }\n\n        if (6 * hue < 1) {\n          return var1 + (var2 - var1) * 6 * hue;\n        }\n\n        if (2 * hue < 1) {\n          return var2;\n        }\n\n        if (3 * hue < 2) {\n          return var1 + (var2 - var1) * 6 * (2 / 3 - hue);\n        }\n\n        return var1;\n      };\n\n      return rgb2hex(hue2rgb(h + 1 / 3), hue2rgb(h), hue2rgb(h - 1 / 3));\n    }\n\n    return Firepad;\n  }(this); // Export Text classes\n\n\n  firepad.Firepad.Formatting = firepad.Formatting;\n  firepad.Firepad.Text = firepad.Text;\n  firepad.Firepad.Entity = firepad.Entity;\n  firepad.Firepad.LineFormatting = firepad.LineFormatting;\n  firepad.Firepad.Line = firepad.Line;\n  firepad.Firepad.TextOperation = firepad.TextOperation;\n  firepad.Firepad.Headless = firepad.Headless; // Export adapters\n\n  firepad.Firepad.RichTextCodeMirrorAdapter = firepad.RichTextCodeMirrorAdapter;\n  firepad.Firepad.ACEAdapter = firepad.ACEAdapter;\n  firepad.Firepad.MonacoAdapter = firepad.MonacoAdapter;\n  return firepad.Firepad;\n}, this);","map":{"version":3,"sources":["C:/Users/mohammed/Documents/collab-edit/my-app/node_modules/firepad/dist/firepad.min.js"],"names":["name","definition","context","module","exports","define","firepad","utils","makeEventEmitter","clazz","opt_allowedEVents","prototype","allowedEvents_","on","eventType","callback","validateEventType_","eventListeners_","push","off","listeners","i","length","splice","trigger","apply","Array","slice","call","arguments","allowed","Error","elt","tag","content","attrs","e","document","createElement","setTextContent","appendChild","attr","setAttribute","str","innerHTML","createTextNode","emitter","type","f","capture","addEventListener","attachEvent","removeEventListener","detachEvent","preventDefault","returnValue","stopPropagation","cancelBubble","stopEvent","stopEventAnd","fn","trim","replace","stringEndsWith","suffix","list","indexOf","assert","b","msg","log","console","args","Span","pos","end","TextOp","chars","text","attributes","isInsert","isDelete","isRetain","equals","other","attributesEqual","otherAttributes","hasEmptyAttributes","empty","TextOperation","constructor","ops","baseLength","targetLength","retain","n","prevOp","insert","prevPrevOp","isNoop","clone","toString","map","arr","newArr","l","op","join","toJSON","fromJSON","o","oldAttributes","newAttributes","operation","newStringParts","j","k","oldIndex","currAttributes","updatedAttributes","insertedAttributes","newString","invert","strIndex","inverse","compose","operation2","operation1","composeAttributes","first","second","firstOpIsInsert","merged","ops1","ops2","i1","i2","op1","op2","JSON","stringify","getSimpleOp","getStartIndex","shouldBeComposedWith","startA","startB","simpleA","simpleB","shouldBeComposedWithInverted","transformAttributes","attributes1","attributes2","attributes1prime","attributes2prime","allAttrs","attr1","attr2","transform","operation1prime","operation2prime","minl","attributesPrime","AnnotationList","bool","OldAnnotatedSpan","node","annotation","attachedObject_","attachedObject","getAttachedObject","NewAnnotatedSpan","node_","attachObject","object","NullAnnotation","changeHandler","head_","Node","changeHandler_","insertAnnotatedSpan","span","wrapOperation_","oldPos","old","next","toInsert","newNodes","removeSpan","current","afterChars","updateSpan","updateFn","currentPos","beforeChars","updateChars","operationFn","oldNodes","res","getAffectedNodes_","tail","start","succ","newSegment","startPos","includePredInOldNodes","includeSuccInOldNodes","mergeNodesWithSameAnnotations_","newPos","pred","beforePred","predPos","beforeStart","oldSegment","result","prevprev","prev","curr","forEach","getAnnotatedSpansForPos","getAnnotatedSpansForSpan","oldSpans","Math","max","min","oldSpan","count","spanLength","Cursor","position","selectionEnd","obj","transformIndex","index","newIndex","newPosition","FirebaseAdapter","global","firebase","require","Firebase","CHECKPOINT_FREQUENCY","ref","userId","userColor","ref_","ready_","firebaseCallbacks_","zombie_","document_","revision_","pendingReceivedRevisions_","self","setUserId","setColor","connectedRef","root","child","firebaseOn_","snapshot","val","initializeUserData_","monitorCursors_","userId_","key","setTimeout","monitorHistory_","dispose","removeFirebaseCallbacks_","handleInitialRevisions_","userRef_","remove","onDisconnect","cancel","isHistoryEmpty","sendOperation","revisionId","revisionToId","doTransaction","revisionData","transaction","error","committed","message","sent_","id","JsonCrypt","fs","crypt","inputObj","cryptObject","EncryptJson","a","t","database","ServerValue","TIMESTAMP","sendCursor","set","cursor_","color","color_","getDocument","registerCallbacks","callbacks","usersRef","childChanged","childSnap","userData","cursor","once","s","author","checkpointRevision_","revisionFromId","monitorHistoryStartingAt_","revision","historyRef","startAt","revisionSnapshot","handlePendingReceivedRevisions_","pending","parseRevision_","triggerRetry","saveCheckpoint_","data","firebaseOff_","characters","digit","prefix","RichTextToolbar","imageInsertionUI","element_","makeElement_","element","makeButton_","eventName","iconName","btn","font","makeFontDropdown_","fontSize","makeFontSizeDropdown_","makeColorDropdown_","toolbarOptions","toolbarWrapper","toolbar","fonts","items","value","makeDropdown_","sizes","colors","className","title","value_suffix","button","isShown","showDropdown","style","display","hideDropdown","justDismissed","addItem","String","WrappedOperation","meta","wrapped","copy","source","target","hasOwnProperty","composeMeta","transformMeta","pair","UndoManager","NORMAL_STATE","UNDOING_STATE","REDOING_STATE","maxItems","state","dontCompose","undoStack","redoStack","add","pop","shift","transformStack","stack","newStack","Operation","reverse","performUndo","performRedo","canUndo","canRedo","isUndoing","isRedoing","Client","synchronized_","setState","applyClient","applyServer","serverAck","serverRetry","applyOperation","Synchronized","client","AwaitingConfirm","outstanding","AwaitingWithBuffer","buffer","newBuffer","pair1","pair2","EditorClient","SelfMeta","cursorBefore","cursorAfter","OtherClient","editorAdapter","updateCursor","removeCursor","mark","setOtherCursor","clear","serverAdapter","undoManager","clients","change","onChange","cursorActivity","onCursorActivity","blur","onBlur","focus","onFocus","registerUndo","undo","registerRedo","redo","ack","focused","emitStatus","retry","clientId","getClientObject","inherit","applyUnredo","invertOperation","setCursor","textOperation","last","inverseMeta","getCursor","oldCursor","Const","Super","F","_toConsumableArray","_arrayWithoutHoles","_iterableToArray","_unsupportedIterableToArray","_nonIterableSpread","TypeError","minLen","_arrayLikeToArray","Object","from","test","iter","Symbol","iterator","isArray","len","arr2","_classCallCheck","instance","Constructor","_defineProperties","props","descriptor","enumerable","configurable","writable","defineProperty","_createClass","protoProps","staticProps","ACEAdapter","aceInstance","bind","ace","aceSession","getSession","aceDoc","setNewLineMode","grabDocumentState","selection","aceRange","Range","lastDocLines","getAllLines","lastCursorRange","getRange","detach","removeListener","ignoreChanges","operationFromACEChange","concat","isEmpty","_this","action","delete_op","delta","insert_op","restLength","lines","getNewLineCharacter","indexFromPos","range","applyOperationToACE","to","posFromIndex","fromPoints","line","row","$lines","column","getValue","e2","_ref","_ref2","setSelectionRange","_this2","css","cursorRange","justCursor","otherCursors","removeMarker","_ref3","addStyleRule","clipRows","createAnchor","addMarker","styleElement","addedStyleRules","documentElement","getElementsByTagName","addedStyleSheet","sheet","insertRule","event","ref1","_len","_key","undoFn","redoFn","getCSS","bgColor","styleSheet","head","MonacoAdapter","monacoInstance","getModel","monaco","monacoModel","getLinesContent","getSelection","onDidChangeModelContent","didBlurHandler","onDidBlurEditorWidget","didFocusHandler","onDidFocusEditorWidget","didChangeCursorPositionHandler","onDidChangeCursorPosition","getStartPosition","endPos","getEndPosition","getOffsetAt","getPositionAt","setSelection","lineNumber","clientID","match","otherCursor","find","decoration","deltaDecorations","ret","options","assign","operationFromMonacoChanges","offset","rangeLength","rangeOffset","change_op","inverse_op","replaced_text","delete","getEOL","changes","opsList","executeEdits","forceMoveMarkers","AttributeConstants","BOLD","ITALIC","UNDERLINE","STRIKE","FONT","FONT_SIZE","COLOR","BACKGROUND_COLOR","ENTITY_SENTINEL","LINE_SENTINEL","LINE_INDENT","LINE_ALIGN","LIST_TYPE","sentinelConstants","LINE_SENTINEL_CHARACTER","ENTITY_SENTINEL_CHARACTER","EntityManager","entities_","register","render","info","src","html","fromElement","hasAttribute","getAttribute","renderToElement","entity","entityHandle","tryRenderToElement_","exportToElement","updateElement","update","nodeName","toLowerCase","Entity","renderFn","windowDocument","window","div","childNodes","nodeType","entitySupportsUpdate","entityType","ATTR","SENTINEL","PREFIX","toAttributes","fromAttributes","substr","RichTextCodeMirror","RichTextClassPrefixDefault","RichTextOriginPrefix","DynamicStyleAttributes","indent","StyleCache_","codeMirror","entityManager","options_","entityManager_","currentAttributes_","annotationList_","onAnnotationsChanged_","initAnnotationList_","parseInt","CodeMirror","version","onCodeMirrorChange_","onCodeMirrorBeforeChange_","onCursorActivity_","changeId_","outstandingChanges_","dirtyLines_","LineSentinelCharacter","EntitySentinelCharacter","clearAnnotations_","toggleAttribute","attribute","trueValue","emptySelection_","getCurrentAttributes_","newValue","cm","updateTextAttributes","updateCurrentAttributes_","origin","doLineAttributes","newChanges","changedAttributes","changedAttributesInverse","computeChangedAttributes_","emptyAttributes","attributesInverse","RichTextAnnotation","oldAttrs","newAttrs","changed","inverseChanged","toggleLineAttribute","currentAttributes","getCurrentLineAttributes_","setLineAttribute","updateLineAttributesForSelection","startLine","endLine","endLineText","getLine","endsAtBeginningOfLine","areLineSentinelCharacters_","ch","updateLineAttributes","lineStartIndex","insertText","replaceText","newOrigin","origOrigin","replaceRange","resetCursor","somethingSelected","removeText","insertEntityAtCursor","insertEntityAt","insertEntity_","getAttributeSpans","spans","annotatedSpans","lastLine","lineCount","marker","linesToReMark","tryToUpdateEntitiesInPlace","forLine","markEntity_","getClassNameForAttributes_","markText","getLineHandle","Number","queueLineMarking_","oldNodesLen","oldNode","newNodesLen","newNode","lineMarkTimeout_","dirtyLineNumbers","lineNum","getLineNumber","sort","lastLineMarked","markLineSentinelCharactersForChangedLines_","addStyleWithCSS_","cssText","globalClassName","classVal","dynStyle","selector","annotationNode","markers","collapsed","atomic","inclusiveLeft","inclusiveRight","createEntityHandle_","replacedWith","setMarker","queueRefresh_","refreshTimer_","refresh","location","where","at","member","m","lineClassRemover_","lineHandle","removeLineClass","newText","RegExp","cmpPos","posEq","posLe","sumLengths","strArr","sum","cmChanges","changeArray","convertCoordinateSystemForChanges_","removed","oldAnnotationSpans","removedPos","removedAttributes","markLineSentinelCharactersForChanges_","updateIndexFromPos","removedText","unshift","MAX_VALUE","lineIsListItemOrIndented_","listNumber","markIndex","markStartIndex","marks","findMarksAt","isForLineSentinel","markLineSentinelCharacters_","startIndex","endIndex","getMarkerLine","getLineAttributes_","listType","makeOrderedListElement_","makeUnorderedListElement_","makeTodoListElement_","addLineClass","markerOptions","number","toggleTodo","noRemove","checked","params","el","anchor","c","newline","replaceSelection","cursorLine","lineAttributes","deleteLeft","cursorPos","backspaceAtStartOfLine","unindent","deleteH","deleteRight","emptyLine","nextLineText","getText","method","RichTextCodeMirrorAdapter","rtcm","onAttributesChange","codemirrorLength","operationFromCodeMirrorChanges","docEndLength","fromIndex","operationFromAttributesChanges","toRetain","cb","_","selectionEndPos","cursorCoords","cursorEl","borderLeftWidth","borderLeftStyle","borderLeftColor","marginLeft","marginRight","height","bottom","top","zIndex","setBookmark","widget","insertLeft","selectionClassName","transparency","rule","hex2rgb","fromPos","toPos","getWrapperElement","opIndex","inverseAttributes","opValue","curValue","delTextPos","hex","num","rgb","exists","undefined","Formatting","cloneWithNewAttribute_","bold","italic","underline","strike","size","backgroundColor","Text","formatting","LineFormatting","NONE","ORDERED","UNORDERED","TODO","TODOCHECKED","align","listItem","getIndent","getAlign","getListItem","Line","textPieces","ParseHtml","ParseState","opt_listType","opt_lineFormatting","opt_textFormatting","lineFormatting","textFormatting","withTextFormatting","withLineFormatting","withListType","withIncreasedIndent","withAlign","ParseOutput","currentLine","currentLineListItemType","newlineIfNonEmpty","cleanLine_","newlineIfNonEmptyOrListItem","makeListItem","parseHtml","output","parseNode","ELEMENT_NODE","TEXT_NODE","nodeValue","parseStyle","parseChildren","face","parseListItem","hasChildNodes","oldLine","styleString","styles","split","stylePieces","prop","allowedValues","txt","charAt","toUpperCase","SerializeHtml","TODO_STYLE","open","close","compatibleListType","l1","l2","textToHtml","serializeHtml","doc","newLine","listTypeStack","inListItem","firstLine","usesTodo","lineAlign","toOpen","outerHTML","newLineIndex","textPiecesToInserts","atNewLine","inserts","string","insertLine","withNewline","Headless","refOrPath","refFromURL","firebaseAdapter_","setText","sendOperationWithRetry","initializeFakeDom","jsdom","JSDOM","getHtml","setHtml","err","Firepad","place","codeMirror_","editor_","session","EditSession","ace_","monaco_","editorWrapper","container","getDomNode","firepadWrapper_","parentNode","replaceChild","getOption","keyMap","initializeKeyMap_","setOption","addToolbar_","addPoweredByLogo_","colorFromUserId","richTextCodeMirror_","cssPrefix","editorAdapter_","client_","defaultText","isSynced","navigator","appName","userAgent","onload","removeChild","fromCodeMirror","fromACE","fromMonaco","setUserColor","assertReady_","setValue","insertTextAtCursor","getOperationForSpan","getHtmlFromRange","getHtmlFromSelection","insertHtml","insertHtmlAtCursor","highlight","alignment","orderedList","unorderedList","todo","insertEntity","registerEntity","option","def","funcName","makeImageDialog_","makeDialog_","placeholder","hideDialog","dialog","getElementById","visibility","input","submit","buttonsdiv","insertBefore","firstChild","poweredBy","binder","fallthrough","charCodeAt","hue","hsl2hex","rgb2hex","r","g","digits","round","h","var2","var1","hue2rgb"],"mappings":"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","sourcesContent":["/*!\n * Firepad is an open-source, collaborative code and text editor. It was designed\n * to be embedded inside larger applications. Since it uses Firebase as a backend,\n * it requires no server-side code and can be added to any web app simply by\n * including a couple JavaScript files.\n *\n * Firepad 0.0.0\n * http://www.firepad.io/\n * License: MIT\n * Copyright: 2014 Firebase\n * With code from ot.js (Copyright 2012-2013 Tim Baumann)\n */\n\n// ***Encryption of JSON Payload***\n// Create new Instance Object of JsonCrypt\n// Load RSA PublicKey from File\n// Set RSA PublicKey in JsonCrypt Instance **Important**\n// Get/Create your input Object\n// Apply EncryptJson on inputObj and get cryptObject\n// Transmit this cryptObject over HTTP\n\n(function (name, definition, context) {\n  //try CommonJS, then AMD (require.js), then use global.\n  if (typeof module != 'undefined' && module.exports) module.exports = definition();\n  else if (typeof context['define'] == 'function' && context['define']['amd']) define(definition);\n  else context[name] = definition();\n})('Firepad', function () {var firepad = firepad || { };\nfirepad.utils = { };\n\nfirepad.utils.makeEventEmitter = function(clazz, opt_allowedEVents) {\n  clazz.prototype.allowedEvents_ = opt_allowedEVents;\n\n  clazz.prototype.on = function(eventType, callback, context) {\n    this.validateEventType_(eventType);\n    this.eventListeners_ = this.eventListeners_ || { };\n    this.eventListeners_[eventType] = this.eventListeners_[eventType] || [];\n    this.eventListeners_[eventType].push({ callback: callback, context: context });\n  };\n\n  clazz.prototype.off = function(eventType, callback) {\n    this.validateEventType_(eventType);\n    this.eventListeners_ = this.eventListeners_ || { };\n    var listeners = this.eventListeners_[eventType] || [];\n    for(var i = 0; i < listeners.length; i++) {\n      if (listeners[i].callback === callback) {\n        listeners.splice(i, 1);\n        return;\n      }\n    }\n  };\n\n  clazz.prototype.trigger =  function(eventType /*, args ... */) {\n    this.eventListeners_ = this.eventListeners_ || { };\n    var listeners = this.eventListeners_[eventType] || [];\n    for(var i = 0; i < listeners.length; i++) {\n      listeners[i].callback.apply(listeners[i].context, Array.prototype.slice.call(arguments, 1));\n    }\n  };\n\n  clazz.prototype.validateEventType_ = function(eventType) {\n    if (this.allowedEvents_) {\n      var allowed = false;\n      for(var i = 0; i < this.allowedEvents_.length; i++) {\n        if (this.allowedEvents_[i] === eventType) {\n          allowed = true;\n          break;\n        }\n      }\n      if (!allowed) {\n        throw new Error('Unknown event \"' + eventType + '\"');\n      }\n    }\n  };\n};\n\nfirepad.utils.elt = function(tag, content, attrs) {\n  var e = document.createElement(tag);\n  if (typeof content === \"string\") {\n    firepad.utils.setTextContent(e, content);\n  } else if (content) {\n    for (var i = 0; i < content.length; ++i) { e.appendChild(content[i]); }\n  }\n  for(var attr in (attrs || { })) {\n    e.setAttribute(attr, attrs[attr]);\n  }\n  return e;\n};\n\nfirepad.utils.setTextContent = function(e, str) {\n  e.innerHTML = \"\";\n  e.appendChild(document.createTextNode(str));\n};\n\n\nfirepad.utils.on = function(emitter, type, f, capture) {\n  if (emitter.addEventListener) {\n    emitter.addEventListener(type, f, capture || false);\n  } else if (emitter.attachEvent) {\n    emitter.attachEvent(\"on\" + type, f);\n  }\n};\n\nfirepad.utils.off = function(emitter, type, f, capture) {\n  if (emitter.removeEventListener) {\n    emitter.removeEventListener(type, f, capture || false);\n  } else if (emitter.detachEvent) {\n    emitter.detachEvent(\"on\" + type, f);\n  }\n};\n\nfirepad.utils.preventDefault = function(e) {\n  if (e.preventDefault) {\n    e.preventDefault();\n  } else {\n    e.returnValue = false;\n  }\n};\n\nfirepad.utils.stopPropagation = function(e) {\n  if (e.stopPropagation) {\n    e.stopPropagation();\n  } else {\n    e.cancelBubble = true;\n  }\n};\n\nfirepad.utils.stopEvent = function(e) {\n  firepad.utils.preventDefault(e);\n  firepad.utils.stopPropagation(e);\n};\n\nfirepad.utils.stopEventAnd = function(fn) {\n  return function(e) {\n    fn(e);\n    firepad.utils.stopEvent(e);\n    return false;\n  };\n};\n\nfirepad.utils.trim = function(str) {\n  return str.replace(/^\\s+/g, '').replace(/\\s+$/g, '');\n};\n\nfirepad.utils.stringEndsWith = function(str, suffix) {\n  var list = (typeof suffix == 'string') ? [suffix] : suffix;\n  for (var i = 0; i < list.length; i++) {\n    var suffix = list[i];\n    if (str.indexOf(suffix, str.length - suffix.length) !== -1)\n      return true;\n  }\n  return false;\n};\n\nfirepad.utils.assert = function assert (b, msg) {\n  if (!b) {\n    throw new Error(msg || \"assertion error\");\n  }\n};\n\nfirepad.utils.log = function() {\n  if (typeof console !== 'undefined' && typeof console.log !== 'undefined') {\n    var args = ['Firepad:'];\n    for(var i = 0; i < arguments.length; i++) {\n      args.push(arguments[i]);\n    }\n    console.log.apply(console, args);\n  }\n};\n\nvar firepad = firepad || { };\nfirepad.Span = (function () {\n  function Span(pos, length) {\n    this.pos = pos;\n    this.length = length;\n  }\n\n  Span.prototype.end = function() {\n    return this.pos + this.length;\n  };\n\n  return Span;\n}());\n\nvar firepad = firepad || { };\n\nfirepad.TextOp = (function() {\n  var utils = firepad.utils;\n\n  // Operation are essentially lists of ops. There are three types of ops:\n  //\n  // * Retain ops: Advance the cursor position by a given number of characters.\n  //   Represented by positive ints.\n  // * Insert ops: Insert a given string at the current cursor position.\n  //   Represented by strings.\n  // * Delete ops: Delete the next n characters. Represented by negative ints.\n  function TextOp(type) {\n    this.type = type;\n    this.chars = null;\n    this.text = null;\n    this.attributes = null;\n\n    if (type === 'insert') {\n      this.text = arguments[1];\n      utils.assert(typeof this.text === 'string');\n      this.attributes = arguments[2] || { };\n      utils.assert (typeof this.attributes === 'object');\n    } else if (type === 'delete') {\n      this.chars = arguments[1];\n      utils.assert(typeof this.chars === 'number');\n    } else if (type === 'retain') {\n      this.chars = arguments[1];\n      utils.assert(typeof this.chars === 'number');\n      this.attributes = arguments[2] || { };\n      utils.assert (typeof this.attributes === 'object');\n    }\n  }\n\n  TextOp.prototype.isInsert = function() { return this.type === 'insert'; };\n  TextOp.prototype.isDelete = function() { return this.type === 'delete'; };\n  TextOp.prototype.isRetain = function() { return this.type === 'retain'; };\n\n  TextOp.prototype.equals = function(other) {\n    return (this.type === other.type &&\n        this.text === other.text &&\n        this.chars === other.chars &&\n        this.attributesEqual(other.attributes));\n  };\n\n  TextOp.prototype.attributesEqual = function(otherAttributes) {\n    for (var attr in this.attributes) {\n      if (this.attributes[attr] !== otherAttributes[attr]) { return false; }\n    }\n\n    for (attr in otherAttributes) {\n      if (this.attributes[attr] !== otherAttributes[attr]) { return false; }\n    }\n\n    return true;\n  };\n\n  TextOp.prototype.hasEmptyAttributes = function() {\n    var empty = true;\n    for (var attr in this.attributes) {\n      empty = false;\n      break;\n    }\n\n    return empty;\n  };\n\n  return TextOp;\n})();\n\nvar firepad = firepad || { };\n\nfirepad.TextOperation = (function () {\n  'use strict';\n  var TextOp = firepad.TextOp;\n  var utils = firepad.utils;\n\n  // Constructor for new operations.\n  function TextOperation () {\n    if (!this || this.constructor !== TextOperation) {\n      // => function was called without 'new'\n      return new TextOperation();\n    }\n\n    // When an operation is applied to an input string, you can think of this as\n    // if an imaginary cursor runs over the entire string and skips over some\n    // parts, deletes some parts and inserts characters at some positions. These\n    // actions (skip/delete/insert) are stored as an array in the \"ops\" property.\n    this.ops = [];\n    // An operation's baseLength is the length of every string the operation\n    // can be applied to.\n    this.baseLength = 0;\n    // The targetLength is the length of every string that results from applying\n    // the operation on a valid input string.\n    this.targetLength = 0;\n  }\n\n  TextOperation.prototype.equals = function (other) {\n    if (this.baseLength !== other.baseLength) { return false; }\n    if (this.targetLength !== other.targetLength) { return false; }\n    if (this.ops.length !== other.ops.length) { return false; }\n    for (var i = 0; i < this.ops.length; i++) {\n      if (!this.ops[i].equals(other.ops[i])) { return false; }\n    }\n    return true;\n  };\n\n\n  // After an operation is constructed, the user of the library can specify the\n  // actions of an operation (skip/insert/delete) with these three builder\n  // methods. They all return the operation for convenient chaining.\n\n  // Skip over a given number of characters.\n  TextOperation.prototype.retain = function (n, attributes) {\n    if (typeof n !== 'number' || n < 0) {\n      throw new Error(\"retain expects a positive integer.\");\n    }\n    if (n === 0) { return this; }\n    this.baseLength += n;\n    this.targetLength += n;\n    attributes = attributes || { };\n    var prevOp = (this.ops.length > 0) ? this.ops[this.ops.length - 1] : null;\n    if (prevOp && prevOp.isRetain() && prevOp.attributesEqual(attributes)) {\n      // The last op is a retain op with the same attributes => we can merge them into one op.\n      prevOp.chars += n;\n    } else {\n      // Create a new op.\n      this.ops.push(new TextOp('retain', n, attributes));\n    }\n    return this;\n  };\n\n  // Insert a string at the current position.\n  TextOperation.prototype.insert = function (str, attributes) {\n    if (typeof str !== 'string') {\n      throw new Error(\"insert expects a string\");\n    }\n    if (str === '') { return this; }\n    attributes = attributes || { };\n    this.targetLength += str.length;\n    var prevOp = (this.ops.length > 0) ? this.ops[this.ops.length - 1] : null;\n    var prevPrevOp = (this.ops.length > 1) ? this.ops[this.ops.length - 2] : null;\n    if (prevOp && prevOp.isInsert() && prevOp.attributesEqual(attributes)) {\n      // Merge insert op.\n      prevOp.text += str;\n    } else if (prevOp && prevOp.isDelete()) {\n      // It doesn't matter when an operation is applied whether the operation\n      // is delete(3), insert(\"something\") or insert(\"something\"), delete(3).\n      // Here we enforce that in this case, the insert op always comes first.\n      // This makes all operations that have the same effect when applied to\n      // a document of the right length equal in respect to the `equals` method.\n      if (prevPrevOp && prevPrevOp.isInsert() && prevPrevOp.attributesEqual(attributes)) {\n        prevPrevOp.text += str;\n      } else {\n        this.ops[this.ops.length - 1] = new TextOp('insert', str, attributes);\n        this.ops.push(prevOp);\n      }\n    } else {\n      this.ops.push(new TextOp('insert', str, attributes));\n    }\n    return this;\n  };\n\n  // Delete a string at the current position.\n  TextOperation.prototype['delete'] = function (n) {\n    if (typeof n === 'string') { n = n.length; }\n    if (typeof n !== 'number' || n < 0) {\n      throw new Error(\"delete expects a positive integer or a string\");\n    }\n    if (n === 0) { return this; }\n    this.baseLength += n;\n    var prevOp = (this.ops.length > 0) ? this.ops[this.ops.length - 1] : null;\n    if (prevOp && prevOp.isDelete()) {\n      prevOp.chars += n;\n    } else {\n      this.ops.push(new TextOp('delete', n));\n    }\n    return this;\n  };\n\n  // Tests whether this operation has no effect.\n  TextOperation.prototype.isNoop = function () {\n    return this.ops.length === 0 ||\n        (this.ops.length === 1 && (this.ops[0].isRetain() && this.ops[0].hasEmptyAttributes()));\n  };\n\n  TextOperation.prototype.clone = function() {\n    var clone = new TextOperation();\n    for(var i = 0; i < this.ops.length; i++) {\n      if (this.ops[i].isRetain()) {\n        clone.retain(this.ops[i].chars, this.ops[i].attributes);\n      } else if (this.ops[i].isInsert()) {\n        clone.insert(this.ops[i].text, this.ops[i].attributes);\n      } else {\n        clone['delete'](this.ops[i].chars);\n      }\n    }\n\n    return clone;\n  };\n\n  // Pretty printing.\n  TextOperation.prototype.toString = function () {\n    // map: build a new array by applying a function to every element in an old\n    // array.\n    var map = Array.prototype.map || function (fn) {\n      var arr = this;\n      var newArr = [];\n      for (var i = 0, l = arr.length; i < l; i++) {\n        newArr[i] = fn(arr[i]);\n      }\n      return newArr;\n    };\n    return map.call(this.ops, function (op) {\n      if (op.isRetain()) {\n        return \"retain \" + op.chars;\n      } else if (op.isInsert()) {\n        return \"insert '\" + op.text + \"'\";\n      } else {\n        return \"delete \" + (op.chars);\n      }\n    }).join(', ');\n  };\n\n  // Converts operation into a JSON value.\n  TextOperation.prototype.toJSON = function () {\n    var ops = [];\n    for(var i = 0; i < this.ops.length; i++) {\n      // We prefix ops with their attributes if non-empty.\n      if (!this.ops[i].hasEmptyAttributes()) {\n        ops.push(this.ops[i].attributes);\n      }\n      if (this.ops[i].type === 'retain') {\n        ops.push(this.ops[i].chars);\n      } else if (this.ops[i].type === 'insert') {\n        ops.push(this.ops[i].text);\n      } else if (this.ops[i].type === 'delete') {\n        ops.push(-this.ops[i].chars);\n      }\n    }\n    // Return an array with /something/ in it, since an empty array will be treated as null by Firebase.\n    if (ops.length === 0) {\n      ops.push(0);\n    }\n    return ops;\n  };\n\n  // Converts a plain JS object into an operation and validates it.\n  TextOperation.fromJSON = function (ops) {\n    var o = new TextOperation();\n    for (var i = 0, l = ops.length; i < l; i++) {\n      var op = ops[i];\n      var attributes = { };\n      if (typeof op === 'object') {\n        attributes = op;\n        i++;\n        op = ops[i];\n      }\n      if (typeof op === 'number') {\n        if (op > 0) {\n          o.retain(op, attributes);\n        } else {\n          o['delete'](-op);\n        }\n      } else {\n        utils.assert(typeof op === 'string');\n        o.insert(op, attributes);\n      }\n    }\n    return o;\n  };\n\n  // Apply an operation to a string, returning a new string. Throws an error if\n  // there's a mismatch between the input string and the operation.\n  TextOperation.prototype.apply = function (str, oldAttributes, newAttributes) {\n    var operation = this;\n    oldAttributes = oldAttributes || [];\n    newAttributes = newAttributes || [];\n    if (str.length !== operation.baseLength) {\n      throw new Error(\"The operation's base length must be equal to the string's length.\");\n    }\n    var newStringParts = [], j = 0, k, attr;\n    var oldIndex = 0;\n    var ops = this.ops;\n    for (var i = 0, l = ops.length; i < l; i++) {\n      var op = ops[i];\n      if (op.isRetain()) {\n        if (oldIndex + op.chars > str.length) {\n          throw new Error(\"Operation can't retain more characters than are left in the string.\");\n        }\n        // Copy skipped part of the retained string.\n        newStringParts[j++] = str.slice(oldIndex, oldIndex + op.chars);\n\n        // Copy (and potentially update) attributes for each char in retained string.\n        for(k = 0; k < op.chars; k++) {\n          var currAttributes = oldAttributes[oldIndex + k] || { }, updatedAttributes = { };\n          for(attr in currAttributes) {\n            updatedAttributes[attr] = currAttributes[attr];\n            utils.assert(updatedAttributes[attr] !== false);\n          }\n          for(attr in op.attributes) {\n            if (op.attributes[attr] === false) {\n              delete updatedAttributes[attr];\n            } else {\n              updatedAttributes[attr] = op.attributes[attr];\n            }\n            utils.assert(updatedAttributes[attr] !== false);\n          }\n          newAttributes.push(updatedAttributes);\n        }\n\n        oldIndex += op.chars;\n      } else if (op.isInsert()) {\n        // Insert string.\n        newStringParts[j++] = op.text;\n\n        // Insert attributes for each char.\n        for(k = 0; k < op.text.length; k++) {\n          var insertedAttributes = { };\n          for(attr in op.attributes) {\n            insertedAttributes[attr] = op.attributes[attr];\n            utils.assert(insertedAttributes[attr] !== false);\n          }\n          newAttributes.push(insertedAttributes);\n        }\n      } else { // delete op\n        oldIndex += op.chars;\n      }\n    }\n    if (oldIndex !== str.length) {\n      throw new Error(\"The operation didn't operate on the whole string.\");\n    }\n    var newString = newStringParts.join('');\n    utils.assert(newString.length === newAttributes.length);\n\n    return newString;\n  };\n\n  // Computes the inverse of an operation. The inverse of an operation is the\n  // operation that reverts the effects of the operation, e.g. when you have an\n  // operation 'insert(\"hello \"); skip(6);' then the inverse is 'delete(\"hello \");\n  // skip(6);'. The inverse should be used for implementing undo.\n  TextOperation.prototype.invert = function (str) {\n    var strIndex = 0;\n    var inverse = new TextOperation();\n    var ops = this.ops;\n    for (var i = 0, l = ops.length; i < l; i++) {\n      var op = ops[i];\n      if (op.isRetain()) {\n        inverse.retain(op.chars);\n        strIndex += op.chars;\n      } else if (op.isInsert()) {\n        inverse['delete'](op.text.length);\n      } else { // delete op\n        inverse.insert(str.slice(strIndex, strIndex + op.chars));\n        strIndex += op.chars;\n      }\n    }\n    return inverse;\n  };\n\n  // Compose merges two consecutive operations into one operation, that\n  // preserves the changes of both. Or, in other words, for each input string S\n  // and a pair of consecutive operations A and B,\n  // apply(apply(S, A), B) = apply(S, compose(A, B)) must hold.\n  TextOperation.prototype.compose = function (operation2) {\n    var operation1 = this;\n    if (operation1.targetLength !== operation2.baseLength) {\n      throw new Error(\"The base length of the second operation has to be the target length of the first operation\");\n    }\n\n    function composeAttributes(first, second, firstOpIsInsert) {\n      var merged = { }, attr;\n      for(attr in first) {\n        merged[attr] = first[attr];\n      }\n      for(attr in second) {\n        if (firstOpIsInsert && second[attr] === false) {\n          delete merged[attr];\n        } else {\n          merged[attr] = second[attr];\n        }\n      }\n      return merged;\n    }\n\n    var operation = new TextOperation(); // the combined operation\n    var ops1 = operation1.clone().ops, ops2 = operation2.clone().ops;\n    var i1 = 0, i2 = 0; // current index into ops1 respectively ops2\n    var op1 = ops1[i1++], op2 = ops2[i2++]; // current ops\n    var attributes;\n    while (true) {\n      // Dispatch on the type of op1 and op2\n      if (typeof op1 === 'undefined' && typeof op2 === 'undefined') {\n        // end condition: both ops1 and ops2 have been processed\n        break;\n      }\n\n      if (op1 && op1.isDelete()) {\n        operation['delete'](op1.chars);\n        op1 = ops1[i1++];\n        continue;\n      }\n      if (op2 && op2.isInsert()) {\n        operation.insert(op2.text, op2.attributes);\n        op2 = ops2[i2++];\n        continue;\n      }\n\n      if (typeof op1 === 'undefined') {\n        throw new Error(\"Cannot compose operations: first operation is too short.\");\n      }\n      if (typeof op2 === 'undefined') {\n        throw new Error(\"Cannot compose operations: first operation is too long.\");\n      }\n\n      if (op1.isRetain() && op2.isRetain()) {\n        attributes = composeAttributes(op1.attributes, op2.attributes);\n        if (op1.chars > op2.chars) {\n          operation.retain(op2.chars, attributes);\n          op1.chars -= op2.chars;\n          op2 = ops2[i2++];\n        } else if (op1.chars === op2.chars) {\n          operation.retain(op1.chars, attributes);\n          op1 = ops1[i1++];\n          op2 = ops2[i2++];\n        } else {\n          operation.retain(op1.chars, attributes);\n          op2.chars -= op1.chars;\n          op1 = ops1[i1++];\n        }\n      } else if (op1.isInsert() && op2.isDelete()) {\n        if (op1.text.length > op2.chars) {\n          op1.text = op1.text.slice(op2.chars);\n          op2 = ops2[i2++];\n        } else if (op1.text.length === op2.chars) {\n          op1 = ops1[i1++];\n          op2 = ops2[i2++];\n        } else {\n          op2.chars -= op1.text.length;\n          op1 = ops1[i1++];\n        }\n      } else if (op1.isInsert() && op2.isRetain()) {\n        attributes = composeAttributes(op1.attributes, op2.attributes, /*firstOpIsInsert=*/true);\n        if (op1.text.length > op2.chars) {\n          operation.insert(op1.text.slice(0, op2.chars), attributes);\n          op1.text = op1.text.slice(op2.chars);\n          op2 = ops2[i2++];\n        } else if (op1.text.length === op2.chars) {\n          operation.insert(op1.text, attributes);\n          op1 = ops1[i1++];\n          op2 = ops2[i2++];\n        } else {\n          operation.insert(op1.text, attributes);\n          op2.chars -= op1.text.length;\n          op1 = ops1[i1++];\n        }\n      } else if (op1.isRetain() && op2.isDelete()) {\n        if (op1.chars > op2.chars) {\n          operation['delete'](op2.chars);\n          op1.chars -= op2.chars;\n          op2 = ops2[i2++];\n        } else if (op1.chars === op2.chars) {\n          operation['delete'](op2.chars);\n          op1 = ops1[i1++];\n          op2 = ops2[i2++];\n        } else {\n          operation['delete'](op1.chars);\n          op2.chars -= op1.chars;\n          op1 = ops1[i1++];\n        }\n      } else {\n        throw new Error(\n          \"This shouldn't happen: op1: \" +\n          JSON.stringify(op1) + \", op2: \" +\n          JSON.stringify(op2)\n        );\n      }\n    }\n    return operation;\n  };\n\n  function getSimpleOp (operation) {\n    var ops = operation.ops;\n    switch (ops.length) {\n    case 1:\n      return ops[0];\n    case 2:\n      return ops[0].isRetain() ? ops[1] : (ops[1].isRetain() ? ops[0] : null);\n    case 3:\n      if (ops[0].isRetain() && ops[2].isRetain()) { return ops[1]; }\n    }\n    return null;\n  }\n\n  function getStartIndex (operation) {\n    if (operation.ops[0].isRetain()) { return operation.ops[0].chars; }\n    return 0;\n  }\n\n  // When you use ctrl-z to undo your latest changes, you expect the program not\n  // to undo every single keystroke but to undo your last sentence you wrote at\n  // a stretch or the deletion you did by holding the backspace key down. This\n  // This can be implemented by composing operations on the undo stack. This\n  // method can help decide whether two operations should be composed. It\n  // returns true if the operations are consecutive insert operations or both\n  // operations delete text at the same position. You may want to include other\n  // factors like the time since the last change in your decision.\n  TextOperation.prototype.shouldBeComposedWith = function (other) {\n    if (this.isNoop() || other.isNoop()) { return true; }\n\n    var startA = getStartIndex(this), startB = getStartIndex(other);\n    var simpleA = getSimpleOp(this), simpleB = getSimpleOp(other);\n    if (!simpleA || !simpleB) { return false; }\n\n    if (simpleA.isInsert() && simpleB.isInsert()) {\n      return startA + simpleA.text.length === startB;\n    }\n\n    if (simpleA.isDelete() && simpleB.isDelete()) {\n      // there are two possibilities to delete: with backspace and with the\n      // delete key.\n      return (startB + simpleB.chars === startA) || startA === startB;\n    }\n\n    return false;\n  };\n\n  // Decides whether two operations should be composed with each other\n  // if they were inverted, that is\n  // `shouldBeComposedWith(a, b) = shouldBeComposedWithInverted(b^{-1}, a^{-1})`.\n  TextOperation.prototype.shouldBeComposedWithInverted = function (other) {\n    if (this.isNoop() || other.isNoop()) { return true; }\n\n    var startA = getStartIndex(this), startB = getStartIndex(other);\n    var simpleA = getSimpleOp(this), simpleB = getSimpleOp(other);\n    if (!simpleA || !simpleB) { return false; }\n\n    if (simpleA.isInsert() && simpleB.isInsert()) {\n      return startA + simpleA.text.length === startB || startA === startB;\n    }\n\n    if (simpleA.isDelete() && simpleB.isDelete()) {\n      return startB + simpleB.chars === startA;\n    }\n\n    return false;\n  };\n\n\n  TextOperation.transformAttributes = function(attributes1, attributes2) {\n    var attributes1prime = { }, attributes2prime = { };\n    var attr, allAttrs = { };\n    for(attr in attributes1) { allAttrs[attr] = true; }\n    for(attr in attributes2) { allAttrs[attr] = true; }\n\n    for (attr in allAttrs) {\n      var attr1 = attributes1[attr], attr2 = attributes2[attr];\n      utils.assert(attr1 != null || attr2 != null);\n      if (attr1 == null) {\n        // Only modified by attributes2; keep it.\n        attributes2prime[attr] = attr2;\n      } else if (attr2 == null) {\n        // only modified by attributes1; keep it\n        attributes1prime[attr] = attr1;\n      } else if (attr1 === attr2) {\n        // Both set it to the same value.  Nothing to do.\n      } else {\n        // attr1 and attr2 are different. Prefer attr1.\n        attributes1prime[attr] = attr1;\n      }\n    }\n    return [attributes1prime, attributes2prime];\n  };\n\n  // Transform takes two operations A and B that happened concurrently and\n  // produces two operations A' and B' (in an array) such that\n  // `apply(apply(S, A), B') = apply(apply(S, B), A')`. This function is the\n  // heart of OT.\n  TextOperation.transform = function (operation1, operation2) {\n    if (operation1.baseLength !== operation2.baseLength) {\n      throw new Error(\"Both operations have to have the same base length\");\n    }\n\n    var operation1prime = new TextOperation();\n    var operation2prime = new TextOperation();\n    var ops1 = operation1.clone().ops, ops2 = operation2.clone().ops;\n    var i1 = 0, i2 = 0;\n    var op1 = ops1[i1++], op2 = ops2[i2++];\n    while (true) {\n      // At every iteration of the loop, the imaginary cursor that both\n      // operation1 and operation2 have that operates on the input string must\n      // have the same position in the input string.\n\n      if (typeof op1 === 'undefined' && typeof op2 === 'undefined') {\n        // end condition: both ops1 and ops2 have been processed\n        break;\n      }\n\n      // next two cases: one or both ops are insert ops\n      // => insert the string in the corresponding prime operation, skip it in\n      // the other one. If both op1 and op2 are insert ops, prefer op1.\n      if (op1 && op1.isInsert()) {\n        operation1prime.insert(op1.text, op1.attributes);\n        operation2prime.retain(op1.text.length);\n        op1 = ops1[i1++];\n        continue;\n      }\n      if (op2 && op2.isInsert()) {\n        operation1prime.retain(op2.text.length);\n        operation2prime.insert(op2.text, op2.attributes);\n        op2 = ops2[i2++];\n        continue;\n      }\n\n      if (typeof op1 === 'undefined') {\n        throw new Error(\"Cannot transform operations: first operation is too short.\");\n      }\n      if (typeof op2 === 'undefined') {\n        throw new Error(\"Cannot transform operations: first operation is too long.\");\n      }\n\n      var minl;\n      if (op1.isRetain() && op2.isRetain()) {\n        // Simple case: retain/retain\n        var attributesPrime = TextOperation.transformAttributes(op1.attributes, op2.attributes);\n        if (op1.chars > op2.chars) {\n          minl = op2.chars;\n          op1.chars -= op2.chars;\n          op2 = ops2[i2++];\n        } else if (op1.chars === op2.chars) {\n          minl = op2.chars;\n          op1 = ops1[i1++];\n          op2 = ops2[i2++];\n        } else {\n          minl = op1.chars;\n          op2.chars -= op1.chars;\n          op1 = ops1[i1++];\n        }\n\n        operation1prime.retain(minl, attributesPrime[0]);\n        operation2prime.retain(minl, attributesPrime[1]);\n      } else if (op1.isDelete() && op2.isDelete()) {\n        // Both operations delete the same string at the same position. We don't\n        // need to produce any operations, we just skip over the delete ops and\n        // handle the case that one operation deletes more than the other.\n        if (op1.chars > op2.chars) {\n          op1.chars -= op2.chars;\n          op2 = ops2[i2++];\n        } else if (op1.chars === op2.chars) {\n          op1 = ops1[i1++];\n          op2 = ops2[i2++];\n        } else {\n          op2.chars -= op1.chars;\n          op1 = ops1[i1++];\n        }\n      // next two cases: delete/retain and retain/delete\n      } else if (op1.isDelete() && op2.isRetain()) {\n        if (op1.chars > op2.chars) {\n          minl = op2.chars;\n          op1.chars -= op2.chars;\n          op2 = ops2[i2++];\n        } else if (op1.chars === op2.chars) {\n          minl = op2.chars;\n          op1 = ops1[i1++];\n          op2 = ops2[i2++];\n        } else {\n          minl = op1.chars;\n          op2.chars -= op1.chars;\n          op1 = ops1[i1++];\n        }\n        operation1prime['delete'](minl);\n      } else if (op1.isRetain() && op2.isDelete()) {\n        if (op1.chars > op2.chars) {\n          minl = op2.chars;\n          op1.chars -= op2.chars;\n          op2 = ops2[i2++];\n        } else if (op1.chars === op2.chars) {\n          minl = op1.chars;\n          op1 = ops1[i1++];\n          op2 = ops2[i2++];\n        } else {\n          minl = op1.chars;\n          op2.chars -= op1.chars;\n          op1 = ops1[i1++];\n        }\n        operation2prime['delete'](minl);\n      } else {\n        throw new Error(\"The two operations aren't compatible\");\n      }\n    }\n\n    return [operation1prime, operation2prime];\n  };\n\n  // convenience method to write transform(a, b) as a.transform(b)\n  TextOperation.prototype.transform = function(other) {\n    return TextOperation.transform(this, other);\n  };\n\n  return TextOperation;\n}());\n\nvar firepad = firepad || { };\n\n// TODO: Rewrite this (probably using a splay tree) to be efficient.  Right now it's based on a linked list\n// so all operations are O(n), where n is the number of spans in the list.\nfirepad.AnnotationList = (function () {\n  var Span = firepad.Span;\n\n  function assert(bool, text) {\n    if (!bool) {\n      throw new Error('AnnotationList assertion failed' + (text ? (': ' + text) : ''));\n    }\n  }\n\n  function OldAnnotatedSpan(pos, node) {\n    this.pos = pos;\n    this.length = node.length;\n    this.annotation = node.annotation;\n    this.attachedObject_ = node.attachedObject;\n  }\n\n  OldAnnotatedSpan.prototype.getAttachedObject = function() {\n    return this.attachedObject_;\n  };\n\n  function NewAnnotatedSpan(pos, node) {\n    this.pos = pos;\n    this.length = node.length;\n    this.annotation = node.annotation;\n    this.node_ = node;\n  }\n\n  NewAnnotatedSpan.prototype.attachObject = function(object) {\n    this.node_.attachedObject = object;\n  };\n\n  var NullAnnotation = { equals: function() { return false; } };\n\n  function AnnotationList(changeHandler) {\n    // There's always a head node; to avoid special cases.\n    this.head_ = new Node(0, NullAnnotation);\n    this.changeHandler_ = changeHandler;\n  }\n\n  AnnotationList.prototype.insertAnnotatedSpan = function(span, annotation) {\n    this.wrapOperation_(new Span(span.pos, 0), function(oldPos, old) {\n      assert(!old || old.next === null); // should be 0 or 1 nodes.\n      var toInsert = new Node(span.length, annotation);\n      if (!old) {\n        return toInsert;\n      } else {\n        assert (span.pos > oldPos && span.pos < oldPos + old.length);\n        var newNodes = new Node(0, NullAnnotation);\n        // Insert part of old before insertion point.\n        newNodes.next = new Node(span.pos - oldPos, old.annotation);\n        // Insert new node.\n        newNodes.next.next = toInsert;\n        // Insert part of old after insertion point.\n        toInsert.next = new Node(oldPos + old.length - span.pos, old.annotation);\n        return newNodes.next;\n      }\n    });\n  };\n\n  AnnotationList.prototype.removeSpan = function(removeSpan) {\n    if (removeSpan.length === 0) { return; }\n\n    this.wrapOperation_(removeSpan, function(oldPos, old) {\n      assert (old !== null);\n      var newNodes = new Node(0, NullAnnotation), current = newNodes;\n      // Add new node for part before the removed span (if any).\n      if (removeSpan.pos > oldPos) {\n        current.next = new Node(removeSpan.pos - oldPos, old.annotation);\n        current = current.next;\n      }\n\n      // Skip over removed nodes.\n      while (removeSpan.end() > oldPos + old.length) {\n        oldPos += old.length;\n        old = old.next;\n      }\n\n      // Add new node for part after the removed span (if any).\n      var afterChars = oldPos + old.length - removeSpan.end();\n      if (afterChars > 0) {\n        current.next = new Node(afterChars, old.annotation);\n      }\n\n      return newNodes.next;\n    });\n  };\n\n  AnnotationList.prototype.updateSpan = function (span, updateFn) {\n    if (span.length === 0) { return; }\n\n    this.wrapOperation_(span, function(oldPos, old) {\n      assert (old !== null);\n      var newNodes = new Node(0, NullAnnotation), current = newNodes, currentPos = oldPos;\n\n      // Add node for any characters before the span we're updating.\n      var beforeChars = span.pos - currentPos;\n      assert(beforeChars < old.length);\n      if (beforeChars > 0) {\n        current.next = new Node(beforeChars, old.annotation);\n        current = current.next;\n        currentPos += current.length;\n      }\n\n      // Add updated nodes for entirely updated nodes.\n      while (old !== null && span.end() >= oldPos + old.length) {\n        var length = oldPos + old.length - currentPos;\n        current.next = new Node(length, updateFn(old.annotation, length));\n        current = current.next;\n        oldPos += old.length;\n        old = old.next;\n        currentPos = oldPos;\n      }\n\n      // Add updated nodes for last node.\n      var updateChars = span.end() - currentPos;\n      if (updateChars > 0) {\n        assert(updateChars < old.length);\n        current.next = new Node(updateChars, updateFn(old.annotation, updateChars));\n        current = current.next;\n        currentPos += current.length;\n\n        // Add non-updated remaining part of node.\n        current.next = new Node(oldPos + old.length - currentPos, old.annotation);\n      }\n\n      return newNodes.next;\n    });\n  };\n\n  AnnotationList.prototype.wrapOperation_ = function(span, operationFn) {\n    if (span.pos < 0) {\n      throw new Error('Span start cannot be negative.');\n    }\n    var oldNodes = [], newNodes = [];\n\n    var res = this.getAffectedNodes_(span);\n\n    var tail;\n    if (res.start !== null) {\n      tail = res.end.next;\n      // Temporarily truncate list so we can pass it to operationFn.  We'll splice it back in later.\n      res.end.next = null;\n    } else {\n      // start and end are null, because span is empty and lies on the border of two nodes.\n      tail = res.succ;\n    }\n\n    // Create a new segment to replace the affected nodes.\n    var newSegment = operationFn(res.startPos, res.start);\n\n    var includePredInOldNodes = false, includeSuccInOldNodes = false;\n    if (newSegment) {\n      this.mergeNodesWithSameAnnotations_(newSegment);\n\n      var newPos;\n      if (res.pred && res.pred.annotation.equals(newSegment.annotation)) {\n        // We can merge the pred node with newSegment's first node.\n        includePredInOldNodes = true;\n        newSegment.length += res.pred.length;\n\n        // Splice newSegment in after beforePred.\n        res.beforePred.next = newSegment;\n        newPos = res.predPos;\n      } else {\n        // Splice newSegment in after beforeStart.\n        res.beforeStart.next = newSegment;\n        newPos = res.startPos;\n      }\n\n      // Generate newNodes, but not the last one (since we may be able to merge it with succ).\n      while(newSegment.next) {\n        newNodes.push(new NewAnnotatedSpan(newPos, newSegment));\n        newPos += newSegment.length;\n        newSegment = newSegment.next;\n      }\n\n      if (res.succ && res.succ.annotation.equals(newSegment.annotation)) {\n        // We can merge newSegment's last node with the succ node.\n        newSegment.length += res.succ.length;\n        includeSuccInOldNodes = true;\n\n        // Splice rest of list after succ after newSegment.\n        newSegment.next = res.succ.next;\n      } else {\n        // Splice tail after newSegment.\n        newSegment.next = tail;\n      }\n\n      // Add last newSegment node to newNodes.\n      newNodes.push(new NewAnnotatedSpan(newPos, newSegment));\n\n    } else {\n      // newList is empty.  Try to merge pred and succ.\n      if (res.pred && res.succ && res.pred.annotation.equals(res.succ.annotation)) {\n        includePredInOldNodes = true;\n        includeSuccInOldNodes = true;\n\n        // Create succ + pred merged node and splice list together.\n        newSegment = new Node(res.pred.length + res.succ.length, res.pred.annotation);\n        res.beforePred.next = newSegment;\n        newSegment.next = res.succ.next;\n\n        newNodes.push(new NewAnnotatedSpan(res.startPos - res.pred.length, newSegment));\n      } else {\n        // Just splice list back together.\n        res.beforeStart.next = tail;\n      }\n    }\n\n    // Build list of oldNodes.\n\n    if (includePredInOldNodes) {\n      oldNodes.push(new OldAnnotatedSpan(res.predPos, res.pred));\n    }\n\n    var oldPos = res.startPos, oldSegment = res.start;\n    while (oldSegment !== null) {\n      oldNodes.push(new OldAnnotatedSpan(oldPos, oldSegment));\n      oldPos += oldSegment.length;\n      oldSegment = oldSegment.next;\n    }\n\n    if (includeSuccInOldNodes) {\n      oldNodes.push(new OldAnnotatedSpan(oldPos, res.succ));\n    }\n\n    this.changeHandler_(oldNodes, newNodes);\n  };\n\n  AnnotationList.prototype.getAffectedNodes_ = function(span) {\n    // We want to find nodes 'start', 'end', 'beforeStart', 'pred', and 'succ' where:\n    //  - 'start' contains the first character in span.\n    //  - 'end' contains the last character in span.\n    //  - 'beforeStart' is the node before 'start'.\n    //  - 'beforePred' is the node before 'pred'.\n    //  - 'succ' contains the node after 'end' if span.end() was on a node boundary, else null.\n    //  - 'pred' contains the node before 'start' if span.pos was on a node boundary, else null.\n\n    var result = {};\n\n    var prevprev = null, prev = this.head_, current = prev.next, currentPos = 0;\n    while (current !== null && span.pos >= currentPos + current.length) {\n      currentPos += current.length;\n      prevprev = prev;\n      prev = current;\n      current = current.next;\n    }\n    if (current === null && !(span.length === 0 && span.pos === currentPos)) {\n      throw new Error('Span start exceeds the bounds of the AnnotationList.');\n    }\n\n    result.startPos = currentPos;\n    // Special case if span is empty and on the border of two nodes\n    if (span.length === 0 && span.pos === currentPos) {\n      result.start = null;\n    } else {\n      result.start = current;\n    }\n    result.beforeStart = prev;\n\n    if (currentPos === span.pos && currentPos > 0) {\n      result.pred = prev;\n      result.predPos = currentPos - prev.length;\n      result.beforePred = prevprev;\n    } else {\n      result.pred = null;\n    }\n\n    while (current !== null && span.end() > currentPos) {\n      currentPos += current.length;\n      prev = current;\n      current = current.next;\n    }\n    if (span.end() > currentPos) {\n      throw new Error('Span end exceeds the bounds of the AnnotationList.');\n    }\n\n    // Special case if span is empty and on the border of two nodes.\n    if (span.length === 0 && span.end() === currentPos) {\n      result.end = null;\n    } else {\n      result.end = prev;\n    }\n    result.succ = (currentPos === span.end()) ? current : null;\n\n    return result;\n  };\n\n  AnnotationList.prototype.mergeNodesWithSameAnnotations_ = function(list) {\n    if (!list) { return; }\n    var prev = null, curr = list;\n    while (curr) {\n      if (prev && prev.annotation.equals(curr.annotation)) {\n        prev.length += curr.length;\n        prev.next = curr.next;\n      } else {\n        prev = curr;\n      }\n      curr = curr.next;\n    }\n  };\n\n  AnnotationList.prototype.forEach = function(callback) {\n    var current = this.head_.next;\n    while (current !== null) {\n      callback(current.length, current.annotation, current.attachedObject);\n      current = current.next;\n    }\n  };\n\n  AnnotationList.prototype.getAnnotatedSpansForPos = function(pos) {\n    var currentPos = 0;\n    var current = this.head_.next, prev = null;\n    while (current !== null && currentPos + current.length <= pos) {\n      currentPos += current.length;\n      prev = current;\n      current = current.next;\n    }\n    if (current === null && currentPos !== pos) {\n      throw new Error('pos exceeds the bounds of the AnnotationList');\n    }\n\n    var res = [];\n    if (currentPos === pos && prev) {\n      res.push(new OldAnnotatedSpan(currentPos - prev.length, prev));\n    }\n    if (current) {\n      res.push(new OldAnnotatedSpan(currentPos, current));\n    }\n    return res;\n  };\n\n  AnnotationList.prototype.getAnnotatedSpansForSpan = function(span) {\n    if (span.length === 0) {\n      return [];\n    }\n    var oldSpans = [];\n    var res = this.getAffectedNodes_(span);\n    var currentPos = res.startPos, current = res.start;\n    while (current !== null && currentPos < span.end()) {\n      var start = Math.max(currentPos, span.pos), end = Math.min(currentPos + current.length, span.end());\n      var oldSpan = new Span(start, end - start);\n      oldSpan.annotation = current.annotation;\n      oldSpans.push(oldSpan);\n\n      currentPos += current.length;\n      current = current.next;\n    }\n    return oldSpans;\n  };\n\n  // For testing.\n  AnnotationList.prototype.count = function() {\n    var count = 0;\n    var current = this.head_.next, prev = null;\n    while(current !== null) {\n      if (prev) {\n        assert(!prev.annotation.equals(current.annotation));\n      }\n      prev = current;\n      current = current.next;\n      count++;\n    }\n    return count;\n  };\n\n  function Node(length, annotation) {\n    this.length = length;\n    this.annotation = annotation;\n    this.attachedObject = null;\n    this.next = null;\n  }\n\n  Node.prototype.clone = function() {\n    var node = new Node(this.spanLength, this.annotation);\n    node.next = this.next;\n    return node;\n  };\n\n  return AnnotationList;\n}());\n\nvar firepad = firepad || { };\nfirepad.Cursor = (function () {\n  'use strict';\n\n  // A cursor has a `position` and a `selectionEnd`. Both are zero-based indexes\n  // into the document. When nothing is selected, `selectionEnd` is equal to\n  // `position`. When there is a selection, `position` is always the side of the\n  // selection that would move if you pressed an arrow key.\n  function Cursor (position, selectionEnd) {\n    this.position = position;\n    this.selectionEnd = selectionEnd;\n  }\n\n  Cursor.fromJSON = function (obj) {\n    return new Cursor(obj.position, obj.selectionEnd);\n  };\n\n  Cursor.prototype.equals = function (other) {\n    return this.position === other.position &&\n      this.selectionEnd === other.selectionEnd;\n  };\n\n  // Return the more current cursor information.\n  Cursor.prototype.compose = function (other) {\n    return other;\n  };\n\n  // Update the cursor with respect to an operation.\n  Cursor.prototype.transform = function (other) {\n    function transformIndex (index) {\n      var newIndex = index;\n      var ops = other.ops;\n      for (var i = 0, l = other.ops.length; i < l; i++) {\n        if (ops[i].isRetain()) {\n          index -= ops[i].chars;\n        } else if (ops[i].isInsert()) {\n          newIndex += ops[i].text.length;\n        } else {\n          newIndex -= Math.min(index, ops[i].chars);\n          index -= ops[i].chars;\n        }\n        if (index < 0) { break; }\n      }\n      return newIndex;\n    }\n\n    var newPosition = transformIndex(this.position);\n    if (this.position === this.selectionEnd) {\n      return new Cursor(newPosition, newPosition);\n    }\n    return new Cursor(newPosition, transformIndex(this.selectionEnd));\n  };\n\n  return Cursor;\n\n}());\n\n\nvar firepad = firepad || { };\n\nfirepad.FirebaseAdapter = (function (global) {\n\n  if (typeof firebase === \"undefined\" && typeof require === 'function' && typeof Firebase !== 'function') {\n\t  firebase = require('firebase/app');\n\t  require('firebase/database');\n  }\n\n  var TextOperation = firepad.TextOperation;\n  var utils = firepad.utils;\n\n  // Save a checkpoint every 100 edits.\n  var CHECKPOINT_FREQUENCY = 100;\n\n  function FirebaseAdapter (ref, userId, userColor) {\n    this.ref_ = ref;\n    this.ready_ = false;\n    this.firebaseCallbacks_ = [];\n    this.zombie_ = false;\n\n    // We store the current document state as a TextOperation so we can write checkpoints to Firebase occasionally.\n    // TODO: Consider more efficient ways to do this. (composing text operations is ~linear in the length of the document).\n    this.document_ = new TextOperation();\n\n    // The next expected revision.\n    this.revision_ = 0;\n\n    // This is used for two purposes:\n    // 1) On initialization, we fill this with the latest checkpoint and any subsequent operations and then\n    //      process them all together.\n    // 2) If we ever receive revisions out-of-order (e.g. rev 5 before rev 4), we queue them here until it's time\n    //    for them to be handled. [this should never happen with well-behaved clients; but if it /does/ happen we want\n    //    to handle it gracefully.]\n    this.pendingReceivedRevisions_ = { };\n\n    var self = this;\n\n    if (userId) {\n      this.setUserId(userId);\n      this.setColor(userColor);\n\n      var connectedRef = ref.root.child('.info/connected')\n\n      this.firebaseOn_(connectedRef, 'value', function(snapshot) {\n        if (snapshot.val() === true) {\n          self.initializeUserData_();\n        }\n      }, this);\n\n      // Once we're initialized, start tracking users' cursors.\n      this.on('ready', function() {\n        self.monitorCursors_();\n      });\n    } else {\n      this.userId_ = ref.push().key;\n    }\n\n    // Avoid triggering any events until our callers have had a chance to attach their listeners.\n    setTimeout(function() {\n      self.monitorHistory_();\n    }, 0);\n\n  }\n  utils.makeEventEmitter(FirebaseAdapter, ['ready', 'cursor', 'operation', 'ack', 'retry']);\n\n  FirebaseAdapter.prototype.dispose = function() {\n    var self = this;\n    this.removeFirebaseCallbacks_();\n    this.handleInitialRevisions_ = () => {};\n\n    if (!this.ready_) {\n      this.on('ready', function() {\n\t      self.dispose();\n      });\n      return;\n    }\n\n    if (this.userRef_) {\n      this.userRef_.child('cursor').remove();\n      this.userRef_.child('color').remove();\n    }\n\n    this.ref_ = null;\n    this.document_ = null;\n    this.zombie_ = true;\n  };\n\n  FirebaseAdapter.prototype.setUserId = function(userId) {\n    if (this.userRef_) {\n      // Clean up existing data.  Avoid nuking another user's data\n      // (if a future user takes our old name).\n      this.userRef_.child('cursor').remove();\n      this.userRef_.child('cursor').onDisconnect().cancel();\n      this.userRef_.child('color').remove();\n      this.userRef_.child('color').onDisconnect().cancel();\n    }\n\n    this.userId_ = userId;\n    this.userRef_ = this.ref_.child('users').child(userId);\n\n    this.initializeUserData_();\n  };\n\n  FirebaseAdapter.prototype.isHistoryEmpty = function() {\n    assert(this.ready_, \"Not ready yet.\");\n    return this.revision_ === 0;\n  };\n\n  /*\n   * Send operation, retrying on connection failure. Takes an optional callback with signature:\n   * function(error, committed).\n   * An exception will be thrown on transaction failure, which should only happen on\n   * catastrophic failure like a security rule violation.\n   */\n  FirebaseAdapter.prototype.sendOperation = function (operation, callback) {\n    var self = this;\n\n    // If we're not ready yet, do nothing right now, and trigger a retry when we're ready.\n    if (!this.ready_) {\n      this.on('ready', function() {\n        self.trigger('retry');\n      });\n      return;\n    }\n\n    // Sanity check that this operation is valid.\n    assert(this.document_.targetLength === operation.baseLength, \"sendOperation() called with invalid operation.\");\n\n    // Convert revision into an id that will sort properly lexicographically.\n    var revisionId = revisionToId(this.revision_);\n\n    function doTransaction(revisionId, revisionData) {\n\n      self.ref_.child('history').child(revisionId).transaction(function(current) {\n        if (current === null) {\n          return revisionData;\n        }\n      }, function(error, committed, snapshot) {\n        if (error) {\n          if (error.message === 'disconnect') {\n            if (self.sent_ && self.sent_.id === revisionId) {\n              // We haven't seen our transaction succeed or fail.  Send it again.\n              setTimeout(function() {\n                doTransaction(revisionId, revisionData);\n              }, 0);\n            } else if (callback) {\n              callback(error, false);\n            }\n          } else {\n            utils.log('Transaction failure!', error);\n            throw error;\n          }\n        } else {\n          if (callback) callback(null, committed);\n        }\n      }, /*applyLocally=*/false);\n    }\n\n    this.sent_ = { id: revisionId, op: operation };\n\n    const { JsonCrypt } = require('jsoncrypt-rsa');\n    const fs = require('fs');\n    \n    const crypt = new JsonCrypt();\n   \n    const inputObj = operation.toJSON()\n    \n    const cryptObject = crypt.EncryptJson(inputObj);\n    console.log(cryptObject); \n\n    doTransaction(revisionId, { a: self.userId_, o: operation.toJSON(), t: firebase.database.ServerValue.TIMESTAMP });\n    console.log(operation.toJSON())\n  };\n\n  FirebaseAdapter.prototype.sendCursor = function (obj) {\n    this.userRef_.child('cursor').set(obj);\n    this.cursor_ = obj;\n  };\n\n  FirebaseAdapter.prototype.setColor = function(color) {\n    this.userRef_.child('color').set(color);\n    this.color_ = color;\n  };\n\n  FirebaseAdapter.prototype.getDocument = function() {\n    return this.document_;\n  };\n\n  FirebaseAdapter.prototype.registerCallbacks = function(callbacks) {\n    for (var eventType in callbacks) {\n      this.on(eventType, callbacks[eventType]);\n    }\n  };\n\n  FirebaseAdapter.prototype.initializeUserData_ = function() {\n    this.userRef_.child('cursor').onDisconnect().remove();\n    this.userRef_.child('color').onDisconnect().remove();\n\n    this.sendCursor(this.cursor_ || null);\n    this.setColor(this.color_ || null);\n  };\n\n  FirebaseAdapter.prototype.monitorCursors_ = function() {\n    var usersRef = this.ref_.child('users'), self = this;\n\n    function childChanged(childSnap) {\n      var userId = childSnap.key;\n      var userData = childSnap.val();\n      self.trigger('cursor', userId, userData.cursor, userData.color);\n    }\n\n    this.firebaseOn_(usersRef, 'child_added', childChanged);\n    this.firebaseOn_(usersRef, 'child_changed', childChanged);\n\n    this.firebaseOn_(usersRef, 'child_removed', function(childSnap) {\n      var userId = childSnap.key;\n      self.trigger('cursor', userId, null);\n    });\n  };\n\n  FirebaseAdapter.prototype.monitorHistory_ = function() {\n    var self = this;\n    // Get the latest checkpoint as a starting point so we don't have to re-play entire history.\n    this.ref_.child('checkpoint').once('value', function(s) {\n      if (self.zombie_) { return; } // just in case we were cleaned up before we got the checkpoint data.\n      var revisionId = s.child('id').val(),  op = s.child('o').val(), author = s.child('a').val();\n      if (op != null && revisionId != null && author !== null) {\n        self.pendingReceivedRevisions_[revisionId] = { o: op, a: author };\n        self.checkpointRevision_ = revisionFromId(revisionId);\n        self.monitorHistoryStartingAt_(self.checkpointRevision_ + 1);\n      } else {\n        self.checkpointRevision_ = 0;\n        self.monitorHistoryStartingAt_(self.checkpointRevision_);\n      }\n    });\n  };\n\n  FirebaseAdapter.prototype.monitorHistoryStartingAt_ = function(revision) {\n    var historyRef = this.ref_.child('history').startAt(null, revisionToId(revision));\n    var self = this;\n\n    setTimeout(function() {\n      self.firebaseOn_(historyRef, 'child_added', function(revisionSnapshot) {\n        var revisionId = revisionSnapshot.key;\n        self.pendingReceivedRevisions_[revisionId] = revisionSnapshot.val();\n        if (self.ready_) {\n          self.handlePendingReceivedRevisions_();\n        }\n      });\n\n      historyRef.once('value', function() {\n        self.handleInitialRevisions_();\n      });\n    }, 0);\n  };\n\n  FirebaseAdapter.prototype.handleInitialRevisions_ = function() {\n    assert(!this.ready_, \"Should not be called multiple times.\");\n\n    // Compose the checkpoint and all subsequent revisions into a single operation to apply at once.\n    this.revision_ = this.checkpointRevision_;\n    var revisionId = revisionToId(this.revision_), pending = this.pendingReceivedRevisions_;\n    while (pending[revisionId] != null) {\n      var revision = this.parseRevision_(pending[revisionId]);\n      if (!revision) {\n        // If a misbehaved client adds a bad operation, just ignore it.\n        utils.log('Invalid operation.', this.ref_.toString(), revisionId, pending[revisionId]);\n      } else {\n        this.document_ = this.document_.compose(revision.operation);\n      }\n\n      delete pending[revisionId];\n      this.revision_++;\n      revisionId = revisionToId(this.revision_);\n    }\n\n    this.trigger('operation', this.document_);\n\n    this.ready_ = true;\n    var self = this;\n    setTimeout(function() {\n      self.trigger('ready');\n    }, 0);\n  };\n\n  FirebaseAdapter.prototype.handlePendingReceivedRevisions_ = function() {\n    var pending = this.pendingReceivedRevisions_;\n    var revisionId = revisionToId(this.revision_);\n    var triggerRetry = false;\n    while (pending[revisionId] != null) {\n      this.revision_++;\n\n      var revision = this.parseRevision_(pending[revisionId]);\n      if (!revision) {\n        // If a misbehaved client adds a bad operation, just ignore it.\n        utils.log('Invalid operation.', this.ref_.toString(), revisionId, pending[revisionId]);\n      } else {\n        this.document_ = this.document_.compose(revision.operation);\n        if (this.sent_ && revisionId === this.sent_.id) {\n          // We have an outstanding change at this revision id.\n          if (this.sent_.op.equals(revision.operation) && revision.author === this.userId_) {\n            // This is our change; it succeeded.\n            if (this.revision_ % CHECKPOINT_FREQUENCY === 0) {\n              this.saveCheckpoint_();\n            }\n            this.sent_ = null;\n            this.trigger('ack');\n          } else {\n            // our op failed.  Trigger a retry after we're done catching up on any incoming ops.\n            triggerRetry = true;\n            this.trigger('operation', revision.operation);\n          }\n        } else {\n          this.trigger('operation', revision.operation);\n        }\n      }\n      delete pending[revisionId];\n\n      revisionId = revisionToId(this.revision_);\n    }\n\n    if (triggerRetry) {\n      this.sent_ = null;\n      this.trigger('retry');\n    }\n  };\n\n  FirebaseAdapter.prototype.parseRevision_ = function(data) {\n    // We could do some of this validation via security rules.  But it's nice to be robust, just in case.\n    if (typeof data !== 'object') { return null; }\n    if (typeof data.a !== 'string' || typeof data.o !== 'object') { return null; }\n    var op = null;\n    try {\n      op = TextOperation.fromJSON(data.o);\n    }\n    catch (e) {\n      return null;\n    }\n\n    if (op.baseLength !== this.document_.targetLength) {\n      return null;\n    }\n    return { author: data.a, operation: op }\n  };\n\n  FirebaseAdapter.prototype.saveCheckpoint_ = function() {\n    this.ref_.child('checkpoint').set({\n      a: this.userId_,\n      o: this.document_.toJSON(),\n      id: revisionToId(this.revision_ - 1) // use the id for the revision we just wrote.\n    });\n\n  };\n\n  FirebaseAdapter.prototype.firebaseOn_ = function(ref, eventType, callback, context) {\n    this.firebaseCallbacks_.push({ref: ref, eventType: eventType, callback: callback, context: context });\n    ref.on(eventType, callback, context);\n    return callback;\n  };\n\n  FirebaseAdapter.prototype.firebaseOff_ = function(ref, eventType, callback, context) {\n    ref.off(eventType, callback, context);\n    for(var i = 0; i < this.firebaseCallbacks_.length; i++) {\n      var l = this.firebaseCallbacks_[i];\n      if (l.ref === ref && l.eventType === eventType && l.callback === callback && l.context === context) {\n        this.firebaseCallbacks_.splice(i, 1);\n        break;\n      }\n    }\n  };\n\n  FirebaseAdapter.prototype.removeFirebaseCallbacks_ = function() {\n    for(var i = 0; i < this.firebaseCallbacks_.length; i++) {\n      var l = this.firebaseCallbacks_[i];\n      l.ref.off(l.eventType, l.callback, l.context);\n    }\n    this.firebaseCallbacks_ = [];\n  };\n\n  // Throws an error if the first argument is falsy. Useful for debugging.\n  function assert (b, msg) {\n    if (!b) {\n      throw new Error(msg || \"assertion error\");\n    }\n  }\n\n  // Based off ideas from http://www.zanopha.com/docs/elen.pdf\n  var characters = '0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz';\n  function revisionToId(revision) {\n    if (revision === 0) {\n      return 'A0';\n    }\n\n    var str = '';\n    while (revision > 0) {\n      var digit = (revision % characters.length);\n      str = characters[digit] + str;\n      revision -= digit;\n      revision /= characters.length;\n    }\n\n    // Prefix with length (starting at 'A' for length 1) to ensure the id's sort lexicographically.\n    var prefix = characters[str.length + 9];\n    return prefix + str;\n  }\n\n  function revisionFromId(revisionId) {\n    assert (revisionId.length > 0 && revisionId[0] === characters[revisionId.length + 8]);\n    var revision = 0;\n    for(var i = 1; i < revisionId.length; i++) {\n      revision *= characters.length;\n      revision += characters.indexOf(revisionId[i]);\n    }\n    return revision;\n  }\n\n  return FirebaseAdapter;\n}());\n\nvar firepad = firepad || { };\n\nfirepad.RichTextToolbar = (function(global) {\n  var utils = firepad.utils;\n\n  function RichTextToolbar(imageInsertionUI) {\n    this.imageInsertionUI = imageInsertionUI;\n    this.element_ = this.makeElement_();\n  }\n\n  utils.makeEventEmitter(RichTextToolbar, ['bold', 'italic', 'underline', 'strike', 'font', 'font-size', 'color',\n    'left', 'center', 'right', 'unordered-list', 'ordered-list', 'todo-list', 'indent-increase', 'indent-decrease',\n                                           'undo', 'redo', 'insert-image']);\n\n  RichTextToolbar.prototype.element = function() { return this.element_; };\n\n  RichTextToolbar.prototype.makeButton_ = function(eventName, iconName) {\n    var self = this;\n    iconName = iconName || eventName;\n    var btn = utils.elt('a', [utils.elt('span', '', { 'class': 'firepad-tb-' + iconName } )], { 'class': 'firepad-btn' });\n    utils.on(btn, 'click', utils.stopEventAnd(function() { self.trigger(eventName); }));\n    return btn;\n  }\n\n  RichTextToolbar.prototype.makeElement_ = function() {\n    var self = this;\n\n    var font = this.makeFontDropdown_();\n    var fontSize = this.makeFontSizeDropdown_();\n    var color = this.makeColorDropdown_();\n\n    var toolbarOptions = [\n      utils.elt('div', [font], { 'class': 'firepad-btn-group'}),\n      utils.elt('div', [fontSize], { 'class': 'firepad-btn-group'}),\n      utils.elt('div', [color], { 'class': 'firepad-btn-group'}),\n      utils.elt('div', [self.makeButton_('bold'), self.makeButton_('italic'), self.makeButton_('underline'), self.makeButton_('strike', 'strikethrough')], { 'class': 'firepad-btn-group'}),\n      utils.elt('div', [self.makeButton_('unordered-list', 'list-2'), self.makeButton_('ordered-list', 'numbered-list'), self.makeButton_('todo-list', 'list')], { 'class': 'firepad-btn-group'}),\n      utils.elt('div', [self.makeButton_('indent-decrease'), self.makeButton_('indent-increase')], { 'class': 'firepad-btn-group'}),\n      utils.elt('div', [self.makeButton_('left', 'paragraph-left'), self.makeButton_('center', 'paragraph-center'), self.makeButton_('right', 'paragraph-right')], { 'class': 'firepad-btn-group'}),\n      utils.elt('div', [self.makeButton_('undo'), self.makeButton_('redo')], { 'class': 'firepad-btn-group'})\n    ];\n\n    if (self.imageInsertionUI) {\n      toolbarOptions.push(utils.elt('div', [self.makeButton_('insert-image')], { 'class': 'firepad-btn-group' }));\n    }\n\n    var toolbarWrapper = utils.elt('div', toolbarOptions, { 'class': 'firepad-toolbar-wrapper' });\n    var toolbar = utils.elt('div', null, { 'class': 'firepad-toolbar' });\n    toolbar.appendChild(toolbarWrapper)\n\n    return toolbar;\n  };\n\n  RichTextToolbar.prototype.makeFontDropdown_ = function() {\n    // NOTE: There must be matching .css styles in firepad.css.\n    var fonts = ['Arial', 'Comic Sans MS', 'Courier New', 'Impact', 'Times New Roman', 'Verdana'];\n\n    var items = [];\n    for(var i = 0; i < fonts.length; i++) {\n      var content = utils.elt('span', fonts[i]);\n      content.setAttribute('style', 'font-family:' + fonts[i]);\n      items.push({ content: content, value: fonts[i] });\n    }\n    return this.makeDropdown_('Font', 'font', items);\n  };\n\n  RichTextToolbar.prototype.makeFontSizeDropdown_ = function() {\n    // NOTE: There must be matching .css styles in firepad.css.\n    var sizes = [9, 10, 12, 14, 18, 24, 32, 42];\n\n    var items = [];\n    for(var i = 0; i < sizes.length; i++) {\n      var content = utils.elt('span', sizes[i].toString());\n      content.setAttribute('style', 'font-size:' + sizes[i] + 'px; line-height:' + (sizes[i]-6) + 'px;');\n      items.push({ content: content, value: sizes[i] });\n    }\n    return this.makeDropdown_('Size', 'font-size', items, 'px');\n  };\n\n  RichTextToolbar.prototype.makeColorDropdown_ = function() {\n    var colors = ['black', 'red', 'green', 'blue', 'yellow', 'cyan', 'magenta', 'grey'];\n\n    var items = [];\n    for(var i = 0; i < colors.length; i++) {\n      var content = utils.elt('div');\n      content.className = 'firepad-color-dropdown-item';\n      content.setAttribute('style', 'background-color:' + colors[i]);\n      items.push({ content: content, value: colors[i] });\n    }\n    return this.makeDropdown_('Color', 'color', items);\n  };\n\n  RichTextToolbar.prototype.makeDropdown_ = function(title, eventName, items, value_suffix) {\n    value_suffix = value_suffix || \"\";\n    var self = this;\n    var button = utils.elt('a', title + ' \\u25be', { 'class': 'firepad-btn firepad-dropdown' });\n    var list = utils.elt('ul', [ ], { 'class': 'firepad-dropdown-menu' });\n    button.appendChild(list);\n\n    var isShown = false;\n    function showDropdown() {\n      if (!isShown) {\n        list.style.display = 'block';\n        utils.on(document, 'click', hideDropdown, /*capture=*/true);\n        isShown = true;\n      }\n    }\n\n    var justDismissed = false;\n    function hideDropdown() {\n      if (isShown) {\n        list.style.display = '';\n        utils.off(document, 'click', hideDropdown, /*capture=*/true);\n        isShown = false;\n      }\n      // HACK so we can avoid re-showing the dropdown if you click on the dropdown header to dismiss it.\n      justDismissed = true;\n      setTimeout(function() { justDismissed = false; }, 0);\n    }\n\n    function addItem(content, value) {\n      if (typeof content !== 'object') {\n        content = document.createTextNode(String(content));\n      }\n      var element = utils.elt('a', [content]);\n\n      utils.on(element, 'click', utils.stopEventAnd(function() {\n        hideDropdown();\n        self.trigger(eventName, value + value_suffix);\n      }));\n\n      list.appendChild(element);\n    }\n\n    for(var i = 0; i < items.length; i++) {\n      var content = items[i].content, value = items[i].value;\n      addItem(content, value);\n    }\n\n    utils.on(button, 'click', utils.stopEventAnd(function() {\n      if (!justDismissed) {\n        showDropdown();\n      }\n    }));\n\n    return button;\n  };\n\n  return RichTextToolbar;\n})();\n\nvar firepad = firepad || { };\nfirepad.WrappedOperation = (function (global) {\n  'use strict';\n\n  // A WrappedOperation contains an operation and corresponing metadata.\n  function WrappedOperation (operation, meta) {\n    this.wrapped = operation;\n    this.meta    = meta;\n  }\n\n  WrappedOperation.prototype.apply = function () {\n    return this.wrapped.apply.apply(this.wrapped, arguments);\n  };\n\n  WrappedOperation.prototype.invert = function () {\n    var meta = this.meta;\n    return new WrappedOperation(\n      this.wrapped.invert.apply(this.wrapped, arguments),\n      meta && typeof meta === 'object' && typeof meta.invert === 'function' ?\n        meta.invert.apply(meta, arguments) : meta\n    );\n  };\n\n  // Copy all properties from source to target.\n  function copy (source, target) {\n    for (var key in source) {\n      if (source.hasOwnProperty(key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  function composeMeta (a, b) {\n    if (a && typeof a === 'object') {\n      if (typeof a.compose === 'function') { return a.compose(b); }\n      var meta = {};\n      copy(a, meta);\n      copy(b, meta);\n      return meta;\n    }\n    return b;\n  }\n\n  WrappedOperation.prototype.compose = function (other) {\n    return new WrappedOperation(\n      this.wrapped.compose(other.wrapped),\n      composeMeta(this.meta, other.meta)\n    );\n  };\n\n  function transformMeta (meta, operation) {\n    if (meta && typeof meta === 'object') {\n      if (typeof meta.transform === 'function') {\n        return meta.transform(operation);\n      }\n    }\n    return meta;\n  }\n\n  WrappedOperation.transform = function (a, b) {\n    var pair = a.wrapped.transform(b.wrapped);\n    return [\n      new WrappedOperation(pair[0], transformMeta(a.meta, b.wrapped)),\n      new WrappedOperation(pair[1], transformMeta(b.meta, a.wrapped))\n    ];\n  };\n\n  // convenience method to write transform(a, b) as a.transform(b)\n  WrappedOperation.prototype.transform = function(other) {\n    return WrappedOperation.transform(this, other);\n  };\n\n  return WrappedOperation;\n\n}());\n\nvar firepad = firepad || { };\n\nfirepad.UndoManager = (function () {\n  'use strict';\n\n  var NORMAL_STATE = 'normal';\n  var UNDOING_STATE = 'undoing';\n  var REDOING_STATE = 'redoing';\n\n  // Create a new UndoManager with an optional maximum history size.\n  function UndoManager (maxItems) {\n    this.maxItems  = maxItems || 50;\n    this.state = NORMAL_STATE;\n    this.dontCompose = false;\n    this.undoStack = [];\n    this.redoStack = [];\n  }\n\n  // Add an operation to the undo or redo stack, depending on the current state\n  // of the UndoManager. The operation added must be the inverse of the last\n  // edit. When `compose` is true, compose the operation with the last operation\n  // unless the last operation was alread pushed on the redo stack or was hidden\n  // by a newer operation on the undo stack.\n  UndoManager.prototype.add = function (operation, compose) {\n    if (this.state === UNDOING_STATE) {\n      this.redoStack.push(operation);\n      this.dontCompose = true;\n    } else if (this.state === REDOING_STATE) {\n      this.undoStack.push(operation);\n      this.dontCompose = true;\n    } else {\n      var undoStack = this.undoStack;\n      if (!this.dontCompose && compose && undoStack.length > 0) {\n        undoStack.push(operation.compose(undoStack.pop()));\n      } else {\n        undoStack.push(operation);\n        if (undoStack.length > this.maxItems) { undoStack.shift(); }\n      }\n      this.dontCompose = false;\n      this.redoStack = [];\n    }\n  };\n\n  function transformStack (stack, operation) {\n    var newStack = [];\n    var Operation = operation.constructor;\n    for (var i = stack.length - 1; i >= 0; i--) {\n      var pair = Operation.transform(stack[i], operation);\n      if (typeof pair[0].isNoop !== 'function' || !pair[0].isNoop()) {\n        newStack.push(pair[0]);\n      }\n      operation = pair[1];\n    }\n    return newStack.reverse();\n  }\n\n  // Transform the undo and redo stacks against a operation by another client.\n  UndoManager.prototype.transform = function (operation) {\n    this.undoStack = transformStack(this.undoStack, operation);\n    this.redoStack = transformStack(this.redoStack, operation);\n  };\n\n  // Perform an undo by calling a function with the latest operation on the undo\n  // stack. The function is expected to call the `add` method with the inverse\n  // of the operation, which pushes the inverse on the redo stack.\n  UndoManager.prototype.performUndo = function (fn) {\n    this.state = UNDOING_STATE;\n    if (this.undoStack.length === 0) { throw new Error(\"undo not possible\"); }\n    fn(this.undoStack.pop());\n    this.state = NORMAL_STATE;\n  };\n\n  // The inverse of `performUndo`.\n  UndoManager.prototype.performRedo = function (fn) {\n    this.state = REDOING_STATE;\n    if (this.redoStack.length === 0) { throw new Error(\"redo not possible\"); }\n    fn(this.redoStack.pop());\n    this.state = NORMAL_STATE;\n  };\n\n  // Is the undo stack not empty?\n  UndoManager.prototype.canUndo = function () {\n    return this.undoStack.length !== 0;\n  };\n\n  // Is the redo stack not empty?\n  UndoManager.prototype.canRedo = function () {\n    return this.redoStack.length !== 0;\n  };\n\n  // Whether the UndoManager is currently performing an undo.\n  UndoManager.prototype.isUndoing = function () {\n    return this.state === UNDOING_STATE;\n  };\n\n  // Whether the UndoManager is currently performing a redo.\n  UndoManager.prototype.isRedoing = function () {\n    return this.state === REDOING_STATE;\n  };\n\n  return UndoManager;\n\n}());\n\nvar firepad = firepad || { };\nfirepad.Client = (function () {\n  'use strict';\n\n  // Client constructor\n  function Client () {\n    this.state = synchronized_; // start state\n  }\n\n  Client.prototype.setState = function (state) {\n    this.state = state;\n  };\n\n  // Call this method when the user changes the document.\n  Client.prototype.applyClient = function (operation) {\n    this.setState(this.state.applyClient(this, operation));\n  };\n\n  // Call this method with a new operation from the server\n  Client.prototype.applyServer = function (operation) {\n    this.setState(this.state.applyServer(this, operation));\n  };\n\n  Client.prototype.serverAck = function () {\n    this.setState(this.state.serverAck(this));\n  };\n\n  Client.prototype.serverRetry = function() {\n    this.setState(this.state.serverRetry(this));\n  };\n\n  // Override this method.\n  Client.prototype.sendOperation = function (operation) {\n    throw new Error(\"sendOperation must be defined in child class\");\n  };\n\n  // Override this method.\n  Client.prototype.applyOperation = function (operation) {\n    throw new Error(\"applyOperation must be defined in child class\");\n  };\n\n\n  // In the 'Synchronized' state, there is no pending operation that the client\n  // has sent to the server.\n  function Synchronized () {}\n  Client.Synchronized = Synchronized;\n\n  Synchronized.prototype.applyClient = function (client, operation) {\n    // When the user makes an edit, send the operation to the server and\n    // switch to the 'AwaitingConfirm' state\n    client.sendOperation(operation);\n    return new AwaitingConfirm(operation);\n  };\n\n  Synchronized.prototype.applyServer = function (client, operation) {\n    // When we receive a new operation from the server, the operation can be\n    // simply applied to the current document\n    client.applyOperation(operation);\n    return this;\n  };\n\n  Synchronized.prototype.serverAck = function (client) {\n    throw new Error(\"There is no pending operation.\");\n  };\n\n  Synchronized.prototype.serverRetry = function(client) {\n    throw new Error(\"There is no pending operation.\");\n  };\n\n  // Singleton\n  var synchronized_ = new Synchronized();\n\n\n  // In the 'AwaitingConfirm' state, there's one operation the client has sent\n  // to the server and is still waiting for an acknowledgement.\n  function AwaitingConfirm (outstanding) {\n    // Save the pending operation\n    this.outstanding = outstanding;\n  }\n  Client.AwaitingConfirm = AwaitingConfirm;\n\n  AwaitingConfirm.prototype.applyClient = function (client, operation) {\n    // When the user makes an edit, don't send the operation immediately,\n    // instead switch to 'AwaitingWithBuffer' state\n    return new AwaitingWithBuffer(this.outstanding, operation);\n  };\n\n  AwaitingConfirm.prototype.applyServer = function (client, operation) {\n    // This is another client's operation. Visualization:\n    //\n    //                   /\\\n    // this.outstanding /  \\ operation\n    //                 /    \\\n    //                 \\    /\n    //  pair[1]         \\  / pair[0] (new outstanding)\n    //  (can be applied  \\/\n    //  to the client's\n    //  current document)\n    var pair = this.outstanding.transform(operation);\n    client.applyOperation(pair[1]);\n    return new AwaitingConfirm(pair[0]);\n  };\n\n  AwaitingConfirm.prototype.serverAck = function (client) {\n    // The client's operation has been acknowledged\n    // => switch to synchronized state\n    return synchronized_;\n  };\n\n  AwaitingConfirm.prototype.serverRetry = function (client) {\n    client.sendOperation(this.outstanding);\n    return this;\n  };\n\n  // In the 'AwaitingWithBuffer' state, the client is waiting for an operation\n  // to be acknowledged by the server while buffering the edits the user makes\n  function AwaitingWithBuffer (outstanding, buffer) {\n    // Save the pending operation and the user's edits since then\n    this.outstanding = outstanding;\n    this.buffer = buffer;\n  }\n  Client.AwaitingWithBuffer = AwaitingWithBuffer;\n\n  AwaitingWithBuffer.prototype.applyClient = function (client, operation) {\n    // Compose the user's changes onto the buffer\n    var newBuffer = this.buffer.compose(operation);\n    return new AwaitingWithBuffer(this.outstanding, newBuffer);\n  };\n\n  AwaitingWithBuffer.prototype.applyServer = function (client, operation) {\n    // Operation comes from another client\n    //\n    //                       /\\\n    //     this.outstanding /  \\ operation\n    //                     /    \\\n    //                    /\\    /\n    //       this.buffer /  \\* / pair1[0] (new outstanding)\n    //                  /    \\/\n    //                  \\    /\n    //          pair2[1] \\  / pair2[0] (new buffer)\n    // the transformed    \\/\n    // operation -- can\n    // be applied to the\n    // client's current\n    // document\n    //\n    // * pair1[1]\n    var pair1 = this.outstanding.transform(operation);\n    var pair2 = this.buffer.transform(pair1[1]);\n    client.applyOperation(pair2[1]);\n    return new AwaitingWithBuffer(pair1[0], pair2[0]);\n  };\n\n  AwaitingWithBuffer.prototype.serverRetry = function (client) {\n    // Merge with our buffer and resend.\n    var outstanding = this.outstanding.compose(this.buffer);\n    client.sendOperation(outstanding);\n    return new AwaitingConfirm(outstanding);\n  };\n\n  AwaitingWithBuffer.prototype.serverAck = function (client) {\n    // The pending operation has been acknowledged\n    // => send buffer\n    client.sendOperation(this.buffer);\n    return new AwaitingConfirm(this.buffer);\n  };\n\n  return Client;\n\n}());\n\nvar firepad = firepad || { };\n\nfirepad.EditorClient = (function () {\n  'use strict';\n\n  var Client = firepad.Client;\n  var Cursor = firepad.Cursor;\n  var UndoManager = firepad.UndoManager;\n  var WrappedOperation = firepad.WrappedOperation;\n\n  function SelfMeta (cursorBefore, cursorAfter) {\n    this.cursorBefore = cursorBefore;\n    this.cursorAfter  = cursorAfter;\n  }\n\n  SelfMeta.prototype.invert = function () {\n    return new SelfMeta(this.cursorAfter, this.cursorBefore);\n  };\n\n  SelfMeta.prototype.compose = function (other) {\n    return new SelfMeta(this.cursorBefore, other.cursorAfter);\n  };\n\n  SelfMeta.prototype.transform = function (operation) {\n    return new SelfMeta(\n      this.cursorBefore ? this.cursorBefore.transform(operation) : null,\n      this.cursorAfter ? this.cursorAfter.transform(operation) : null\n    );\n  };\n\n  function OtherClient (id, editorAdapter) {\n    this.id = id;\n    this.editorAdapter = editorAdapter;\n  }\n\n  OtherClient.prototype.setColor = function (color) {\n    this.color = color;\n  };\n\n  OtherClient.prototype.updateCursor = function (cursor) {\n    this.removeCursor();\n    this.cursor = cursor;\n    this.mark = this.editorAdapter.setOtherCursor(\n      cursor,\n      this.color,\n      this.id\n    );\n  };\n\n  OtherClient.prototype.removeCursor = function () {\n    if (this.mark) { this.mark.clear(); }\n  };\n\n  function EditorClient (serverAdapter, editorAdapter) {\n    Client.call(this);\n    this.serverAdapter = serverAdapter;\n    this.editorAdapter = editorAdapter;\n    this.undoManager = new UndoManager();\n\n    this.clients = { };\n\n    var self = this;\n\n    this.editorAdapter.registerCallbacks({\n      change: function (operation, inverse) { self.onChange(operation, inverse); },\n      cursorActivity: function () { self.onCursorActivity(); },\n      blur: function () { self.onBlur(); },\n      focus: function () { self.onFocus(); }\n    });\n    this.editorAdapter.registerUndo(function () { self.undo(); });\n    this.editorAdapter.registerRedo(function () { self.redo(); });\n\n    this.serverAdapter.registerCallbacks({\n      ack: function () {\n        self.serverAck();\n        if (self.focused && self.state instanceof Client.Synchronized) {\n          self.updateCursor();\n          self.sendCursor(self.cursor);\n        }\n        self.emitStatus();\n      },\n      retry: function() { self.serverRetry(); },\n      operation: function (operation) {\n        self.applyServer(operation);\n      },\n      cursor: function (clientId, cursor, color) {\n        if (self.serverAdapter.userId_ === clientId ||\n            !(self.state instanceof Client.Synchronized)) {\n          return;\n        }\n        var client = self.getClientObject(clientId);\n        if (cursor) {\n          if (color) client.setColor(color);\n          client.updateCursor(Cursor.fromJSON(cursor));\n        } else {\n          client.removeCursor();\n        }\n      }\n    });\n  }\n\n  inherit(EditorClient, Client);\n\n  EditorClient.prototype.getClientObject = function (clientId) {\n    var client = this.clients[clientId];\n    if (client) { return client; }\n    return this.clients[clientId] = new OtherClient(\n      clientId,\n      this.editorAdapter\n    );\n  };\n\n  EditorClient.prototype.applyUnredo = function (operation) {\n    this.undoManager.add(this.editorAdapter.invertOperation(operation));\n    this.editorAdapter.applyOperation(operation.wrapped);\n    this.cursor = operation.meta.cursorAfter;\n    if (this.cursor)\n      this.editorAdapter.setCursor(this.cursor);\n    this.applyClient(operation.wrapped);\n  };\n\n  EditorClient.prototype.undo = function () {\n    var self = this;\n    if (!this.undoManager.canUndo()) { return; }\n    this.undoManager.performUndo(function (o) { self.applyUnredo(o); });\n  };\n\n  EditorClient.prototype.redo = function () {\n    var self = this;\n    if (!this.undoManager.canRedo()) { return; }\n    this.undoManager.performRedo(function (o) { self.applyUnredo(o); });\n  };\n\n  EditorClient.prototype.onChange = function (textOperation, inverse) {\n    var cursorBefore = this.cursor;\n    this.updateCursor();\n\n    var compose = this.undoManager.undoStack.length > 0 &&\n      inverse.shouldBeComposedWithInverted(last(this.undoManager.undoStack).wrapped);\n    var inverseMeta = new SelfMeta(this.cursor, cursorBefore);\n    this.undoManager.add(new WrappedOperation(inverse, inverseMeta), compose);\n    this.applyClient(textOperation);\n  };\n\n  EditorClient.prototype.updateCursor = function () {\n    this.cursor = this.editorAdapter.getCursor();\n  };\n\n  EditorClient.prototype.onCursorActivity = function () {\n    var oldCursor = this.cursor;\n    this.updateCursor();\n    if (!this.focused || oldCursor && this.cursor.equals(oldCursor)) { return; }\n    this.sendCursor(this.cursor);\n  };\n\n  EditorClient.prototype.onBlur = function () {\n    this.cursor = null;\n    this.sendCursor(null);\n    this.focused = false;\n  };\n\n  EditorClient.prototype.onFocus = function () {\n    this.focused = true;\n    this.onCursorActivity();\n  };\n\n  EditorClient.prototype.sendCursor = function (cursor) {\n    if (this.state instanceof Client.AwaitingWithBuffer) { return; }\n    this.serverAdapter.sendCursor(cursor);\n  };\n\n  EditorClient.prototype.sendOperation = function (operation) {\n    this.serverAdapter.sendOperation(operation);\n    this.emitStatus();\n  };\n\n  EditorClient.prototype.applyOperation = function (operation) {\n    this.editorAdapter.applyOperation(operation);\n    this.updateCursor();\n    this.undoManager.transform(new WrappedOperation(operation, null));\n  };\n\n  EditorClient.prototype.emitStatus = function() {\n    var self = this;\n    setTimeout(function() {\n      self.trigger('synced', self.state instanceof Client.Synchronized);\n    }, 0);\n  };\n\n  // Set Const.prototype.__proto__ to Super.prototype\n  function inherit (Const, Super) {\n    function F () {}\n    F.prototype = Super.prototype;\n    Const.prototype = new F();\n    Const.prototype.constructor = Const;\n  }\n\n  function last (arr) { return arr[arr.length - 1]; }\n\n  return EditorClient;\n}());\n\nfirepad.utils.makeEventEmitter(firepad.EditorClient, ['synced']);\n\n\"use strict\";\n\nfunction _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread(); }\n\nfunction _nonIterableSpread() { throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(n); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _iterableToArray(iter) { if (typeof Symbol !== \"undefined\" && Symbol.iterator in Object(iter)) return Array.from(iter); }\n\nfunction _arrayWithoutHoles(arr) { if (Array.isArray(arr)) return _arrayLikeToArray(arr); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nvar firepad;\n\nif (typeof firepad === \"undefined\" || firepad === null) {\n  firepad = {};\n}\n\nfirepad.ACEAdapter = function () {\n  var ACEAdapter = /*#__PURE__*/function () {\n    function ACEAdapter(aceInstance) {\n      _classCallCheck(this, ACEAdapter);\n\n      var ref;\n      this.onChange = this.onChange.bind(this);\n      this.onBlur = this.onBlur.bind(this);\n      this.onFocus = this.onFocus.bind(this);\n      this.onCursorActivity = this.onCursorActivity.bind(this);\n      this.ace = aceInstance;\n      this.aceSession = this.ace.getSession();\n      this.aceDoc = this.aceSession.getDocument();\n      this.aceDoc.setNewLineMode('unix');\n      this.grabDocumentState();\n      this.ace.on('change', this.onChange);\n      this.ace.on('blur', this.onBlur);\n      this.ace.on('focus', this.onFocus);\n      this.aceSession.selection.on('changeCursor', this.onCursorActivity);\n\n      if (this.aceRange == null) {\n        this.aceRange = ((ref = ace.require) != null ? ref : require)(\"ace/range\").Range;\n      }\n    }\n\n    _createClass(ACEAdapter, [{\n      key: \"grabDocumentState\",\n      value: function grabDocumentState() {\n        this.lastDocLines = this.aceDoc.getAllLines();\n        return this.lastCursorRange = this.aceSession.selection.getRange();\n      } // Removes all event listeners from the ACE editor instance\n\n    }, {\n      key: \"detach\",\n      value: function detach() {\n        this.ace.removeListener('change', this.onChange);\n        this.ace.removeListener('blur', this.onBlur);\n        this.ace.removeListener('focus', this.onFocus);\n        return this.aceSession.selection.removeListener('changeCursor', this.onCursorActivity);\n      }\n    }, {\n      key: \"onChange\",\n      value: function onChange(change) {\n        var pair;\n\n        if (!this.ignoreChanges) {\n          pair = this.operationFromACEChange(change);\n          this.trigger.apply(this, ['change'].concat(_toConsumableArray(pair)));\n          return this.grabDocumentState();\n        }\n      }\n    }, {\n      key: \"onBlur\",\n      value: function onBlur() {\n        if (this.ace.selection.isEmpty()) {\n          return this.trigger('blur');\n        }\n      }\n    }, {\n      key: \"onFocus\",\n      value: function onFocus() {\n        return this.trigger('focus');\n      }\n    }, {\n      key: \"onCursorActivity\",\n      value: function onCursorActivity() {\n        var _this = this;\n\n        return setTimeout(function () {\n          return _this.trigger('cursorActivity');\n        }, 0);\n      } // Converts an ACE change object into a TextOperation and its inverse\n      // and returns them as a two-element array.\n\n    }, {\n      key: \"operationFromACEChange\",\n      value: function operationFromACEChange(change) {\n        var action, delete_op, delta, insert_op, ref, restLength, start, text;\n\n        if (change.data) {\n          // Ace < 1.2.0\n          delta = change.data;\n\n          if ((ref = delta.action) === 'insertLines' || ref === 'removeLines') {\n            text = delta.lines.join('\\n') + '\\n';\n            action = delta.action.replace('Lines', '');\n          } else {\n            text = delta.text.replace(this.aceDoc.getNewLineCharacter(), '\\n');\n            action = delta.action.replace('Text', '');\n          }\n\n          start = this.indexFromPos(delta.range.start);\n        } else {\n          // Ace 1.2.0+\n          text = change.lines.join('\\n');\n          start = this.indexFromPos(change.start);\n        }\n\n        restLength = this.lastDocLines.join('\\n').length - start;\n\n        if (change.action === 'remove') {\n          restLength -= text.length;\n        }\n\n        insert_op = new firepad.TextOperation().retain(start).insert(text).retain(restLength);\n        delete_op = new firepad.TextOperation().retain(start)[\"delete\"](text).retain(restLength);\n\n        if (change.action === 'remove') {\n          return [delete_op, insert_op];\n        } else {\n          return [insert_op, delete_op];\n        }\n      } // Apply an operation to an ACE instance.\n\n    }, {\n      key: \"applyOperationToACE\",\n      value: function applyOperationToACE(operation) {\n        var from, index, j, len, op, range, ref, to;\n        index = 0;\n        ref = operation.ops;\n\n        for (j = 0, len = ref.length; j < len; j++) {\n          op = ref[j];\n\n          if (op.isRetain()) {\n            index += op.chars;\n          } else if (op.isInsert()) {\n            this.aceDoc.insert(this.posFromIndex(index), op.text);\n            index += op.text.length;\n          } else if (op.isDelete()) {\n            from = this.posFromIndex(index);\n            to = this.posFromIndex(index + op.chars);\n            range = this.aceRange.fromPoints(from, to);\n            this.aceDoc.remove(range);\n          }\n        }\n\n        return this.grabDocumentState();\n      }\n    }, {\n      key: \"posFromIndex\",\n      value: function posFromIndex(index) {\n        var j, len, line, ref, row;\n        ref = this.aceDoc.$lines;\n\n        for (row = j = 0, len = ref.length; j < len; row = ++j) {\n          line = ref[row];\n\n          if (index <= line.length) {\n            break;\n          }\n\n          index -= line.length + 1;\n        }\n\n        return {\n          row: row,\n          column: index\n        };\n      }\n    }, {\n      key: \"indexFromPos\",\n      value: function indexFromPos(pos, lines) {\n        var i, index, j, ref;\n\n        if (lines == null) {\n          lines = this.lastDocLines;\n        }\n\n        index = 0;\n\n        for (i = j = 0, ref = pos.row; 0 <= ref ? j < ref : j > ref; i = 0 <= ref ? ++j : --j) {\n          index += this.lastDocLines[i].length + 1;\n        }\n\n        return index += pos.column;\n      }\n    }, {\n      key: \"getValue\",\n      value: function getValue() {\n        return this.aceDoc.getValue();\n      }\n    }, {\n      key: \"getCursor\",\n      value: function getCursor() {\n        var e, e2, end, start;\n\n        try {\n          start = this.indexFromPos(this.aceSession.selection.getRange().start, this.aceDoc.$lines);\n          end = this.indexFromPos(this.aceSession.selection.getRange().end, this.aceDoc.$lines);\n        } catch (error) {\n          e = error;\n\n          try {\n            // If the new range doesn't work (sometimes with setValue), we'll use the old range\n            start = this.indexFromPos(this.lastCursorRange.start);\n            end = this.indexFromPos(this.lastCursorRange.end);\n          } catch (error) {\n            e2 = error;\n            console.log(\"Couldn't figure out the cursor range:\", e2, \"-- setting it to 0:0.\");\n            start = 0;\n            end = 0;\n          }\n        }\n\n        if (start > end) {\n          var _ref = [end, start];\n          start = _ref[0];\n          end = _ref[1];\n        }\n\n        return new firepad.Cursor(start, end);\n      }\n    }, {\n      key: \"setCursor\",\n      value: function setCursor(cursor) {\n        var end, start;\n        start = this.posFromIndex(cursor.position);\n        end = this.posFromIndex(cursor.selectionEnd);\n\n        if (cursor.position > cursor.selectionEnd) {\n          var _ref2 = [end, start];\n          start = _ref2[0];\n          end = _ref2[1];\n        }\n\n        return this.aceSession.selection.setSelectionRange(new this.aceRange(start.row, start.column, end.row, end.column));\n      }\n    }, {\n      key: \"setOtherCursor\",\n      value: function setOtherCursor(cursor, color, clientId) {\n        var _this2 = this;\n\n        var clazz, css, cursorRange, end, justCursor, self, start;\n\n        if (this.otherCursors == null) {\n          this.otherCursors = {};\n        }\n\n        cursorRange = this.otherCursors[clientId];\n\n        if (cursorRange) {\n          cursorRange.start.detach();\n          cursorRange.end.detach();\n          this.aceSession.removeMarker(cursorRange.id);\n        }\n\n        start = this.posFromIndex(cursor.position);\n        end = this.posFromIndex(cursor.selectionEnd);\n\n        if (cursor.selectionEnd < cursor.position) {\n          var _ref3 = [end, start];\n          start = _ref3[0];\n          end = _ref3[1];\n        }\n\n        clazz = \"other-client-selection-\".concat(color.replace('#', ''));\n        justCursor = cursor.position === cursor.selectionEnd;\n\n        if (justCursor) {\n          clazz = clazz.replace('selection', 'cursor');\n        }\n\n        css = \".\".concat(clazz, \" {\\n  position: absolute;\\n  background-color: \").concat(justCursor ? 'transparent' : color, \";\\n  border-left: 2px solid \").concat(color, \";\\n}\");\n        this.addStyleRule(css);\n        this.otherCursors[clientId] = cursorRange = new this.aceRange(start.row, start.column, end.row, end.column); // Hack this specific range to, when clipped, return an empty range that\n        // pretends to not be empty. This lets us draw markers at the ends of lines.\n        // This might be brittle in the future.\n\n        self = this;\n\n        cursorRange.clipRows = function () {\n          var range;\n          range = self.aceRange.prototype.clipRows.apply(this, arguments);\n\n          range.isEmpty = function () {\n            return false;\n          };\n\n          return range;\n        };\n\n        cursorRange.start = this.aceDoc.createAnchor(cursorRange.start);\n        cursorRange.end = this.aceDoc.createAnchor(cursorRange.end);\n        cursorRange.id = this.aceSession.addMarker(cursorRange, clazz, \"text\");\n        return {\n          // Return something with a clear method to mimic expected API from CodeMirror\n          clear: function clear() {\n            cursorRange.start.detach();\n            cursorRange.end.detach();\n            return _this2.aceSession.removeMarker(cursorRange.id);\n          }\n        };\n      }\n    }, {\n      key: \"addStyleRule\",\n      value: function addStyleRule(css) {\n        var styleElement;\n\n        if (typeof document === \"undefined\" || document === null) {\n          return;\n        }\n\n        if (!this.addedStyleRules) {\n          this.addedStyleRules = {};\n          styleElement = document.createElement('style');\n          document.documentElement.getElementsByTagName('head')[0].appendChild(styleElement);\n          this.addedStyleSheet = styleElement.sheet;\n        }\n\n        if (this.addedStyleRules[css]) {\n          return;\n        }\n\n        this.addedStyleRules[css] = true;\n        return this.addedStyleSheet.insertRule(css, 0);\n      }\n    }, {\n      key: \"registerCallbacks\",\n      value: function registerCallbacks(callbacks) {\n        this.callbacks = callbacks;\n      }\n    }, {\n      key: \"trigger\",\n      value: function trigger(event) {\n        var ref, ref1;\n\n        for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n          args[_key - 1] = arguments[_key];\n        }\n\n        return (ref = this.callbacks) != null ? (ref1 = ref[event]) != null ? ref1.apply(this, args) : void 0 : void 0;\n      }\n    }, {\n      key: \"applyOperation\",\n      value: function applyOperation(operation) {\n        if (!operation.isNoop()) {\n          this.ignoreChanges = true;\n        }\n\n        this.applyOperationToACE(operation);\n        return this.ignoreChanges = false;\n      }\n    }, {\n      key: \"registerUndo\",\n      value: function registerUndo(undoFn) {\n        return this.ace.undo = undoFn;\n      }\n    }, {\n      key: \"registerRedo\",\n      value: function registerRedo(redoFn) {\n        return this.ace.redo = redoFn;\n      }\n    }, {\n      key: \"invertOperation\",\n      value: function invertOperation(operation) {\n        // TODO: Optimize to avoid copying entire text?\n        return operation.invert(this.getValue());\n      }\n    }]);\n\n    return ACEAdapter;\n  }();\n\n  ;\n  ACEAdapter.prototype.ignoreChanges = false;\n  return ACEAdapter;\n}.call(void 0);\n'use strict';\n\n/**\n * @function getCSS - For Internal Usage Only\n * @param {String} clazz - CSS Class Name\n * @param {String} bgColor - Background Color\n * @param {String} color - Font Color\n * @returns CSS Style Rules according to Parameters\n */\nvar getCSS = function getCSS(clazz, bgColor, color) {\n  return \".\" + clazz + \" {\\n  position: relative;\\n\" +\n    \"background-color: \" + bgColor + \";\\n\" +\n    \"border-left: 2px solid \" + color + \";\\n}\";\n};\n\n/**\n * @function addStyleRule - For Internal Usage Only\n * @desc Creates style element in document head and pushed all the style rules\n * @param {String} clazz - CSS Class Name\n * @param {String} css - CSS Style Rules\n */\nvar addStyleRule = function addStyleRule(clazz, css) {\n  /** House Keeping */\n  if (typeof document === 'undefined' || document === null) {\n    return false;\n  }\n\n  /** Add style rules only once */\n  if (this.addedStyleRules.indexOf(clazz) === -1) {\n    var styleElement = document.createElement('style');\n    var styleSheet = document.createTextNode(css);\n    styleElement.appendChild(styleSheet);\n    document.head.appendChild(styleElement);\n    this.addedStyleRules.push(clazz);\n  }\n};\n\n/**\n * Monaco Adapter\n * Create Pipe between Firebase and Monaco Text Editor\n */\nvar MonacoAdapter = function () {\n  /**\n   * @constructor MonacoEditor\n   * @param {MonacoEditor} monacoInstance - Editor Instance\n   * @prop {MonacoEditor} monaco - Monaco Instance passed as Parameter\n   * @prop {MonacoITextModel} monacoModel - Data Model of the Monaco Instance\n   * @prop {string[]} lastDocLines - Text for all Lines in the Editor\n   * @prop {MonacoSelection} lastCursorRange - Primary Selection of the Editor\n   * @prop {function} onChange - Change Event Handler bound Local Object\n   * @prop {function} onBlur - Blur Event Handler bound Local Object\n   * @prop {function} onFocus - Focus Event Handler bound Local Object\n   * @prop {function} onCursorActivity - Cursor Activity Handler bound Local Object\n   * @prop {Boolean} ignoreChanges - Should Avoid OnChange Event Handling\n   * @prop {MonacoIDisposable} changeHandler - Event Handler for Model Content Change\n   * @prop {MonacoIDisposable} didBlurHandler - Event Handler for Focus Lost on Editor Text/Widget\n   * @prop {MonacoIDisposable} didFocusHandler - Event Handler for Focus Gain on Editor Text/Widget\n   * @prop {MonacoIDisposable} didChangeCursorPositionHandler - Event Handler for Cursor Position Change\n   */\n  function MonacoAdapter(monacoInstance) {\n    /** House Keeping */\n\n    // Make sure this looks like a valid monaco instance.\n    if (!monacoInstance || typeof monacoInstance.getModel !== 'function') {\n      throw new Error('MonacoAdapter: Incorrect Parameter Recieved in constructor, '\n        + 'expected valid Monaco Instance');\n    }\n\n    /** Monaco Member Variables */\n    this.monaco = monacoInstance;\n    this.monacoModel = this.monaco.getModel();\n    this.lastDocLines = this.monacoModel.getLinesContent();\n    this.lastCursorRange = this.monaco.getSelection();\n\n    /** Monaco Editor Configurations */\n    this.callbacks = {};\n    this.otherCursors = [];\n    this.addedStyleRules = [];\n    this.ignoreChanges = false;\n\n    /** Adapter Callback Functions */\n    this.onChange = this.onChange.bind(this);\n    this.onBlur = this.onBlur.bind(this);\n    this.onFocus = this.onFocus.bind(this);\n    this.onCursorActivity = this.onCursorActivity.bind(this);\n\n    /** Editor Callback Handler */\n    this.changeHandler = this.monaco.onDidChangeModelContent(this.onChange);\n    this.didBlurHandler = this.monaco.onDidBlurEditorWidget(this.onBlur);\n    this.didFocusHandler = this.monaco.onDidFocusEditorWidget(this.onFocus);\n    this.didChangeCursorPositionHandler = this.monaco.onDidChangeCursorPosition(this.onCursorActivity);\n  }\n\n  /**\n   * @method detach - Clears an Instance of Editor Adapter\n   */\n  MonacoAdapter.prototype.detach = function detach() {\n    this.changeHandler.dispose();\n    this.didBlurHandler.dispose();\n    this.didFocusHandler.dispose();\n    this.didChangeCursorPositionHandler.dispose();\n  };\n\n  /**\n   * @method getCursor - Get current cursor position\n   * @returns Firepad Cursor object\n   */\n  MonacoAdapter.prototype.getCursor = function getCursor() {\n    var selection = this.monaco.getSelection();\n\n    /** Fallback to last cursor change */\n    if (typeof selection === 'undefined' || selection === null) {\n      selection = this.lastCursorRange;\n    }\n\n    /** Obtain selection indexes */\n    var startPos = selection.getStartPosition();\n    var endPos = selection.getEndPosition();\n    var start = this.monacoModel.getOffsetAt(startPos);\n    var end = this.monacoModel.getOffsetAt(endPos);\n\n    /** If Selection is Inversed */\n    if (start > end) {\n      var _ref = [end, start];\n      start = _ref[0];\n      end = _ref[1];\n    }\n\n    /** Return cursor position */\n    return new firepad.Cursor(start, end);\n  };\n\n  /**\n   * @method setCursor - Set Selection on Monaco Editor Instance\n   * @param {Object} cursor - Cursor Position (start and end)\n   * @param {Number} cursor.position - Starting Position of the Cursor\n   * @param {Number} cursor.selectionEnd - Ending Position of the Cursor\n   */\n  MonacoAdapter.prototype.setCursor = function setCursor(cursor) {\n    var position = cursor.position;\n    var selectionEnd = cursor.selectionEnd;\n    var start = this.monacoModel.getPositionAt(position);\n    var end = this.monacoModel.getPositionAt(selectionEnd);\n\n    /** If selection is inversed */\n    if (position > selectionEnd) {\n      var _ref = [end, start];\n      start = _ref[0];\n      end = _ref[1];\n    }\n\n    /** Create Selection in the Editor */\n    this.monaco.setSelection(\n      new monaco.Range(\n        start.lineNumber, start.column,\n        end.lineNumber, end.column\n      )\n    );\n  };\n\n  /**\n   * @method setOtherCursor - Set Remote Selection on Monaco Editor\n   * @param {Number} cursor.position - Starting Position of the Selection\n   * @param {Number} cursor.selectionEnd - Ending Position of the Selection\n   * @param {String} color - Hex Color codes for Styling\n   * @param {any} clientID - ID number of the Remote Client\n   */\n  MonacoAdapter.prototype.setOtherCursor = function setOtherCursor(cursor, color, clientID) {\n    /** House Keeping */\n    if (typeof cursor !== 'object' || typeof cursor.position !== 'number'\n      || typeof cursor.selectionEnd !== 'number') {\n\n      return false;\n    }\n\n    if (typeof color !== 'string' || !color.match(/^#[a-fA-F0-9]{3,6}$/)) {\n      return false;\n    }\n\n    /** Extract Positions */\n    var position = cursor.position;\n    var selectionEnd = cursor.selectionEnd;\n\n    if (position < 0 || selectionEnd < 0) {\n      return false;\n    }\n\n    /** Fetch Client Cursor Information */\n    var otherCursor = this.otherCursors.find(function (cursor) {\n      return cursor.clientID === clientID;\n    });\n\n    /** Initialize empty array, if client does not exist */\n    if (!otherCursor) {\n      otherCursor = {\n        clientID: clientID,\n        decoration: []\n      };\n      this.otherCursors.push(otherCursor);\n    }\n\n    /** Remove Earlier Decorations, if any, or initialize empty decor */\n    otherCursor.decoration = this.monaco.deltaDecorations(otherCursor.decoration, []);\n    var clazz = \"other-client-selection-\" + color.replace('#', '');\n    var css, ret;\n\n    if (position === selectionEnd) {\n      /** Show only cursor */\n      clazz = clazz.replace('selection', 'cursor');\n\n      /** Generate Style rules and add them to document */\n      css = getCSS(clazz, 'transparent', color);\n      ret = addStyleRule.call(this, clazz, css);\n    } else {\n      /** Generate Style rules and add them to document */\n      css = getCSS(clazz, color, color);\n      ret = addStyleRule.call(this, clazz, css);\n    }\n\n    /** Return if failed to add css */\n    if (ret == false) {\n      console.log(\"Monaco Adapter: Failed to add some css style.\\n\"\n      + \"Please make sure you're running on supported environment.\");\n    }\n\n    /** Get co-ordinate position in Editor */\n    var start = this.monacoModel.getPositionAt(position);\n    var end = this.monacoModel.getPositionAt(selectionEnd);\n\n    /** Selection is inversed */\n    if (position > selectionEnd) {\n      var _ref = [end, start];\n      start = _ref[0];\n      end = _ref[1];\n    }\n\n    /** Add decoration to the Editor */\n    otherCursor.decoration = this.monaco.deltaDecorations(otherCursor.decoration,\n      [\n        {\n          range: new monaco.Range(\n            start.lineNumber, start.column,\n            end.lineNumber, end.column\n          ),\n          options: {\n            className: clazz\n          }\n        }\n      ]\n    );\n\n    /** Clear cursor method */\n    var _this = this;\n    return {\n      clear: function clear() {\n        otherCursor.decoration = _this.monaco.deltaDecorations(otherCursor.decoration, []);\n      }\n    };\n  };\n\n  /**\n   * @method registerCallbacks - Assign callback functions to internal property\n   * @param {function[]} callbacks - Set of callback functions\n   */\n  MonacoAdapter.prototype.registerCallbacks = function registerCallbacks(callbacks) {\n    this.callbacks = Object.assign({}, this.callbacks, callbacks);\n  };\n\n  /**\n   * @method registerUndo\n   * @param {function} callback - Callback Handler for Undo Event\n   */\n  MonacoAdapter.prototype.registerUndo = function registerUndo(callback) {\n    if (typeof callback === 'function') {\n      this.callbacks.undo = callback;\n    } else {\n      throw new Error('MonacoAdapter: registerUndo method expects a '\n        + 'callback function in parameter');\n    }\n  };\n\n  /**\n   * @method registerRedo\n   * @param {function} callback - Callback Handler for Redo Event\n   */\n  MonacoAdapter.prototype.registerRedo = function registerRedo(callback) {\n    if (typeof callback === 'function') {\n      this.callbacks.redo = callback;\n    } else {\n      throw new Error('MonacoAdapter: registerRedo method expects a '\n        + 'callback function in parameter');\n    }\n  };\n\n  /**\n   * @method operationFromMonacoChanges - Convert Monaco Changes to OT.js Ops\n   * @param {Object} change - Change in Editor\n   * @param {string} content - Last Editor Content\n   * @param {Number} offset - Offset between changes of same event\n   * @returns Pair of Operation and Inverse\n   * Note: OT.js Operation expects the cursor to be at the end of content\n   */\n  MonacoAdapter.prototype.operationFromMonacoChanges = function operationFromMonacoChanges(change, content, offset) {\n    /** Change Informations */\n    var text = change.text;\n    var rangeLength = change.rangeLength;\n    var rangeOffset = change.rangeOffset;\n\n    /** Additional SEEK distance */\n    var restLength = content.length + offset - rangeOffset;\n\n    /** Declare OT.js Operation Variables */\n    var change_op, inverse_op, replaced_text;\n\n    if (text.length === 0 && rangeLength > 0) {\n      /** Delete Operation */\n      replaced_text = content.slice(rangeOffset, rangeOffset + rangeLength);\n\n      change_op = new firepad.TextOperation()\n        .retain(rangeOffset)\n        .delete(rangeLength)\n        .retain(restLength - rangeLength);\n\n      inverse_op = new firepad.TextOperation()\n        .retain(rangeOffset)\n        .insert(replaced_text)\n        .retain(restLength - rangeLength);\n    } else if (text.length > 0 && rangeLength > 0) {\n      /** Replace Operation */\n      replaced_text = content.slice(rangeOffset, rangeOffset + rangeLength);\n\n      change_op = new firepad.TextOperation()\n        .retain(rangeOffset)\n        .delete(rangeLength)\n        .insert(text)\n        .retain(restLength - rangeLength);\n\n      inverse_op = new firepad.TextOperation()\n        .retain(rangeOffset)\n        .delete(text.length)\n        .insert(replaced_text)\n        .retain(restLength - rangeLength);\n    } else {\n      /** Insert Operation */\n      change_op = new firepad.TextOperation()\n        .retain(rangeOffset)\n        .insert(text)\n        .retain(restLength);\n\n      inverse_op = new firepad.TextOperation()\n        .retain(rangeOffset)\n        .delete(text)\n        .retain(restLength);\n    }\n\n    return [ change_op, inverse_op ];\n  };\n\n  /**\n   * @method onChange - OnChange Event Handler\n   * @param {Object} event - OnChange Event Delegate\n   */\n  MonacoAdapter.prototype.onChange = function onChange(event) {\n    var _this = this;\n\n    if (!this.ignoreChanges) {\n      var content = this.lastDocLines.join(this.monacoModel.getEOL());\n      var offset = 0;\n\n      /** If no change information recieved */\n      if (!event.changes) {\n        var op = new firepad.TextOperation().retain(content.length);\n        this.trigger('change', op, op);\n      }\n\n      /** Iterate through all changes */\n      event.changes.forEach(function (change) {\n        var pair = _this.operationFromMonacoChanges(change, content, offset);\n        offset += pair[0].targetLength - pair[0].baseLength;\n\n        _this.trigger.apply(_this, ['change'].concat(pair));\n      });\n\n      /** Update Editor Content */\n      this.lastDocLines = this.monacoModel.getLinesContent();\n    }\n  };\n\n  /**\n   * @method trigger - Event Handler\n   * @param {string} event - Event name\n   * @param  {...any} args - Callback arguments\n   */\n  MonacoAdapter.prototype.trigger = function trigger(event) {\n    if (!this.callbacks.hasOwnProperty(event)) {\n      return;\n    }\n\n    var action = this.callbacks[event];\n\n    if (! typeof action === 'function') {\n      return;\n    }\n\n    var args = [];\n\n    if (arguments.length > 1) {\n      for (var i = 1; i < arguments.length; i++) {\n        args.push(arguments[i]);\n      }\n    }\n\n    action.apply(null, args);\n  };\n\n  /**\n   * @method onBlur - Blur event handler\n   */\n  MonacoAdapter.prototype.onBlur = function onBlur() {\n    if (this.monaco.getSelection().isEmpty()) {\n      this.trigger('blur');\n    }\n  };\n\n  /**\n   * @method onFocus - Focus event handler\n   */\n  MonacoAdapter.prototype.onFocus = function onFocus() {\n    this.trigger('focus');\n  };\n\n  /**\n   * @method onCursorActivity - CursorActivity event handler\n   */\n  MonacoAdapter.prototype.onCursorActivity = function onCursorActivity() {\n    var _this = this;\n\n    setTimeout(function () {\n      return _this.trigger('cursorActivity');\n    }, 1);\n  };\n\n  /**\n   * @method applyOperation\n   * @param {Operation} operation - OT.js Operation Object\n   */\n  MonacoAdapter.prototype.applyOperation = function applyOperation(operation) {\n    if (!operation.isNoop()) {\n      this.ignoreChanges = true;\n    }\n\n    /** Get Operations List */\n    var opsList = operation.ops;\n    var index = 0;\n\n    var _this = this;\n    opsList.forEach(function (op) {\n      /** Retain Operation */\n      if (op.isRetain()) {\n        index += op.chars;\n      } else if (op.isInsert()) {\n        /** Insert Operation */\n        var pos = _this.monacoModel.getPositionAt(index);\n\n        _this.monaco.executeEdits('my-source', [{\n          range: new monaco.Range(\n            pos.lineNumber, pos.column,\n            pos.lineNumber, pos.column\n          ),\n          text: op.text,\n          forceMoveMarkers: true\n        }]);\n\n        index += op.text.length;\n      } else if (op.isDelete()) {\n        /** Delete Operation */\n        var from = _this.monacoModel.getPositionAt(index);\n        var to = _this.monacoModel.getPositionAt(index + op.chars);\n\n        _this.monaco.executeEdits('my-source', [{\n          range: new monaco.Range(\n            from.lineNumber, from.column,\n            to.lineNumber, to.column\n          ),\n          text: '',\n          forceMoveMarkers: true\n        }]);\n      }\n    });\n\n    /** Update Editor Content and Reset Config */\n    this.lastDocLines = this.monacoModel.getLinesContent();\n    this.ignoreChanges = false;\n  };\n\n  /**\n   * @method invertOperation\n   * @param {Operation} operation - OT.js Operation Object\n   */\n  MonacoAdapter.prototype.invertOperation = function invertOperation(operation) {\n    operation.invert(this.getValue());\n  };\n\n  return MonacoAdapter;\n}(); /** Export Module */\n\n\nfirepad.MonacoAdapter = MonacoAdapter;\n\nvar firepad = firepad || { };\n\nfirepad.AttributeConstants = {\n  BOLD: 'b',\n  ITALIC: 'i',\n  UNDERLINE: 'u',\n  STRIKE: 's',\n  FONT: 'f',\n  FONT_SIZE: 'fs',\n  COLOR: 'c',\n  BACKGROUND_COLOR: 'bc',\n  ENTITY_SENTINEL: 'ent',\n\n// Line Attributes\n  LINE_SENTINEL: 'l',\n  LINE_INDENT: 'li',\n  LINE_ALIGN: 'la',\n  LIST_TYPE: 'lt'\n};\n\nfirepad.sentinelConstants = {\n  // A special character we insert at the beginning of lines so we can attach attributes to it to represent\n  // \"line attributes.\"  E000 is from the unicode \"private use\" range.\n  LINE_SENTINEL_CHARACTER:   '\\uE000',\n\n  // A special character used to represent any \"entity\" inserted into the document (e.g. an image).\n  ENTITY_SENTINEL_CHARACTER: '\\uE001'\n};\n\nvar firepad = firepad || { };\n\nfirepad.EntityManager = (function () {\n  var utils = firepad.utils;\n\n  function EntityManager() {\n    this.entities_ = {};\n\n    var attrs = ['src', 'alt', 'width', 'height', 'style', 'class'];\n    this.register('img', {\n      render: function(info) {\n        utils.assert(info.src, \"image entity should have 'src'!\");\n        var attrs = ['src', 'alt', 'width', 'height', 'style', 'class'];\n        var html = '<img ';\n        for(var i = 0; i < attrs.length; i++) {\n          var attr = attrs[i];\n          if (attr in info) {\n            html += ' ' + attr + '=\"' + info[attr] + '\"';\n          }\n        }\n        html += \">\";\n        return html;\n      },\n      fromElement: function(element) {\n        var info = {};\n        for(var i = 0; i < attrs.length; i++) {\n          var attr = attrs[i];\n          if (element.hasAttribute(attr)) {\n            info[attr] = element.getAttribute(attr);\n          }\n        }\n        return info;\n      }\n    });\n  }\n\n  EntityManager.prototype.register = function(type, options) {\n    firepad.utils.assert(options.render, \"Entity options should include a 'render' function!\");\n    firepad.utils.assert(options.fromElement, \"Entity options should include a 'fromElement' function!\");\n    this.entities_[type] = options;\n  };\n\n  EntityManager.prototype.renderToElement = function(entity, entityHandle) {\n    return this.tryRenderToElement_(entity, 'render', entityHandle);\n  };\n\n  EntityManager.prototype.exportToElement = function(entity) {\n    // Turns out 'export' is a reserved keyword, so 'getHtml' is preferable.\n    var elt = this.tryRenderToElement_(entity, 'export') ||\n              this.tryRenderToElement_(entity, 'getHtml') ||\n              this.tryRenderToElement_(entity, 'render');\n    elt.setAttribute('data-firepad-entity', entity.type);\n    return elt;\n  };\n\n  /* Updates a DOM element to reflect the given entity.\n     If the entity doesn't support the update method, it is fully\n     re-rendered.\n  */\n  EntityManager.prototype.updateElement = function(entity, element) {\n    var type = entity.type;\n    var info = entity.info;\n    if (this.entities_[type] && typeof(this.entities_[type].update) != 'undefined') {\n      this.entities_[type].update(info, element);\n    }\n  };\n\n  EntityManager.prototype.fromElement = function(element) {\n    var type = element.getAttribute('data-firepad-entity');\n\n    // HACK.  This should be configurable through entity registration.\n    if (!type)\n      type = element.nodeName.toLowerCase();\n\n    if (type && this.entities_[type]) {\n      var info = this.entities_[type].fromElement(element);\n      return new firepad.Entity(type, info);\n    }\n  };\n\n  EntityManager.prototype.tryRenderToElement_ = function(entity, renderFn, entityHandle) {\n    var type = entity.type, info = entity.info;\n    if (this.entities_[type] && this.entities_[type][renderFn]) {\n      var windowDocument = firepad.document || (window && window.document);\n      var res = this.entities_[type][renderFn](info, entityHandle, windowDocument);\n      if (res) {\n        if (typeof res === 'string') {\n          var div = (firepad.document || document).createElement('div');\n          div.innerHTML = res;\n          return div.childNodes[0];\n        } else if (typeof res === 'object') {\n          firepad.utils.assert(typeof res.nodeType !== 'undefined', 'Error rendering ' + type + ' entity.  render() function' +\n              ' must return an html string or a DOM element.');\n          return res;\n        }\n      }\n    }\n  };\n\n  EntityManager.prototype.entitySupportsUpdate = function(entityType) {\n    return this.entities_[entityType] && this.entities_[entityType]['update'];\n  };\n\n  return EntityManager;\n})();\n\nvar firepad = firepad || { };\n\n/**\n * Object to represent an Entity.\n */\nfirepad.Entity = (function() {\n  var ATTR = firepad.AttributeConstants;\n  var SENTINEL = ATTR.ENTITY_SENTINEL;\n  var PREFIX = SENTINEL + '_';\n\n  function Entity(type, info) {\n    // Allow calling without new.\n    if (!(this instanceof Entity)) { return new Entity(type, info); }\n\n    this.type = type;\n    this.info = info || { };\n  }\n\n  Entity.prototype.toAttributes = function() {\n    var attrs = { };\n    attrs[SENTINEL] = this.type;\n\n    for(var attr in this.info) {\n      attrs[PREFIX + attr] = this.info[attr];\n    }\n\n    return attrs;\n  };\n\n  Entity.fromAttributes = function(attributes) {\n    var type = attributes[SENTINEL];\n    var info = { };\n    for(var attr in attributes) {\n      if (attr.indexOf(PREFIX) === 0) {\n        info[attr.substr(PREFIX.length)] = attributes[attr];\n      }\n    }\n\n    return new Entity(type, info);\n  };\n\n  return Entity;\n})();\n\nvar firepad = firepad || { };\n\nfirepad.RichTextCodeMirror = (function () {\n  var AnnotationList = firepad.AnnotationList;\n  var Span = firepad.Span;\n  var utils = firepad.utils;\n  var ATTR = firepad.AttributeConstants;\n  var RichTextClassPrefixDefault = 'cmrt-';\n  var RichTextOriginPrefix = 'cmrt-';\n\n  // These attributes will have styles generated dynamically in the page.\n  var DynamicStyleAttributes = {\n    'c' : 'color',\n    'bc': 'background-color',\n    'fs' : 'font-size',\n    'li' : function(indent) { return 'padding-left: ' + (indent * 40) + 'px'; }\n  };\n\n  // A cache of dynamically-created styles so we can re-use them.\n  var StyleCache_ = {};\n\n  function RichTextCodeMirror(codeMirror, entityManager, options) {\n    this.codeMirror = codeMirror;\n    this.options_ = options || { };\n    this.entityManager_ = entityManager;\n    this.currentAttributes_ = null;\n\n    var self = this;\n    this.annotationList_ = new AnnotationList(\n        function(oldNodes, newNodes) { self.onAnnotationsChanged_(oldNodes, newNodes); });\n\n    // Ensure annotationList is in sync with any existing codemirror contents.\n    this.initAnnotationList_();\n\n    bind(this, 'onCodeMirrorBeforeChange_');\n    bind(this, 'onCodeMirrorChange_');\n    bind(this, 'onCursorActivity_');\n\n    if (parseInt(CodeMirror.version) >= 4) {\n      this.codeMirror.on('changes', this.onCodeMirrorChange_);\n    } else {\n      this.codeMirror.on('change', this.onCodeMirrorChange_);\n    }\n    this.codeMirror.on('beforeChange', this.onCodeMirrorBeforeChange_);\n    this.codeMirror.on('cursorActivity', this.onCursorActivity_);\n\n    this.changeId_ = 0;\n    this.outstandingChanges_ = { };\n    this.dirtyLines_ = [];\n  }\n  utils.makeEventEmitter(RichTextCodeMirror, ['change', 'attributesChange', 'newLine']);\n\n\n  var LineSentinelCharacter   = firepad.sentinelConstants.LINE_SENTINEL_CHARACTER;\n  var EntitySentinelCharacter = firepad.sentinelConstants.ENTITY_SENTINEL_CHARACTER;\n\n  RichTextCodeMirror.prototype.detach = function() {\n    this.codeMirror.off('beforeChange', this.onCodeMirrorBeforeChange_);\n    this.codeMirror.off('change', this.onCodeMirrorChange_);\n    this.codeMirror.off('changes', this.onCodeMirrorChange_);\n    this.codeMirror.off('cursorActivity', this.onCursorActivity_);\n    this.clearAnnotations_();\n  };\n\n  RichTextCodeMirror.prototype.toggleAttribute = function(attribute, value) {\n    var trueValue = value || true;\n    if (this.emptySelection_()) {\n      var attrs = this.getCurrentAttributes_();\n      if (attrs[attribute] === trueValue) {\n        delete attrs[attribute];\n      } else {\n        attrs[attribute] = trueValue;\n      }\n      this.currentAttributes_ = attrs;\n    } else {\n      var attributes = this.getCurrentAttributes_();\n      var newValue = (attributes[attribute] !== trueValue) ? trueValue : false;\n      this.setAttribute(attribute, newValue);\n    }\n  };\n\n  RichTextCodeMirror.prototype.setAttribute = function(attribute, value) {\n    var cm = this.codeMirror;\n    if (this.emptySelection_()) {\n      var attrs = this.getCurrentAttributes_();\n      if (value === false) {\n        delete attrs[attribute];\n      } else {\n        attrs[attribute] = value;\n      }\n      this.currentAttributes_ = attrs;\n    } else {\n      this.updateTextAttributes(cm.indexFromPos(cm.getCursor('start')), cm.indexFromPos(cm.getCursor('end')),\n        function(attributes) {\n          if (value === false) {\n            delete attributes[attribute];\n          } else {\n            attributes[attribute] = value;\n          }\n        });\n\n      this.updateCurrentAttributes_();\n    }\n  };\n\n  RichTextCodeMirror.prototype.updateTextAttributes = function(start, end, updateFn, origin, doLineAttributes) {\n    var newChanges = [];\n    var pos = start, self = this;\n    this.annotationList_.updateSpan(new Span(start, end - start), function(annotation, length) {\n      var attributes = { };\n      for(var attr in annotation.attributes) {\n        attributes[attr] = annotation.attributes[attr];\n      }\n\n      // Don't modify if this is a line sentinel.\n      if (!attributes[ATTR.LINE_SENTINEL] || doLineAttributes)\n        updateFn(attributes);\n\n      // changedAttributes will be the attributes we changed, with their new values.\n      // changedAttributesInverse will be the attributes we changed, with their old values.\n      var changedAttributes = { }, changedAttributesInverse = { };\n      self.computeChangedAttributes_(annotation.attributes, attributes, changedAttributes, changedAttributesInverse);\n      if (!emptyAttributes(changedAttributes)) {\n        newChanges.push({ start: pos, end: pos + length, attributes: changedAttributes, attributesInverse: changedAttributesInverse, origin: origin });\n      }\n\n      pos += length;\n      return new RichTextAnnotation(attributes);\n    });\n\n    if (newChanges.length > 0) {\n      this.trigger('attributesChange', this, newChanges);\n    }\n  };\n\n  RichTextCodeMirror.prototype.computeChangedAttributes_ = function(oldAttrs, newAttrs, changed, inverseChanged) {\n    var attrs = { }, attr;\n    for(attr in oldAttrs) { attrs[attr] = true; }\n    for(attr in newAttrs) { attrs[attr] = true; }\n\n    for (attr in attrs) {\n      if (!(attr in newAttrs)) {\n        // it was removed.\n        changed[attr] = false;\n        inverseChanged[attr] = oldAttrs[attr];\n      } else if (!(attr in oldAttrs)) {\n        // it was added.\n        changed[attr] = newAttrs[attr];\n        inverseChanged[attr] = false;\n      } else if (oldAttrs[attr] !== newAttrs[attr]) {\n        // it was changed.\n        changed[attr] = newAttrs[attr];\n        inverseChanged[attr] = oldAttrs[attr];\n      }\n    }\n  };\n\n  RichTextCodeMirror.prototype.toggleLineAttribute = function(attribute, value) {\n    var currentAttributes = this.getCurrentLineAttributes_();\n    var newValue;\n    if (!(attribute in currentAttributes) || currentAttributes[attribute] !== value) {\n      newValue = value;\n    } else {\n      newValue = false;\n    }\n    this.setLineAttribute(attribute, newValue);\n  };\n\n  RichTextCodeMirror.prototype.setLineAttribute = function(attribute, value) {\n    this.updateLineAttributesForSelection(function(attributes) {\n      if (value === false) {\n        delete attributes[attribute];\n      } else {\n        attributes[attribute] = value;\n      }\n    });\n  };\n\n  RichTextCodeMirror.prototype.updateLineAttributesForSelection = function(updateFn) {\n    var cm = this.codeMirror;\n    var start = cm.getCursor('start'), end = cm.getCursor('end');\n    var startLine = start.line, endLine = end.line;\n    var endLineText = cm.getLine(endLine);\n    var endsAtBeginningOfLine = this.areLineSentinelCharacters_(endLineText.substr(0, end.ch));\n    if (endLine > startLine && endsAtBeginningOfLine) {\n      // If the selection ends at the beginning of a line, don't include that line.\n      endLine--;\n    }\n\n    this.updateLineAttributes(startLine, endLine, updateFn);\n  };\n\n  RichTextCodeMirror.prototype.updateLineAttributes = function(startLine, endLine, updateFn) {\n    // TODO: Batch this into a single operation somehow.\n    for(var line = startLine; line <= endLine; line++) {\n      var text = this.codeMirror.getLine(line);\n      var lineStartIndex = this.codeMirror.indexFromPos({line: line, ch: 0});\n      // Create line sentinel character if necessary.\n      if (text[0] !== LineSentinelCharacter) {\n        var attributes = { };\n        attributes[ATTR.LINE_SENTINEL] = true;\n        updateFn(attributes);\n        this.insertText(lineStartIndex, LineSentinelCharacter, attributes);\n      } else {\n        this.updateTextAttributes(lineStartIndex, lineStartIndex + 1, updateFn, /*origin=*/null, /*doLineAttributes=*/true);\n      }\n    }\n  };\n\n  RichTextCodeMirror.prototype.replaceText = function(start, end, text, attributes, origin) {\n    this.changeId_++;\n    var newOrigin = RichTextOriginPrefix + this.changeId_;\n    this.outstandingChanges_[newOrigin] = { origOrigin: origin, attributes: attributes };\n\n    var cm = this.codeMirror;\n    var from = cm.posFromIndex(start);\n    var to = typeof end === 'number' ? cm.posFromIndex(end) : null;\n    cm.replaceRange(text, from, to, newOrigin);\n  };\n\n  RichTextCodeMirror.prototype.insertText = function(index, text, attributes, origin) {\n    var cm = this.codeMirror;\n    var cursor = cm.getCursor();\n    var resetCursor = origin == 'RTCMADAPTER' && !cm.somethingSelected() && index == cm.indexFromPos(cursor);\n    this.replaceText(index, null, text, attributes, origin);\n    if (resetCursor) cm.setCursor(cursor);\n  };\n\n  RichTextCodeMirror.prototype.removeText = function(start, end, origin) {\n    var cm = this.codeMirror;\n    cm.replaceRange(\"\", cm.posFromIndex(start), cm.posFromIndex(end), origin);\n  };\n\n  RichTextCodeMirror.prototype.insertEntityAtCursor = function(type, info, origin) {\n    var cm = this.codeMirror;\n    var index = cm.indexFromPos(cm.getCursor('head'));\n    this.insertEntityAt(index, type, info, origin);\n  };\n\n  RichTextCodeMirror.prototype.insertEntityAt = function(index, type, info, origin) {\n    var cm = this.codeMirror;\n    this.insertEntity_(index, new firepad.Entity(type, info), origin);\n  };\n\n  RichTextCodeMirror.prototype.insertEntity_ = function(index, entity, origin) {\n    this.replaceText(index, null, EntitySentinelCharacter, entity.toAttributes(), origin);\n  };\n\n  RichTextCodeMirror.prototype.getAttributeSpans = function(start, end) {\n    var spans = [];\n    var annotatedSpans = this.annotationList_.getAnnotatedSpansForSpan(new Span(start, end - start));\n    for(var i  = 0; i < annotatedSpans.length; i++) {\n      spans.push({ length: annotatedSpans[i].length, attributes: annotatedSpans[i].annotation.attributes });\n    }\n\n    return spans;\n  };\n\n  RichTextCodeMirror.prototype.end = function() {\n    var lastLine = this.codeMirror.lineCount() - 1;\n    return this.codeMirror.indexFromPos({line: lastLine, ch: this.codeMirror.getLine(lastLine).length});\n  };\n\n  RichTextCodeMirror.prototype.getRange = function(start, end) {\n    var from = this.codeMirror.posFromIndex(start), to = this.codeMirror.posFromIndex(end);\n    return this.codeMirror.getRange(from, to);\n  };\n\n  RichTextCodeMirror.prototype.initAnnotationList_ = function() {\n    // Insert empty annotation span for existing content.\n    var end = this.end();\n    if (end !== 0) {\n      this.annotationList_.insertAnnotatedSpan(new Span(0, end), new RichTextAnnotation());\n    }\n  };\n\n  /**\n   * Updates the nodes of an Annotation.\n   * @param {Array.<OldAnnotatedSpan>} oldNodes The list of nodes to replace.\n   * @param {Array.<NewAnnotatedSpan>} newNodes The new list of nodes.\n   */\n  RichTextCodeMirror.prototype.onAnnotationsChanged_ = function(oldNodes, newNodes) {\n    var marker;\n\n    var linesToReMark = { };\n\n    // Update any entities in-place that we can.  This will remove them from the oldNodes/newNodes lists\n    // so we don't remove and recreate them below.\n    this.tryToUpdateEntitiesInPlace(oldNodes, newNodes);\n\n    for(var i = 0; i < oldNodes.length; i++) {\n      var attributes = oldNodes[i].annotation.attributes;\n      if (ATTR.LINE_SENTINEL in attributes) {\n        linesToReMark[this.codeMirror.posFromIndex(oldNodes[i].pos).line] = true;\n      }\n      marker = oldNodes[i].getAttachedObject();\n      if (marker) {\n        marker.clear();\n      }\n    }\n\n    for (i = 0; i < newNodes.length; i++) {\n      var annotation = newNodes[i].annotation;\n      var forLine = (ATTR.LINE_SENTINEL in annotation.attributes);\n      var entity = (ATTR.ENTITY_SENTINEL in annotation.attributes);\n\n      var from = this.codeMirror.posFromIndex(newNodes[i].pos);\n      if (forLine) {\n        linesToReMark[from.line] = true;\n      } else if (entity) {\n        this.markEntity_(newNodes[i]);\n      } else {\n        var className = this.getClassNameForAttributes_(annotation.attributes);\n        if (className !== '') {\n          var to = this.codeMirror.posFromIndex(newNodes[i].pos + newNodes[i].length);\n          marker = this.codeMirror.markText(from, to, { className: className });\n          newNodes[i].attachObject(marker);\n        }\n      }\n    }\n\n    for(var line in linesToReMark) {\n      this.dirtyLines_.push(this.codeMirror.getLineHandle(Number(line)));\n      this.queueLineMarking_();\n    }\n  };\n\n  RichTextCodeMirror.prototype.tryToUpdateEntitiesInPlace = function(oldNodes, newNodes) {\n    // Loop over nodes in reverse order so we can easily splice them out as necessary.\n    var oldNodesLen = oldNodes.length;\n    while (oldNodesLen--) {\n      var oldNode = oldNodes[oldNodesLen];\n      var newNodesLen = newNodes.length;\n      while (newNodesLen--) {\n        var newNode = newNodes[newNodesLen];\n        if (oldNode.pos == newNode.pos &&\n            oldNode.length == newNode.length &&\n            oldNode.annotation.attributes['ent'] &&\n            oldNode.annotation.attributes['ent'] == newNode.annotation.attributes['ent']) {\n          var entityType = newNode.annotation.attributes['ent'];\n          if (this.entityManager_.entitySupportsUpdate(entityType)) {\n            // Update it in place and remove the change from oldNodes / newNodes so we don't process it below.\n            oldNodes.splice(oldNodesLen, 1);\n            newNodes.splice(newNodesLen, 1);\n            var marker = oldNode.getAttachedObject();\n            marker.update(newNode.annotation.attributes);\n            newNode.attachObject(marker);\n          }\n        }\n      }\n    }\n  };\n\n  RichTextCodeMirror.prototype.queueLineMarking_ = function() {\n    if (this.lineMarkTimeout_ != null) return;\n    var self = this;\n\n    this.lineMarkTimeout_ = setTimeout(function() {\n      self.lineMarkTimeout_ = null;\n      var dirtyLineNumbers = [];\n      for(var i = 0; i < self.dirtyLines_.length; i++) {\n        var lineNum = self.codeMirror.getLineNumber(self.dirtyLines_[i]);\n        dirtyLineNumbers.push(Number(lineNum));\n      }\n      self.dirtyLines_ = [];\n\n      dirtyLineNumbers.sort(function(a, b) { return a - b; });\n      var lastLineMarked = -1;\n      for(i = 0; i < dirtyLineNumbers.length; i++) {\n        var lineNumber = dirtyLineNumbers[i];\n        if (lineNumber > lastLineMarked) {\n          lastLineMarked = self.markLineSentinelCharactersForChangedLines_(lineNumber, lineNumber);\n        }\n      }\n    }, 0);\n  };\n\n  RichTextCodeMirror.prototype.addStyleWithCSS_ = function(css) {\n    var head = document.getElementsByTagName('head')[0],\n        style = document.createElement('style');\n\n    style.type = 'text/css';\n    if (style.styleSheet){\n      style.styleSheet.cssText = css;\n    } else {\n      style.appendChild(document.createTextNode(css));\n    }\n\n    head.appendChild(style);\n  };\n\n  RichTextCodeMirror.prototype.getClassNameForAttributes_ = function(attributes) {\n    var globalClassName = '';\n    for (var attr in attributes) {\n      var val = attributes[attr];\n      if (attr === ATTR.LINE_SENTINEL) {\n        firepad.utils.assert(val === true, \"LINE_SENTINEL attribute should be true if it exists.\");\n      } else {\n        var className = (this.options_['cssPrefix'] || RichTextClassPrefixDefault) + attr;\n        if (val !== true) {\n          // Append \"px\" to font size if it's missing.\n          // Probably could be removed now as parseHtml automatically adds px when required\n          if (attr === ATTR.FONT_SIZE && typeof val !== \"string\") {\n            val = val + \"px\";\n          }\n\n          var classVal = val.toString().toLowerCase().replace(/[^a-z0-9-_]/g, '-');\n          className += '-' + classVal;\n          if (DynamicStyleAttributes[attr]) {\n            if (!StyleCache_[attr]) StyleCache_[attr] = {};\n            if (!StyleCache_[attr][classVal]) {\n              StyleCache_[attr][classVal] = true;\n              var dynStyle = DynamicStyleAttributes[attr];\n              var css = (typeof dynStyle === 'function') ?\n                  dynStyle(val) :\n                  dynStyle + \": \" + val;\n\n              var selector = (attr == ATTR.LINE_INDENT) ?\n                  'pre.' + className :\n                  '.' + className;\n\n              this.addStyleWithCSS_(selector + ' { ' + css + ' }');\n\n              // As of v5.48, CodeMirror applies its own pre style which conflicts with ours, so we\n              // need to make sure we add our styles with a more-specific css selector as well.\n              if (attr === ATTR.LINE_INDENT) {\n                var selector = 'pre.CodeMirror-line.' + className;\n                this.addStyleWithCSS_(selector + ' { ' + css + ' }');\n              }\n            }\n          }\n        }\n        globalClassName = globalClassName + ' ' + className;\n      }\n    }\n    return globalClassName;\n  };\n\n  RichTextCodeMirror.prototype.markEntity_ = function(annotationNode) {\n    var attributes = annotationNode.annotation.attributes;\n    var entity = firepad.Entity.fromAttributes(attributes);\n    var cm = this.codeMirror;\n    var self = this;\n\n    var markers = [];\n    for(var i = 0; i < annotationNode.length; i++) {\n      var from = cm.posFromIndex(annotationNode.pos + i);\n      var to = cm.posFromIndex(annotationNode.pos + i + 1);\n\n      var options = { collapsed: true, atomic: true, inclusiveLeft: false, inclusiveRight: false };\n\n      var entityHandle = this.createEntityHandle_(entity, annotationNode.pos);\n\n      var element = this.entityManager_.renderToElement(entity, entityHandle);\n      if (element) {\n        options.replacedWith = element;\n      }\n      var marker = cm.markText(from, to, options);\n      markers.push(marker);\n      entityHandle.setMarker(marker);\n    }\n\n    annotationNode.attachObject({\n      clear: function() {\n        for(var i = 0; i < markers.length; i++) {\n          markers[i].clear();\n        }\n      },\n\n      /**\n       * Updates the attributes of all the AnnotationNode entities.\n       * @param {Object.<string, string>} info The full list of new\n       *     attributes to apply.\n       */\n      update: function(info) {\n        var entity = firepad.Entity.fromAttributes(info);\n        for(var i = 0; i < markers.length; i++) {\n          self.entityManager_.updateElement(entity, markers[i].replacedWith);\n        }\n      }\n    });\n\n    // This probably shouldn't be necessary.  There must be a lurking CodeMirror bug.\n    this.queueRefresh_();\n  };\n\n  RichTextCodeMirror.prototype.queueRefresh_ = function() {\n    var self = this;\n    if (!this.refreshTimer_) {\n      this.refreshTimer_ = setTimeout(function() {\n        self.codeMirror.refresh();\n        self.refreshTimer_ = null;\n      }, 0);\n    }\n  };\n\n  RichTextCodeMirror.prototype.createEntityHandle_ = function(entity, location) {\n    var marker = null;\n    var self = this;\n\n    function find() {\n      if (marker) {\n        var where = marker.find();\n        return where ? self.codeMirror.indexFromPos(where.from) : null;\n      } else {\n        return location;\n      }\n    }\n\n    function remove() {\n      var at = find();\n      if (at != null) {\n        self.codeMirror.focus();\n        self.removeText(at, at + 1);\n      }\n    }\n\n    /**\n     * Updates the attributes of an Entity.  Will call .update() if the entity supports it,\n     * else it'll just remove / re-create the entity.\n     * @param {Object.<string, string>} info The full list of new\n     *     attributes to apply.\n     */\n    function replace(info) {\n      var ATTR = firepad.AttributeConstants;\n      var SENTINEL = ATTR.ENTITY_SENTINEL;\n      var PREFIX = SENTINEL + '_';\n\n      var at = find();\n\n      self.updateTextAttributes(at, at+1, function(attrs) {\n        for (var member in attrs) {\n          delete attrs[member];\n        }\n        attrs[SENTINEL] = entity.type;\n\n        for(var attr in info) {\n          attrs[PREFIX + attr] = info[attr];\n        }\n      });\n    }\n\n    function setMarker(m) {\n      marker = m;\n    }\n\n    return { find: find, remove: remove, replace: replace,\n             setMarker: setMarker };\n  };\n\n  RichTextCodeMirror.prototype.lineClassRemover_ = function(lineNum) {\n    var cm = this.codeMirror;\n    var lineHandle = cm.getLineHandle(lineNum);\n    return {\n      clear: function() {\n        // HACK to remove all classes (since CodeMirror treats this as a regex internally).\n        cm.removeLineClass(lineHandle, \"text\", \".*\");\n      }\n    }\n  };\n\n  RichTextCodeMirror.prototype.emptySelection_ = function() {\n    var start = this.codeMirror.getCursor('start'), end = this.codeMirror.getCursor('end');\n    return (start.line === end.line && start.ch === end.ch);\n  };\n\n  RichTextCodeMirror.prototype.onCodeMirrorBeforeChange_ = function(cm, change) {\n    // Remove LineSentinelCharacters from incoming input (e.g copy/pasting)\n    if (change.origin === '+input' || change.origin === 'paste') {\n      var newText = [];\n      for(var i = 0; i < change.text.length; i++) {\n        var t = change.text[i];\n        t = t.replace(new RegExp('[' + LineSentinelCharacter + EntitySentinelCharacter + ']', 'g'), '');\n        newText.push(t);\n      }\n      change.update(change.from, change.to, newText);\n    }\n  };\n\n  function cmpPos (a, b) {\n    return (a.line - b.line) || (a.ch - b.ch);\n  }\n  function posEq (a, b) { return cmpPos(a, b) === 0; }\n  function posLe (a, b) { return cmpPos(a, b) <= 0; }\n\n  function last (arr) { return arr[arr.length - 1]; }\n\n  function sumLengths (strArr) {\n    if (strArr.length === 0) { return 0; }\n    var sum = 0;\n    for (var i = 0; i < strArr.length; i++) { sum += strArr[i].length; }\n    return sum + strArr.length - 1;\n  }\n\n  RichTextCodeMirror.prototype.onCodeMirrorChange_ = function(cm, cmChanges) {\n    // Handle single change objects and linked lists of change objects.\n    if (typeof cmChanges.from === 'object') {\n      var changeArray = [];\n      while (cmChanges) {\n        changeArray.push(cmChanges);\n        cmChanges = cmChanges.next;\n      }\n      cmChanges = changeArray;\n    }\n\n    var changes = this.convertCoordinateSystemForChanges_(cmChanges);\n    var newChanges = [];\n\n    for (var i = 0; i < changes.length; i++) {\n      var change = changes[i];\n      var start = change.start, end = change.end, text = change.text, removed = change.removed, origin = change.origin;\n\n      // When text with multiple sets of attributes on it is removed, we need to split it into separate remove changes.\n      if (removed.length > 0) {\n        var oldAnnotationSpans = this.annotationList_.getAnnotatedSpansForSpan(new Span(start, removed.length));\n        var removedPos = 0;\n        for(var j = 0; j < oldAnnotationSpans.length; j++) {\n          var span = oldAnnotationSpans[j];\n          newChanges.push({ start: start, end: start + span.length, removedAttributes: span.annotation.attributes,\n            removed: removed.substr(removedPos, span.length), attributes: { }, text: \"\", origin: change.origin });\n          removedPos += span.length;\n        }\n\n        this.annotationList_.removeSpan(new Span(start, removed.length));\n      }\n\n      if (text.length > 0) {\n        var attributes;\n        // TODO: Handle 'paste' differently?\n        if (change.origin === '+input' || change.origin === 'paste') {\n          attributes = this.currentAttributes_ || { };\n        } else if (origin in this.outstandingChanges_) {\n          attributes = this.outstandingChanges_[origin].attributes;\n          origin = this.outstandingChanges_[origin].origOrigin;\n          delete this.outstandingChanges_[origin];\n        } else {\n          attributes = {};\n        }\n\n        this.annotationList_.insertAnnotatedSpan(new Span(start, text.length), new RichTextAnnotation(attributes));\n\n        newChanges.push({ start: start, end: start, removedAttributes: { }, removed: \"\", text: text,\n          attributes: attributes, origin: origin });\n      }\n    }\n\n    this.markLineSentinelCharactersForChanges_(cmChanges);\n\n    if (newChanges.length > 0) {\n      this.trigger('change', this, newChanges);\n    }\n  };\n\n  RichTextCodeMirror.prototype.convertCoordinateSystemForChanges_ = function(changes) {\n    // We have to convert the positions in the pre-change coordinate system to indexes.\n    // CodeMirror's `indexFromPos` method does this for the current state of the editor.\n    // We can use the information of a single change object to convert a post-change\n    // coordinate system to a pre-change coordinate system. We can now proceed inductively\n    // to get a pre-change coordinate system for all changes in the linked list.  A\n    // disadvantage of this approach is its complexity `O(n^2)` in the length of the\n    // linked list of changes.\n\n    var self = this;\n    var indexFromPos = function (pos) {\n      return self.codeMirror.indexFromPos(pos);\n    };\n\n    function updateIndexFromPos (indexFromPos, change) {\n      return function (pos) {\n        if (posLe(pos, change.from)) { return indexFromPos(pos); }\n        if (posLe(change.to, pos)) {\n          return indexFromPos({\n            line: pos.line + change.text.length - 1 - (change.to.line - change.from.line),\n            ch: (change.to.line < pos.line) ?\n                pos.ch :\n                (change.text.length <= 1) ?\n                    pos.ch - (change.to.ch - change.from.ch) + sumLengths(change.text) :\n                    pos.ch - change.to.ch + last(change.text).length\n          }) + sumLengths(change.removed) - sumLengths(change.text);\n        }\n        if (change.from.line === pos.line) {\n          return indexFromPos(change.from) + pos.ch - change.from.ch;\n        }\n        return indexFromPos(change.from) +\n            sumLengths(change.removed.slice(0, pos.line - change.from.line)) +\n            1 + pos.ch;\n      };\n    }\n\n    var newChanges = [];\n    for (var i = changes.length - 1; i >= 0; i--) {\n      var change = changes[i];\n      indexFromPos = updateIndexFromPos(indexFromPos, change);\n\n      var start = indexFromPos(change.from);\n\n      var removedText = change.removed.join('\\n');\n      var text = change.text.join('\\n');\n      newChanges.unshift({ start: start, end: start + removedText.length, removed: removedText, text: text,\n        origin: change.origin});\n    }\n    return newChanges;\n  };\n\n  /**\n   * Detects whether any line sentinel characters were added or removed by the change and if so,\n   * re-marks line sentinel characters on the affected range of lines.\n   * @param changes\n   * @private\n   */\n  RichTextCodeMirror.prototype.markLineSentinelCharactersForChanges_ = function(changes) {\n    // TODO: This doesn't handle multiple changes correctly (overlapping, out-of-oder, etc.).\n    // But In practice, people using firepad for rich-text editing don't batch multiple changes\n    // together, so this isn't quite as bad as it seems.\n    var startLine = Number.MAX_VALUE, endLine = -1;\n\n    for (var i = 0; i < changes.length; i++) {\n      var change = changes[i];\n      var line = change.from.line, ch = change.from.ch;\n\n      if (change.removed.length > 1 || change.removed[0].indexOf(LineSentinelCharacter) >= 0) {\n        // We removed 1+ newlines or line sentinel characters.\n        startLine = Math.min(startLine, line);\n        endLine = Math.max(endLine, line);\n      }\n\n      if (change.text.length > 1) { // 1+ newlines\n        startLine = Math.min(startLine, line);\n        endLine = Math.max(endLine, line + change.text.length - 1);\n      } else if (change.text[0].indexOf(LineSentinelCharacter) >= 0) {\n        startLine = Math.min(startLine, line);\n        endLine = Math.max(endLine, line);\n      }\n    }\n\n    // HACK: Because the above code doesn't handle multiple changes correctly, endLine might be invalid.  To\n    // avoid crashing, we just cap it at the line count.\n    endLine = Math.min(endLine, this.codeMirror.lineCount() - 1);\n\n    this.markLineSentinelCharactersForChangedLines_(startLine, endLine);\n  };\n\n  RichTextCodeMirror.prototype.markLineSentinelCharactersForChangedLines_ = function(startLine, endLine) {\n    // Back up to first list item.\n    if (startLine < Number.MAX_VALUE) {\n      while(startLine > 0 && this.lineIsListItemOrIndented_(startLine-1)) {\n        startLine--;\n      }\n    }\n\n    // Advance to last list item.\n    if (endLine > -1) {\n      var lineCount = this.codeMirror.lineCount();\n      while (endLine + 1 < lineCount && this.lineIsListItemOrIndented_(endLine+1)) {\n        endLine++;\n      }\n    }\n\n    // keeps track of the list number at each indent level.\n    var listNumber = [];\n\n    var cm = this.codeMirror;\n    for(var line = startLine; line <= endLine; line++) {\n      var text = cm.getLine(line);\n\n      // Remove any existing line classes.\n      var lineHandle = cm.getLineHandle(line);\n      cm.removeLineClass(lineHandle, \"text\", \".*\");\n\n      if (text.length > 0) {\n        var markIndex = text.indexOf(LineSentinelCharacter);\n        while (markIndex >= 0) {\n          var markStartIndex = markIndex;\n\n          // Find the end of this series of sentinel characters, and remove any existing markers.\n          while (markIndex < text.length && text[markIndex] === LineSentinelCharacter) {\n            var marks = cm.findMarksAt({ line: line, ch: markIndex });\n            for(var i = 0; i < marks.length; i++) {\n              if (marks[i].isForLineSentinel) {\n                marks[i].clear();\n              }\n            }\n\n            markIndex++;\n          }\n\n          this.markLineSentinelCharacters_(line, markStartIndex, markIndex, listNumber);\n          markIndex = text.indexOf(LineSentinelCharacter, markIndex);\n        }\n      } else {\n        // Reset all indents.\n        listNumber = [];\n      }\n    }\n    return endLine;\n  };\n\n  RichTextCodeMirror.prototype.markLineSentinelCharacters_ = function(line, startIndex, endIndex, listNumber) {\n    var cm = this.codeMirror;\n    // If the mark is at the beginning of the line and it represents a list element, we need to replace it with\n    // the appropriate html element for the list heading.\n    var element = null;\n    var marker = null;\n    var getMarkerLine = function() {\n      var span = marker.find();\n      return span ? span.from.line : null;\n    };\n\n    if (startIndex === 0) {\n      var attributes = this.getLineAttributes_(line);\n      var listType = attributes[ATTR.LIST_TYPE];\n      var indent = attributes[ATTR.LINE_INDENT] || 0;\n      if (listType && indent === 0) { indent = 1; }\n      while (indent >= listNumber.length) {\n        listNumber.push(1);\n      }\n      if (listType === 'o') {\n        element = this.makeOrderedListElement_(listNumber[indent]);\n        listNumber[indent]++;\n      } else if (listType === 'u') {\n        element = this.makeUnorderedListElement_();\n        listNumber[indent] = 1;\n      } else if (listType === 't') {\n        element = this.makeTodoListElement_(false, getMarkerLine);\n        listNumber[indent] = 1;\n      } else if (listType === 'tc') {\n        element = this.makeTodoListElement_(true, getMarkerLine);\n        listNumber[indent] = 1;\n      }\n\n      var className = this.getClassNameForAttributes_(attributes);\n      if (className !== '') {\n        this.codeMirror.addLineClass(line, \"text\", className);\n      }\n\n      // Reset deeper indents back to 1.\n      listNumber[indent + 1] = 1;\n    }\n\n    // Create a marker to cover this series of sentinel characters.\n    // NOTE: The reason we treat them as a group (one marker for all subsequent sentinel characters instead of\n    // one marker for each sentinel character) is that CodeMirror seems to get angry if we don't.\n    var markerOptions = { inclusiveLeft: true, collapsed: true };\n    if (element) {\n      markerOptions.replacedWith = element;\n    }\n    var marker = cm.markText({line: line, ch: startIndex }, { line: line, ch: endIndex }, markerOptions);\n    // track that it's a line-sentinel character so we can identify it later.\n    marker.isForLineSentinel = true;\n  };\n\n  RichTextCodeMirror.prototype.makeOrderedListElement_ = function(number) {\n    return utils.elt('div', number + '.', {\n      'class': 'firepad-list-left'\n    });\n  };\n\n  RichTextCodeMirror.prototype.makeUnorderedListElement_ = function() {\n    return utils.elt('div', '\\u2022', {\n      'class': 'firepad-list-left'\n    });\n  };\n\n  RichTextCodeMirror.prototype.toggleTodo = function(noRemove) {\n    var attribute = ATTR.LIST_TYPE;\n    var currentAttributes = this.getCurrentLineAttributes_();\n    var newValue;\n    if (!(attribute in currentAttributes) || ((currentAttributes[attribute] !== 't') && (currentAttributes[attribute] !== 'tc'))) {\n      newValue = 't';\n    } else if (currentAttributes[attribute] === 't') {\n      newValue = 'tc';\n    } else if (currentAttributes[attribute] === 'tc') {\n      newValue = noRemove ? 't' : false;\n    }\n    this.setLineAttribute(attribute, newValue);\n  };\n\n  RichTextCodeMirror.prototype.makeTodoListElement_ = function(checked, getMarkerLine) {\n    var params = {\n      'type': \"checkbox\",\n      'class': 'firepad-todo-left'\n    };\n    if (checked) params['checked'] = true;\n    var el = utils.elt('input', false, params);\n    var self = this;\n    utils.on(el, 'click', utils.stopEventAnd(function(e) {\n      self.codeMirror.setCursor({line: getMarkerLine(), ch: 1});\n      self.toggleTodo(true);\n    }));\n    return el;\n  };\n\n  RichTextCodeMirror.prototype.lineIsListItemOrIndented_ = function(lineNum) {\n    var attrs = this.getLineAttributes_(lineNum);\n    return ((attrs[ATTR.LIST_TYPE] || false) !== false) ||\n           ((attrs[ATTR.LINE_INDENT] || 0) !== 0);\n  };\n\n  RichTextCodeMirror.prototype.onCursorActivity_ = function() {\n    var self = this;\n    setTimeout(function() {\n      self.updateCurrentAttributes_();\n    }, 1);\n  };\n\n  RichTextCodeMirror.prototype.getCurrentAttributes_ = function() {\n    if (!this.currentAttributes_) {\n      this.updateCurrentAttributes_();\n    }\n    return this.currentAttributes_;\n  };\n\n  RichTextCodeMirror.prototype.updateCurrentAttributes_ = function() {\n    var cm = this.codeMirror;\n    var anchor = cm.indexFromPos(cm.getCursor('anchor')), head = cm.indexFromPos(cm.getCursor('head'));\n    var pos = head;\n    if (anchor > head) { // backwards selection\n      // Advance past any newlines or line sentinels.\n      while(pos < this.end()) {\n        var c = this.getRange(pos, pos+1);\n        if (c !== '\\n' && c !== LineSentinelCharacter)\n          break;\n        pos++;\n      }\n      if (pos < this.end())\n        pos++; // since we're going to look at the annotation span to the left to decide what attributes to use.\n    } else {\n      // Back up before any newlines or line sentinels.\n      while(pos > 0) {\n        c = this.getRange(pos-1, pos);\n        if (c !== '\\n' && c !== LineSentinelCharacter)\n          break;\n        pos--;\n      }\n    }\n    var spans = this.annotationList_.getAnnotatedSpansForPos(pos);\n    this.currentAttributes_ = {};\n\n    var attributes = {};\n    // Use the attributes to the left unless they're line attributes (in which case use the ones to the right.\n    if (spans.length > 0 && (!(ATTR.LINE_SENTINEL in spans[0].annotation.attributes))) {\n      attributes = spans[0].annotation.attributes;\n    } else if (spans.length > 1) {\n      firepad.utils.assert(!(ATTR.LINE_SENTINEL in spans[1].annotation.attributes), \"Cursor can't be between two line sentinel characters.\");\n      attributes = spans[1].annotation.attributes;\n    }\n    for(var attr in attributes) {\n      // Don't copy line or entity attributes.\n      if (attr !== 'l' && attr !== 'lt' && attr !== 'li' && attr.indexOf(ATTR.ENTITY_SENTINEL) !== 0) {\n        this.currentAttributes_[attr] = attributes[attr];\n      }\n    }\n  };\n\n  RichTextCodeMirror.prototype.getCurrentLineAttributes_ = function() {\n    var cm = this.codeMirror;\n    var anchor = cm.getCursor('anchor'), head = cm.getCursor('head');\n    var line = head.line;\n    // If it's a forward selection and the cursor is at the beginning of a line, use the previous line.\n    if (head.ch === 0 && anchor.line < head.line) {\n      line--;\n    }\n    return this.getLineAttributes_(line);\n  };\n\n  RichTextCodeMirror.prototype.getLineAttributes_ = function(lineNum) {\n    var attributes = {};\n    var line = this.codeMirror.getLine(lineNum);\n    if (line.length > 0 && line[0] === LineSentinelCharacter) {\n      var lineStartIndex = this.codeMirror.indexFromPos({ line: lineNum, ch: 0 });\n      var spans = this.annotationList_.getAnnotatedSpansForSpan(new Span(lineStartIndex, 1));\n      firepad.utils.assert(spans.length === 1);\n      for(var attr in spans[0].annotation.attributes) {\n        attributes[attr] = spans[0].annotation.attributes[attr];\n      }\n    }\n    return attributes;\n  };\n\n  RichTextCodeMirror.prototype.clearAnnotations_ = function() {\n    this.annotationList_.updateSpan(new Span(0, this.end()), function(annotation, length) {\n      return new RichTextAnnotation({ });\n    });\n  };\n\n  RichTextCodeMirror.prototype.newline = function() {\n    var cm = this.codeMirror;\n    var self = this;\n    if (!this.emptySelection_()) {\n      cm.replaceSelection('\\n', 'end', '+input');\n    } else {\n      var cursorLine = cm.getCursor('head').line;\n      var lineAttributes = this.getLineAttributes_(cursorLine);\n      var listType = lineAttributes[ATTR.LIST_TYPE];\n\n      if (listType && cm.getLine(cursorLine).length === 1) {\n        // They hit enter on a line with just a list heading.  Just remove the list heading.\n        this.updateLineAttributes(cursorLine, cursorLine, function(attributes) {\n          delete attributes[ATTR.LIST_TYPE];\n          delete attributes[ATTR.LINE_INDENT];\n        });\n      } else {\n        cm.replaceSelection('\\n', 'end', '+input');\n\n        // Copy line attributes forward.\n        this.updateLineAttributes(cursorLine+1, cursorLine+1, function(attributes) {\n          for(var attr in lineAttributes) {\n            attributes[attr] = lineAttributes[attr];\n          }\n\n          // Don't mark new todo items as completed.\n          if (listType === 'tc') attributes[ATTR.LIST_TYPE] = 't';\n          self.trigger('newLine', {line: cursorLine+1, attr: attributes});\n        });\n      }\n    }\n  };\n\n  RichTextCodeMirror.prototype.deleteLeft = function() {\n    var cm = this.codeMirror;\n    var cursorPos = cm.getCursor('head');\n    var lineAttributes = this.getLineAttributes_(cursorPos.line);\n    var listType = lineAttributes[ATTR.LIST_TYPE];\n    var indent = lineAttributes[ATTR.LINE_INDENT];\n\n    var backspaceAtStartOfLine = this.emptySelection_() && cursorPos.ch === 1;\n\n    if (backspaceAtStartOfLine && listType) {\n      // They hit backspace at the beginning of a line with a list heading.  Just remove the list heading.\n      this.updateLineAttributes(cursorPos.line, cursorPos.line, function(attributes) {\n        delete attributes[ATTR.LIST_TYPE];\n        delete attributes[ATTR.LINE_INDENT];\n      });\n    } else if (backspaceAtStartOfLine && indent && indent > 0) {\n      this.unindent();\n    } else {\n      cm.deleteH(-1, \"char\");\n    }\n  };\n\n  RichTextCodeMirror.prototype.deleteRight = function() {\n    var cm = this.codeMirror;\n    var cursorPos = cm.getCursor('head');\n\n    var text = cm.getLine(cursorPos.line);\n    var emptyLine = this.areLineSentinelCharacters_(text);\n    var nextLineText = (cursorPos.line + 1 < cm.lineCount()) ? cm.getLine(cursorPos.line + 1) : \"\";\n    if (this.emptySelection_() && emptyLine && nextLineText[0] === LineSentinelCharacter) {\n      // Delete the empty line but not the line sentinel character on the next line.\n      cm.replaceRange('', { line: cursorPos.line, ch: 0 }, { line: cursorPos.line + 1, ch: 0}, '+input');\n\n      // HACK: Once we've deleted this line, the cursor will be between the newline on the previous\n      // line and the line sentinel character on the next line, which is an invalid position.\n      // CodeMirror tends to therefore move it to the end of the previous line, which is undesired.\n      // So we explicitly set it to ch: 0 on the current line, which seems to move it after the line\n      // sentinel character(s) as desired.\n      // (see https://github.com/firebase/firepad/issues/209).\n      cm.setCursor({ line: cursorPos.line, ch: 0 });\n    } else {\n      cm.deleteH(1, \"char\");\n    }\n  };\n\n  RichTextCodeMirror.prototype.indent = function() {\n    this.updateLineAttributesForSelection(function(attributes) {\n      var indent = attributes[ATTR.LINE_INDENT];\n      var listType = attributes[ATTR.LIST_TYPE];\n\n      if (indent) {\n        attributes[ATTR.LINE_INDENT]++;\n      } else if (listType) {\n        // lists are implicitly already indented once.\n        attributes[ATTR.LINE_INDENT] = 2;\n      } else {\n        attributes[ATTR.LINE_INDENT] = 1;\n      }\n    });\n  };\n\n  RichTextCodeMirror.prototype.unindent = function() {\n    this.updateLineAttributesForSelection(function(attributes) {\n      var indent = attributes[ATTR.LINE_INDENT];\n\n      if (indent && indent > 1) {\n        attributes[ATTR.LINE_INDENT] = indent - 1;\n      } else {\n        delete attributes[ATTR.LIST_TYPE];\n        delete attributes[ATTR.LINE_INDENT];\n      }\n    });\n  };\n\n  RichTextCodeMirror.prototype.getText = function() {\n    return this.codeMirror.getValue().replace(new RegExp(LineSentinelCharacter, \"g\"), '');\n  };\n\n  RichTextCodeMirror.prototype.areLineSentinelCharacters_ = function(text) {\n    for(var i = 0; i < text.length; i++) {\n      if (text[i] !== LineSentinelCharacter)\n        return false;\n    }\n    return true;\n  };\n\n  /**\n   * Used for the annotations we store in our AnnotationList.\n   * @param attributes\n   * @constructor\n   */\n  function RichTextAnnotation(attributes) {\n    this.attributes = attributes || { };\n  }\n\n  RichTextAnnotation.prototype.equals = function(other) {\n    if (!(other instanceof RichTextAnnotation)) {\n      return false;\n    }\n    var attr;\n    for(attr in this.attributes) {\n      if (other.attributes[attr] !== this.attributes[attr]) {\n        return false;\n      }\n    }\n\n    for(attr in other.attributes) {\n      if (other.attributes[attr] !== this.attributes[attr]) {\n        return false;\n      }\n    }\n\n    return true;\n  };\n\n  function emptyAttributes(attributes) {\n    for(var attr in attributes) {\n      return false;\n    }\n    return true;\n  }\n\n  // Bind a method to an object, so it doesn't matter whether you call\n  // object.method() directly or pass object.method as a reference to another\n  // function.\n  function bind (obj, method) {\n    var fn = obj[method];\n    obj[method] = function () {\n      fn.apply(obj, arguments);\n    };\n  }\n\n  return RichTextCodeMirror;\n})();\n\nvar firepad = firepad || { };\n\n// TODO: Can this derive from CodeMirrorAdapter or similar?\nfirepad.RichTextCodeMirrorAdapter = (function () {\n  'use strict';\n\n  var TextOperation = firepad.TextOperation;\n  var WrappedOperation = firepad.WrappedOperation;\n  var Cursor = firepad.Cursor;\n\n  function RichTextCodeMirrorAdapter (rtcm) {\n    this.rtcm = rtcm;\n    this.cm = rtcm.codeMirror;\n\n    bind(this, 'onChange');\n    bind(this, 'onAttributesChange');\n    bind(this, 'onCursorActivity');\n    bind(this, 'onFocus');\n    bind(this, 'onBlur');\n\n    this.rtcm.on('change', this.onChange);\n    this.rtcm.on('attributesChange', this.onAttributesChange);\n    this.cm.on('cursorActivity', this.onCursorActivity);\n    this.cm.on('focus', this.onFocus);\n    this.cm.on('blur', this.onBlur);\n  }\n\n  // Removes all event listeners from the CodeMirror instance.\n  RichTextCodeMirrorAdapter.prototype.detach = function () {\n    this.rtcm.off('change', this.onChange);\n    this.rtcm.off('attributesChange', this.onAttributesChange);\n\n    this.cm.off('cursorActivity', this.onCursorActivity);\n    this.cm.off('focus', this.onFocus);\n    this.cm.off('blur', this.onBlur);\n  };\n\n  function cmpPos (a, b) {\n    if (a.line < b.line) { return -1; }\n    if (a.line > b.line) { return 1; }\n    if (a.ch < b.ch)     { return -1; }\n    if (a.ch > b.ch)     { return 1; }\n    return 0;\n  }\n  function posEq (a, b) { return cmpPos(a, b) === 0; }\n  function posLe (a, b) { return cmpPos(a, b) <= 0; }\n\n  function codemirrorLength (cm) {\n    var lastLine = cm.lineCount() - 1;\n    return cm.indexFromPos({line: lastLine, ch: cm.getLine(lastLine).length});\n  }\n\n  // Converts a CodeMirror change object into a TextOperation and its inverse\n  // and returns them as a two-element array.\n  RichTextCodeMirrorAdapter.operationFromCodeMirrorChanges = function (changes, cm) {\n    // Approach: Replay the changes, beginning with the most recent one, and\n    // construct the operation and its inverse. We have to convert the position\n    // in the pre-change coordinate system to an index. We have a method to\n    // convert a position in the coordinate system after all changes to an index,\n    // namely CodeMirror's `indexFromPos` method. We can use the information of\n    // a single change object to convert a post-change coordinate system to a\n    // pre-change coordinate system. We can now proceed inductively to get a\n    // pre-change coordinate system for all changes in the linked list.\n    // A disadvantage of this approach is its complexity `O(n^2)` in the length\n    // of the linked list of changes.\n\n    var docEndLength = codemirrorLength(cm);\n    var operation    = new TextOperation().retain(docEndLength);\n    var inverse      = new TextOperation().retain(docEndLength);\n\n    for (var i = changes.length - 1; i >= 0; i--) {\n      var change = changes[i];\n      var fromIndex = change.start;\n      var restLength = docEndLength - fromIndex - change.text.length;\n\n      operation = new TextOperation()\n          .retain(fromIndex)\n          ['delete'](change.removed.length)\n          .insert(change.text, change.attributes)\n          .retain(restLength)\n          .compose(operation);\n\n      inverse = inverse.compose(new TextOperation()\n          .retain(fromIndex)\n          ['delete'](change.text.length)\n          .insert(change.removed, change.removedAttributes)\n          .retain(restLength)\n      );\n\n      docEndLength += change.removed.length - change.text.length;\n    }\n\n    return [operation, inverse];\n  };\n\n  // Converts an attributes changed object to an operation and its inverse.\n  RichTextCodeMirrorAdapter.operationFromAttributesChanges = function (changes, cm) {\n    var docEndLength = codemirrorLength(cm);\n\n    var operation = new TextOperation(), inverse = new TextOperation();\n    var pos = 0;\n\n    for (var i = 0; i < changes.length; i++) {\n      var change = changes[i];\n      var toRetain = change.start - pos;\n      assert(toRetain >= 0); // changes should be in order and non-overlapping.\n      operation.retain(toRetain);\n      inverse.retain(toRetain);\n\n      var length = change.end - change.start;\n      operation.retain(length, change.attributes);\n      inverse.retain(length, change.attributesInverse);\n      pos = change.start + length;\n    }\n\n    operation.retain(docEndLength - pos);\n    inverse.retain(docEndLength - pos);\n\n    return [operation, inverse];\n  };\n\n  RichTextCodeMirrorAdapter.prototype.registerCallbacks = function (cb) {\n    this.callbacks = cb;\n  };\n\n  RichTextCodeMirrorAdapter.prototype.onChange = function (_, changes) {\n    if (changes[0].origin !== 'RTCMADAPTER') {\n      var pair = RichTextCodeMirrorAdapter.operationFromCodeMirrorChanges(changes, this.cm);\n      this.trigger('change', pair[0], pair[1]);\n    }\n  };\n\n  RichTextCodeMirrorAdapter.prototype.onAttributesChange = function (_, changes) {\n    if (changes[0].origin !== 'RTCMADAPTER') {\n      var pair = RichTextCodeMirrorAdapter.operationFromAttributesChanges(changes, this.cm);\n      this.trigger('change', pair[0], pair[1]);\n    }\n  };\n\n  RichTextCodeMirrorAdapter.prototype.onCursorActivity = function () {\n    // We want to push cursor changes to Firebase AFTER edits to the history,\n    // because the cursor coordinates will already be in post-change units.\n    // Sleeping for 1ms ensures that sendCursor happens after sendOperation.\n    var self = this;\n    setTimeout(function() {\n      self.trigger('cursorActivity');\n    }, 1);\n  }\n\n  RichTextCodeMirrorAdapter.prototype.onFocus = function () {\n    this.trigger('focus');\n  };\n\n  RichTextCodeMirrorAdapter.prototype.onBlur = function () {\n    if (!this.cm.somethingSelected()) { this.trigger('blur'); }\n  };\n\n  RichTextCodeMirrorAdapter.prototype.getValue = function () {\n    return this.cm.getValue();\n  };\n\n  RichTextCodeMirrorAdapter.prototype.getCursor = function () {\n    var cm = this.cm;\n    var cursorPos = cm.getCursor();\n    var position = cm.indexFromPos(cursorPos);\n    var selectionEnd;\n    if (cm.somethingSelected()) {\n      var startPos = cm.getCursor(true);\n      var selectionEndPos = posEq(cursorPos, startPos) ? cm.getCursor(false) : startPos;\n      selectionEnd = cm.indexFromPos(selectionEndPos);\n    } else {\n      selectionEnd = position;\n    }\n\n    return new Cursor(position, selectionEnd);\n  };\n\n  RichTextCodeMirrorAdapter.prototype.setCursor = function (cursor) {\n    this.cm.setSelection(\n        this.cm.posFromIndex(cursor.position),\n        this.cm.posFromIndex(cursor.selectionEnd)\n    );\n  };\n\n  RichTextCodeMirrorAdapter.prototype.addStyleRule = function(css) {\n    if (typeof document === \"undefined\" || document === null) {\n      return;\n    }\n    if (!this.addedStyleRules) {\n      this.addedStyleRules = {};\n      var styleElement = document.createElement('style');\n      document.documentElement.getElementsByTagName('head')[0].appendChild(styleElement);\n      this.addedStyleSheet = styleElement.sheet;\n    }\n    if (this.addedStyleRules[css]) {\n      return;\n    }\n    this.addedStyleRules[css] = true;\n    return this.addedStyleSheet.insertRule(css, 0);\n  };\n\n  RichTextCodeMirrorAdapter.prototype.setOtherCursor = function (cursor, color, clientId) {\n    var cursorPos = this.cm.posFromIndex(cursor.position);\n    if (typeof color !== 'string' || !color.match(/^#[a-fA-F0-9]{3,6}$/)) {\n      return;\n    }\n    var end = this.rtcm.end();\n    if (typeof cursor !== 'object' || typeof cursor.position !== 'number' || typeof cursor.selectionEnd !== 'number') {\n      return;\n    }\n    if (cursor.position < 0 || cursor.position > end || cursor.selectionEnd < 0 || cursor.selectionEnd > end) {\n      return;\n    }\n\n    if (cursor.position === cursor.selectionEnd) {\n      // show cursor\n      var cursorCoords = this.cm.cursorCoords(cursorPos);\n      var cursorEl = document.createElement('span');\n      cursorEl.className = 'other-client';\n      cursorEl.style.borderLeftWidth = '2px';\n      cursorEl.style.borderLeftStyle = 'solid';\n      cursorEl.style.borderLeftColor = color;\n      cursorEl.style.marginLeft = cursorEl.style.marginRight = '-1px';\n      cursorEl.style.height = (cursorCoords.bottom - cursorCoords.top) * 0.9 + 'px';\n      cursorEl.setAttribute('data-clientid', clientId);\n      cursorEl.style.zIndex = 0;\n\n      return this.cm.setBookmark(cursorPos, { widget: cursorEl, insertLeft: true });\n    } else {\n      // show selection\n      var selectionClassName = 'selection-' + color.replace('#', '');\n      var transparency = 0.4;\n      var rule = '.' + selectionClassName + ' {' +\n        // fallback for browsers w/out rgba (rgb w/ transparency)\n        ' background: ' + hex2rgb(color) + ';\\n' +\n        // rule with alpha takes precedence if supported\n        ' background: ' + hex2rgb(color, transparency) + ';' +\n      '}';\n      this.addStyleRule(rule);\n\n      var fromPos, toPos;\n      if (cursor.selectionEnd > cursor.position) {\n        fromPos = cursorPos;\n        toPos = this.cm.posFromIndex(cursor.selectionEnd);\n      } else {\n        fromPos = this.cm.posFromIndex(cursor.selectionEnd);\n        toPos = cursorPos;\n      }\n      return this.cm.markText(fromPos, toPos, {\n        className: selectionClassName\n      });\n    }\n  };\n\n  RichTextCodeMirrorAdapter.prototype.trigger = function (event) {\n    var args = Array.prototype.slice.call(arguments, 1);\n    var action = this.callbacks && this.callbacks[event];\n    if (action) { action.apply(this, args); }\n  };\n\n  // Apply an operation to a CodeMirror instance.\n  RichTextCodeMirrorAdapter.prototype.applyOperation = function (operation) {\n    // HACK: If there are a lot of operations; hide CodeMirror so that it doesn't re-render constantly.\n    if (operation.ops.length > 10)\n      this.rtcm.codeMirror.getWrapperElement().setAttribute('style', 'display: none');\n\n    var ops = operation.ops;\n    var index = 0; // holds the current index into CodeMirror's content\n    for (var i = 0, l = ops.length; i < l; i++) {\n      var op = ops[i];\n      if (op.isRetain()) {\n        if (!emptyAttributes(op.attributes)) {\n          this.rtcm.updateTextAttributes(index, index + op.chars, function(attributes) {\n            for(var attr in op.attributes) {\n              if (op.attributes[attr] === false) {\n                delete attributes[attr];\n              } else {\n                attributes[attr] = op.attributes[attr];\n              }\n            }\n          }, 'RTCMADAPTER', /*doLineAttributes=*/true);\n        }\n        index += op.chars;\n      } else if (op.isInsert()) {\n        this.rtcm.insertText(index, op.text, op.attributes, 'RTCMADAPTER');\n        index += op.text.length;\n      } else if (op.isDelete()) {\n        this.rtcm.removeText(index, index + op.chars, 'RTCMADAPTER');\n      }\n    }\n\n    if (operation.ops.length > 10) {\n      this.rtcm.codeMirror.getWrapperElement().setAttribute('style', '');\n      this.rtcm.codeMirror.refresh();\n    }\n  };\n\n  RichTextCodeMirrorAdapter.prototype.registerUndo = function (undoFn) {\n    this.cm.undo = undoFn;\n  };\n\n  RichTextCodeMirrorAdapter.prototype.registerRedo = function (redoFn) {\n    this.cm.redo = redoFn;\n  };\n\n  RichTextCodeMirrorAdapter.prototype.invertOperation = function(operation) {\n    var pos = 0, cm = this.rtcm.codeMirror, spans, i;\n    var inverse = new TextOperation();\n    for(var opIndex = 0; opIndex < operation.wrapped.ops.length; opIndex++) {\n      var op = operation.wrapped.ops[opIndex];\n      if (op.isRetain()) {\n        if (emptyAttributes(op.attributes)) {\n          inverse.retain(op.chars);\n          pos += op.chars;\n        } else {\n          spans = this.rtcm.getAttributeSpans(pos, pos + op.chars);\n          for(i = 0; i < spans.length; i++) {\n            var inverseAttributes = { };\n            for(var attr in op.attributes) {\n              var opValue = op.attributes[attr];\n              var curValue = spans[i].attributes[attr];\n\n              if (opValue === false) {\n                if (curValue) {\n                  inverseAttributes[attr] = curValue;\n                }\n              } else if (opValue !== curValue) {\n                inverseAttributes[attr] = curValue || false;\n              }\n            }\n\n            inverse.retain(spans[i].length, inverseAttributes);\n            pos += spans[i].length;\n          }\n        }\n      } else if (op.isInsert()) {\n        inverse['delete'](op.text.length);\n      } else if (op.isDelete()) {\n        var text = cm.getRange(cm.posFromIndex(pos), cm.posFromIndex(pos + op.chars));\n\n        spans = this.rtcm.getAttributeSpans(pos, pos + op.chars);\n        var delTextPos = 0;\n        for(i = 0; i < spans.length; i++) {\n          inverse.insert(text.substr(delTextPos, spans[i].length), spans[i].attributes);\n          delTextPos += spans[i].length;\n        }\n\n        pos += op.chars;\n      }\n    }\n\n    return new WrappedOperation(inverse, operation.meta.invert());\n  };\n\n  // Throws an error if the first argument is falsy. Useful for debugging.\n  function assert (b, msg) {\n    if (!b) {\n      throw new Error(msg || \"assertion error\");\n    }\n  }\n\n  // Bind a method to an object, so it doesn't matter whether you call\n  // object.method() directly or pass object.method as a reference to another\n  // function.\n  function bind (obj, method) {\n    var fn = obj[method];\n    obj[method] = function () {\n      fn.apply(obj, arguments);\n    };\n  }\n\n  function emptyAttributes(attrs) {\n    for(var attr in attrs) {\n      return false;\n    }\n    return true;\n  }\n\n  function hex2rgb (hex, transparency) {\n    if (typeof hex !== 'string') {\n      throw new TypeError('Expected a string');\n    }\n    hex = hex.replace(/^#/, '');\n    if (hex.length === 3) {\n      hex = hex[0] + hex[0] + hex[1] + hex[1] + hex[2] + hex[2];\n    }\n    var num = parseInt(hex, 16);\n    var rgb = [num >> 16, num >> 8 & 255, num & 255];\n    var type = 'rgb';\n    if (exists(transparency)) {\n      type = 'rgba';\n      rgb.push(transparency);\n    }\n    // rgb(r, g, b) or rgba(r, g, b, t)\n    return type + '(' + rgb.join(',') + ')';\n  }\n\n  function exists (val) {\n    return val !== null && val !== undefined;\n  }\n\n  return RichTextCodeMirrorAdapter;\n}());\n\nvar firepad = firepad || { };\n\n/**\n * Immutable object to represent text formatting.  Formatting can be modified by chaining method calls.\n *\n * @constructor\n * @type {Function}\n */\nfirepad.Formatting = (function() {\n  var ATTR = firepad.AttributeConstants;\n\n  function Formatting(attributes) {\n    // Allow calling without new.\n    if (!(this instanceof Formatting)) { return new Formatting(attributes); }\n\n    this.attributes = attributes || { };\n  }\n\n  Formatting.prototype.cloneWithNewAttribute_ = function(attribute, value) {\n    var attributes = { };\n\n    // Copy existing.\n    for(var attr in this.attributes) {\n      attributes[attr] = this.attributes[attr];\n    }\n\n    // Add new one.\n    if (value === false) {\n      delete attributes[attribute];\n    } else {\n      attributes[attribute] = value;\n    }\n\n    return new Formatting(attributes);\n  };\n\n  Formatting.prototype.bold = function(val) {\n    return this.cloneWithNewAttribute_(ATTR.BOLD, val);\n  };\n\n  Formatting.prototype.italic = function(val) {\n    return this.cloneWithNewAttribute_(ATTR.ITALIC, val);\n  };\n\n  Formatting.prototype.underline = function(val) {\n    return this.cloneWithNewAttribute_(ATTR.UNDERLINE, val);\n  };\n\n  Formatting.prototype.strike = function(val) {\n    return this.cloneWithNewAttribute_(ATTR.STRIKE, val);\n  };\n\n  Formatting.prototype.font = function(font) {\n    return this.cloneWithNewAttribute_(ATTR.FONT, font);\n  };\n\n  Formatting.prototype.fontSize = function(size) {\n    return this.cloneWithNewAttribute_(ATTR.FONT_SIZE, size);\n  };\n\n  Formatting.prototype.color = function(color) {\n    return this.cloneWithNewAttribute_(ATTR.COLOR, color);\n  };\n\n  Formatting.prototype.backgroundColor = function(color) {\n    return this.cloneWithNewAttribute_(ATTR.BACKGROUND_COLOR, color);\n  };\n\n  return Formatting;\n})();\n\nvar firepad = firepad || { };\n\n/**\n * Object to represent Formatted text.\n *\n * @type {Function}\n */\nfirepad.Text = (function() {\n  function Text(text, formatting) {\n    // Allow calling without new.\n    if (!(this instanceof Text)) { return new Text(text, formatting); }\n\n    this.text = text;\n    this.formatting = formatting || firepad.Formatting();\n  }\n\n  return Text;\n})();\n\nvar firepad = firepad || { };\n\n/**\n * Immutable object to represent line formatting.  Formatting can be modified by chaining method calls.\n *\n * @constructor\n * @type {Function}\n */\nfirepad.LineFormatting = (function() {\n  var ATTR = firepad.AttributeConstants;\n\n  function LineFormatting(attributes) {\n    // Allow calling without new.\n    if (!(this instanceof LineFormatting)) { return new LineFormatting(attributes); }\n\n    this.attributes = attributes || { };\n    this.attributes[ATTR.LINE_SENTINEL] = true;\n  }\n\n  LineFormatting.LIST_TYPE = {\n    NONE: false,\n    ORDERED: 'o',\n    UNORDERED: 'u',\n    TODO: 't',\n    TODOCHECKED: 'tc'\n  };\n\n  LineFormatting.prototype.cloneWithNewAttribute_ = function(attribute, value) {\n    var attributes = { };\n\n    // Copy existing.\n    for(var attr in this.attributes) {\n      attributes[attr] = this.attributes[attr];\n    }\n\n    // Add new one.\n    if (value === false) {\n      delete attributes[attribute];\n    } else {\n      attributes[attribute] = value;\n    }\n\n    return new LineFormatting(attributes);\n  };\n\n  LineFormatting.prototype.indent = function(indent) {\n    return this.cloneWithNewAttribute_(ATTR.LINE_INDENT, indent);\n  };\n\n  LineFormatting.prototype.align = function(align) {\n    return this.cloneWithNewAttribute_(ATTR.LINE_ALIGN, align);\n  };\n\n  LineFormatting.prototype.listItem = function(val) {\n    firepad.utils.assert(val === false || val === 'u' || val === 'o' || val === 't' || val === 'tc');\n    return this.cloneWithNewAttribute_(ATTR.LIST_TYPE, val);\n  };\n\n  LineFormatting.prototype.getIndent = function() {\n    return this.attributes[ATTR.LINE_INDENT] || 0;\n  };\n\n  LineFormatting.prototype.getAlign = function() {\n    return this.attributes[ATTR.LINE_ALIGN] || 0;\n  };\n\n  LineFormatting.prototype.getListItem = function() {\n    return this.attributes[ATTR.LIST_TYPE] || false;\n  };\n\n  return LineFormatting;\n})();\n\nvar firepad = firepad || { };\n\n/**\n * Object to represent Formatted line.\n *\n * @type {Function}\n */\nfirepad.Line = (function() {\n  function Line(textPieces, formatting) {\n    // Allow calling without new.\n    if (!(this instanceof Line)) { return new Line(textPieces, formatting); }\n\n    if(Object.prototype.toString.call(textPieces) !== '[object Array]') {\n      if (typeof textPieces === 'undefined') {\n        textPieces = [];\n      } else {\n        textPieces = [textPieces];\n      }\n    }\n\n    this.textPieces = textPieces;\n    this.formatting = formatting || firepad.LineFormatting();\n  }\n\n  return Line;\n})();\n\nvar firepad = firepad || { };\n\n/**\n * Helper to parse html into Firepad-compatible lines / text.\n * @type {*}\n */\nfirepad.ParseHtml = (function () {\n  var LIST_TYPE = firepad.LineFormatting.LIST_TYPE;\n\n  /**\n   * Represents the current parse state as an immutable structure.  To create a new ParseState, use\n   * the withXXX methods.\n   *\n   * @param opt_listType\n   * @param opt_lineFormatting\n   * @param opt_textFormatting\n   * @constructor\n   */\n  function ParseState(opt_listType, opt_lineFormatting, opt_textFormatting) {\n    this.listType = opt_listType || LIST_TYPE.UNORDERED;\n    this.lineFormatting = opt_lineFormatting || firepad.LineFormatting();\n    this.textFormatting = opt_textFormatting || firepad.Formatting();\n  }\n\n  ParseState.prototype.withTextFormatting = function(textFormatting) {\n    return new ParseState(this.listType, this.lineFormatting, textFormatting);\n  };\n\n  ParseState.prototype.withLineFormatting = function(lineFormatting) {\n    return new ParseState(this.listType, lineFormatting, this.textFormatting);\n  };\n\n  ParseState.prototype.withListType = function(listType) {\n    return new ParseState(listType, this.lineFormatting, this.textFormatting);\n  };\n\n  ParseState.prototype.withIncreasedIndent = function() {\n    var lineFormatting = this.lineFormatting.indent(this.lineFormatting.getIndent() + 1);\n    return new ParseState(this.listType, lineFormatting, this.textFormatting);\n  };\n\n  ParseState.prototype.withAlign = function(align) {\n    var lineFormatting = this.lineFormatting.align(align);\n    return new ParseState(this.listType, lineFormatting, this.textFormatting);\n  };\n\n  /**\n   * Mutable structure representing the current parse output.\n   * @constructor\n   */\n  function ParseOutput() {\n    this.lines = [ ];\n    this.currentLine = [];\n    this.currentLineListItemType = null;\n  }\n\n  ParseOutput.prototype.newlineIfNonEmpty = function(state) {\n    this.cleanLine_();\n    if (this.currentLine.length > 0) {\n      this.newline(state);\n    }\n  };\n\n  ParseOutput.prototype.newlineIfNonEmptyOrListItem = function(state) {\n    this.cleanLine_();\n    if (this.currentLine.length > 0 || this.currentLineListItemType !== null) {\n      this.newline(state);\n    }\n  };\n\n  ParseOutput.prototype.newline = function(state) {\n    this.cleanLine_();\n    var lineFormatting = state.lineFormatting;\n    if (this.currentLineListItemType !== null) {\n      lineFormatting = lineFormatting.listItem(this.currentLineListItemType);\n      this.currentLineListItemType = null;\n    }\n\n    this.lines.push(firepad.Line(this.currentLine, lineFormatting));\n    this.currentLine = [];\n  };\n\n  ParseOutput.prototype.makeListItem = function(type) {\n    this.currentLineListItemType = type;\n  };\n\n  ParseOutput.prototype.cleanLine_ = function() {\n    // Kinda' a hack, but we remove leading and trailing spaces (since these aren't significant in html) and\n    // replaces nbsp's with normal spaces.\n    if (this.currentLine.length > 0) {\n      var last = this.currentLine.length - 1;\n      this.currentLine[0].text = this.currentLine[0].text.replace(/^ +/, '');\n      this.currentLine[last].text = this.currentLine[last].text.replace(/ +$/g, '');\n      for(var i = 0; i < this.currentLine.length; i++) {\n        this.currentLine[i].text = this.currentLine[i].text.replace(/\\u00a0/g, ' ');\n      }\n    }\n    // If after stripping trailing whitespace, there's nothing left, clear currentLine out.\n    if (this.currentLine.length === 1 && this.currentLine[0].text === '') {\n      this.currentLine = [];\n    }\n  };\n\n  var entityManager_;\n  function parseHtml(html, entityManager) {\n    // Create DIV with HTML (as a convenient way to parse it).\n    var div = (firepad.document || document).createElement('div');\n    div.innerHTML = html;\n\n    // HACK until I refactor this.\n    entityManager_ = entityManager;\n\n    var output = new ParseOutput();\n    var state = new ParseState();\n    parseNode(div, state, output);\n\n    return output.lines;\n  }\n\n  // Fix IE8.\n  var Node = Node || {\n    ELEMENT_NODE: 1,\n    TEXT_NODE: 3\n  };\n\n  function parseNode(node, state, output) {\n    // Give entity manager first crack at it.\n    if (node.nodeType === Node.ELEMENT_NODE) {\n      var entity = entityManager_.fromElement(node);\n      if (entity) {\n        output.currentLine.push(new firepad.Text(\n            firepad.sentinelConstants.ENTITY_SENTINEL_CHARACTER,\n            new firepad.Formatting(entity.toAttributes())\n        ));\n        return;\n      }\n    }\n\n    switch (node.nodeType) {\n      case Node.TEXT_NODE:\n        // This probably isn't exactly right, but mostly works...\n        var text = node.nodeValue.replace(/[ \\n\\t]+/g, ' ');\n        output.currentLine.push(firepad.Text(text, state.textFormatting));\n        break;\n      case Node.ELEMENT_NODE:\n        var style = node.getAttribute('style') || '';\n        state = parseStyle(state, style);\n        switch (node.nodeName.toLowerCase()) {\n          case 'div':\n          case 'h1':\n          case 'h2':\n          case 'h3':\n          case 'p':\n            output.newlineIfNonEmpty(state);\n            parseChildren(node, state, output);\n            output.newlineIfNonEmpty(state);\n            break;\n          case 'center':\n            state = state.withAlign('center');\n            output.newlineIfNonEmpty(state);\n            parseChildren(node, state.withAlign('center'), output);\n            output.newlineIfNonEmpty(state);\n            break;\n          case 'b':\n          case 'strong':\n            parseChildren(node, state.withTextFormatting(state.textFormatting.bold(true)), output);\n            break;\n          case 'u':\n            parseChildren(node, state.withTextFormatting(state.textFormatting.underline(true)), output);\n            break;\n          case 'i':\n          case 'em':\n            parseChildren(node, state.withTextFormatting(state.textFormatting.italic(true)), output);\n            break;\n          case 's':\n            parseChildren(node, state.withTextFormatting(state.textFormatting.strike(true)), output);\n            break;\n          case 'font':\n            var face = node.getAttribute('face');\n            var color = node.getAttribute('color');\n            var size = parseInt(node.getAttribute('size'));\n            if (face) { state = state.withTextFormatting(state.textFormatting.font(face)); }\n            if (color) { state = state.withTextFormatting(state.textFormatting.color(color)); }\n            if (size) { state = state.withTextFormatting(state.textFormatting.fontSize(size)); }\n            parseChildren(node, state, output);\n            break;\n          case 'br':\n            output.newline(state);\n            break;\n          case 'ul':\n            output.newlineIfNonEmptyOrListItem(state);\n            var listType = node.getAttribute('class') === 'firepad-todo' ? LIST_TYPE.TODO : LIST_TYPE.UNORDERED;\n            parseChildren(node, state.withListType(listType).withIncreasedIndent(), output);\n            output.newlineIfNonEmpty(state);\n            break;\n          case 'ol':\n            output.newlineIfNonEmptyOrListItem(state);\n            parseChildren(node, state.withListType(LIST_TYPE.ORDERED).withIncreasedIndent(), output);\n            output.newlineIfNonEmpty(state);\n            break;\n          case 'li':\n            parseListItem(node, state, output);\n            break;\n          case 'style': // ignore.\n            break;\n          default:\n            parseChildren(node, state, output);\n            break;\n        }\n        break;\n      default:\n        // Ignore other nodes (comments, etc.)\n        break;\n    }\n  }\n\n  function parseChildren(node, state, output) {\n    if (node.hasChildNodes()) {\n      for(var i = 0; i < node.childNodes.length; i++) {\n        parseNode(node.childNodes[i], state, output);\n      }\n    }\n  }\n\n  function parseListItem(node, state, output) {\n    // Note: <li> is weird:\n    // * Only the first line in the <li> tag should be a list item (i.e. with a bullet or number next to it).\n    // * <li></li> should create an empty list item line; <li><ol><li></li></ol></li> should create two.\n\n    output.newlineIfNonEmptyOrListItem(state);\n\n    var listType = (node.getAttribute('class') === 'firepad-checked') ? LIST_TYPE.TODOCHECKED : state.listType;\n    output.makeListItem(listType);\n    var oldLine = output.currentLine;\n\n    parseChildren(node, state, output);\n\n    if (oldLine === output.currentLine || output.currentLine.length > 0) {\n      output.newline(state);\n    }\n  }\n\n  function parseStyle(state, styleString) {\n    var textFormatting = state.textFormatting;\n    var lineFormatting = state.lineFormatting;\n    var styles = styleString.split(';');\n    for(var i = 0; i < styles.length; i++) {\n      var stylePieces = styles[i].split(':');\n      if (stylePieces.length !== 2)\n        continue;\n      var prop = firepad.utils.trim(stylePieces[0]).toLowerCase();\n      var val = firepad.utils.trim(stylePieces[1]).toLowerCase();\n      switch (prop) {\n        case 'text-decoration':\n          var underline = val.indexOf('underline') >= 0;\n          var strike = val.indexOf('line-through') >= 0;\n          textFormatting = textFormatting.underline(underline).strike(strike);\n          break;\n        case 'font-weight':\n          var bold = (val === 'bold') || parseInt(val) >= 600;\n          textFormatting = textFormatting.bold(bold);\n          break;\n        case 'font-style':\n          var italic = (val === 'italic' || val === 'oblique');\n          textFormatting = textFormatting.italic(italic);\n          break;\n        case 'color':\n          textFormatting = textFormatting.color(val);\n          break;\n        case 'background-color':\n          textFormatting = textFormatting.backgroundColor(val);\n          break;\n        case 'text-align':\n          lineFormatting = lineFormatting.align(val);\n          break;\n        case 'font-size':\n          var size = null;\n          var allowedValues = ['px','pt','%','em','xx-small','x-small','small','medium','large','x-large','xx-large','smaller','larger'];\n          if (firepad.utils.stringEndsWith(val, allowedValues)) {\n            size = val;\n          }\n          else if (parseInt(val)) {\n            size = parseInt(val)+'px';\n          }\n          if (size) {\n            textFormatting = textFormatting.fontSize(size);\n          }\n          break;\n        case 'font-family':\n          var font = firepad.utils.trim(val.split(',')[0]); // get first font.\n          font = font.replace(/['\"]/g, ''); // remove quotes.\n          font = font.replace(/\\w\\S*/g, function(txt){return txt.charAt(0).toUpperCase() + txt.substr(1).toLowerCase() });\n          textFormatting = textFormatting.font(font);\n          break;\n      }\n    }\n    return state.withLineFormatting(lineFormatting).withTextFormatting(textFormatting);\n  }\n\n  return parseHtml;\n})();\n\nvar firepad = firepad || { };\n\n/**\n * Helper to turn Firebase contents into HMTL.\n * Takes a doc and an entity manager\n */\nfirepad.SerializeHtml = (function () {\n\n  var utils      = firepad.utils;\n  var ATTR       = firepad.AttributeConstants;\n  var LIST_TYPE  = firepad.LineFormatting.LIST_TYPE;\n  var TODO_STYLE = '<style>ul.firepad-todo { list-style: none; margin-left: 0; padding-left: 0; } ul.firepad-todo > li { padding-left: 1em; text-indent: -1em; } ul.firepad-todo > li:before { content: \"\\\\2610\"; padding-right: 5px; } ul.firepad-todo > li.firepad-checked:before { content: \"\\\\2611\"; padding-right: 5px; }</style>\\n';\n\n  function open(listType) {\n    return (listType === LIST_TYPE.ORDERED) ? '<ol>' :\n           (listType === LIST_TYPE.UNORDERED) ? '<ul>' :\n           '<ul class=\"firepad-todo\">';\n  }\n\n  function close(listType) {\n    return (listType === LIST_TYPE.ORDERED) ? '</ol>' : '</ul>';\n  }\n\n  function compatibleListType(l1, l2) {\n    return (l1 === l2) ||\n        (l1 === LIST_TYPE.TODO && l2 === LIST_TYPE.TODOCHECKED) ||\n        (l1 === LIST_TYPE.TODOCHECKED && l2 === LIST_TYPE.TODO);\n  }\n\n  function textToHtml(text) {\n    return text.replace(/&/g, '&amp;')\n        .replace(/\"/g, '&quot;')\n        .replace(/'/g, '&#39;')\n        .replace(/</g, '&lt;')\n        .replace(/>/g, '&gt;')\n        .replace(/\\u00a0/g, '&nbsp;')\n  }\n\n  function serializeHtml(doc, entityManager) {\n    var html = '';\n    var newLine = true;\n    var listTypeStack = [];\n    var inListItem = false;\n    var firstLine = true;\n    var emptyLine = true;\n    var i = 0, op = doc.ops[i];\n    var usesTodo = false;\n    while(op) {\n      utils.assert(op.isInsert());\n      var attrs = op.attributes;\n\n      if (newLine) {\n        newLine = false;\n\n        var indent = 0, listType = null, lineAlign = 'left';\n        if (ATTR.LINE_SENTINEL in attrs) {\n          indent = attrs[ATTR.LINE_INDENT] || 0;\n          listType = attrs[ATTR.LIST_TYPE] || null;\n          lineAlign = attrs[ATTR.LINE_ALIGN] || 'left';\n        }\n        if (listType) {\n          indent = indent || 1; // lists are automatically indented at least 1.\n        }\n\n        if (inListItem) {\n          html += '</li>';\n          inListItem = false;\n        } else if (!firstLine) {\n          if (emptyLine) {\n            html += '<br/>';\n          }\n          html += '</div>';\n        }\n        firstLine = false;\n\n        // Close any extra lists.\n        utils.assert(indent >= 0, \"Indent must not be negative.\");\n        while (listTypeStack.length > indent ||\n            (indent === listTypeStack.length && listType !== null && !compatibleListType(listType, listTypeStack[listTypeStack.length - 1]))) {\n          html += close(listTypeStack.pop());\n        }\n\n        // Open any needed lists.\n        while (listTypeStack.length < indent) {\n          var toOpen = listType || LIST_TYPE.UNORDERED; // default to unordered lists for indenting non-list-item lines.\n          usesTodo = listType == LIST_TYPE.TODO || listType == LIST_TYPE.TODOCHECKED || usesTodo;\n          html += open(toOpen);\n          listTypeStack.push(toOpen);\n        }\n\n        var style = (lineAlign !== 'left') ? ' style=\"text-align:' + lineAlign + '\"': '';\n        if (listType) {\n          var clazz = '';\n          switch (listType)\n          {\n            case LIST_TYPE.TODOCHECKED:\n              clazz = ' class=\"firepad-checked\"';\n              break;\n            case LIST_TYPE.TODO:\n              clazz = ' class=\"firepad-unchecked\"';\n              break;\n          }\n          html += \"<li\" + clazz + style + \">\";\n          inListItem = true;\n        } else {\n          // start line div.\n          html += '<div' + style + '>';\n        }\n        emptyLine = true;\n      }\n\n      if (ATTR.LINE_SENTINEL in attrs) {\n        op = doc.ops[++i];\n        continue;\n      }\n\n      if (ATTR.ENTITY_SENTINEL in attrs) {\n        for(var j = 0; j < op.text.length; j++) {\n          var entity = firepad.Entity.fromAttributes(attrs);\n          var element = entityManager.exportToElement(entity);\n          html += element.outerHTML;\n        }\n\n        op = doc.ops[++i];\n        continue;\n      }\n\n      var prefix = '', suffix = '';\n      for(var attr in attrs) {\n        var value = attrs[attr];\n        var start, end;\n        if (attr === ATTR.BOLD || attr === ATTR.ITALIC || attr === ATTR.UNDERLINE || attr === ATTR.STRIKE) {\n          utils.assert(value === true);\n          start = end = attr;\n        } else if (attr === ATTR.FONT_SIZE) {\n          start = 'span style=\"font-size: ' + value;\n          start += (typeof value !== \"string\" || value.indexOf(\"px\", value.length - 2) === -1) ? 'px\"' : '\"';\n          end = 'span';\n        } else if (attr === ATTR.FONT) {\n          start = 'span style=\"font-family: ' + value + '\"';\n          end = 'span';\n        } else if (attr === ATTR.COLOR) {\n          start = 'span style=\"color: ' + value + '\"';\n          end = 'span';\n        } else if (attr === ATTR.BACKGROUND_COLOR) {\n          start = 'span style=\"background-color: ' + value + '\"';\n          end = 'span';\n        }\n        else {\n          utils.log(false, \"Encountered unknown attribute while rendering html: \" + attr);\n        }\n        if (start) prefix += '<' + start + '>';\n        if (end) suffix = '</' + end + '>' + suffix;\n      }\n\n      var text = op.text;\n      var newLineIndex = text.indexOf('\\n');\n      if (newLineIndex >= 0) {\n        newLine = true;\n        if (newLineIndex < text.length - 1) {\n          // split op.\n          op = new firepad.TextOp('insert', text.substr(newLineIndex+1), attrs);\n        } else {\n          op = doc.ops[++i];\n        }\n        text = text.substr(0, newLineIndex);\n      } else {\n        op = doc.ops[++i];\n      }\n\n      // Replace leading, trailing, and consecutive spaces with nbsp's to make sure they're preserved.\n      text = text.replace(/  +/g, function(str) {\n        return new Array(str.length + 1).join('\\u00a0');\n      }).replace(/^ /, '\\u00a0').replace(/ $/, '\\u00a0');\n      if (text.length > 0) {\n        emptyLine = false;\n      }\n\n      html += prefix + textToHtml(text) + suffix;\n    }\n\n    if (inListItem) {\n      html += '</li>';\n    } else if (!firstLine) {\n      if (emptyLine) {\n        html += '&nbsp;';\n      }\n      html += '</div>';\n    }\n\n    // Close any extra lists.\n    while (listTypeStack.length > 0) {\n      html += close(listTypeStack.pop());\n    }\n\n    if (usesTodo) {\n      html = TODO_STYLE + html;\n    }\n\n    return html;\n  }\n\n  return serializeHtml;\n})();\n\nvar firepad = firepad || { };\n\n/**\n * Helper to turn pieces of text into insertable operations\n */\nfirepad.textPiecesToInserts = function(atNewLine, textPieces) {\n  var inserts = [];\n\n  function insert(string, attributes) {\n    if (string instanceof firepad.Text) {\n      attributes = string.formatting.attributes;\n      string     = string.text;\n    }\n\n    inserts.push({string: string, attributes: attributes});\n    atNewLine = string[string.length-1] === '\\n';\n  }\n\n  function insertLine(line, withNewline) {\n    // HACK: We should probably force a newline if there isn't one already.  But due to\n    // the way this is used for inserting HTML, we end up inserting a \"line\" in the middle\n    // of text, in which case we don't want to actually insert a newline.\n    if (atNewLine) {\n      insert(firepad.sentinelConstants.LINE_SENTINEL_CHARACTER, line.formatting.attributes);\n    }\n\n    for(var i = 0; i < line.textPieces.length; i++) {\n      insert(line.textPieces[i]);\n    }\n\n    if (withNewline) insert('\\n');\n  }\n\n  for(var i = 0; i < textPieces.length; i++) {\n    if (textPieces[i] instanceof firepad.Line) {\n      insertLine(textPieces[i], i<textPieces.length-1);\n    } else {\n      insert(textPieces[i]);\n    }\n  }\n\n  return inserts;\n}\n\nvar firepad = firepad || { };\n\n/**\n * Instance of headless Firepad for use in NodeJS. Supports get/set on text/html.\n */\nfirepad.Headless = (function() {\n  var TextOperation   = firepad.TextOperation;\n  var FirebaseAdapter = firepad.FirebaseAdapter;\n  var EntityManager   = firepad.EntityManager;\n  var ParseHtml       = firepad.ParseHtml;\n\n  function Headless(refOrPath) {\n    // Allow calling without new.\n    if (!(this instanceof Headless)) { return new Headless(refOrPath); }\n\n    var firebase, ref;\n    if (typeof refOrPath === 'string') {\n      if (window.firebase === undefined && typeof firebase !== 'object') {\n        console.log(\"REQUIRING\");\n        firebase = require('firebase/app');\n        require('firebase/database');\n      } else {\n        firebase = window.firebase;\n      }\n\n      ref = firebase.database().refFromURL(refOrPath);\n    } else {\n      ref = refOrPath;\n    }\n\n    this.entityManager_  = new EntityManager();\n\n    this.firebaseAdapter_ = new FirebaseAdapter(ref);\n    this.ready_ = false;\n    this.zombie_ = false;\n  }\n\n  Headless.prototype.getDocument = function(callback) {\n    var self = this;\n\n    if (self.ready_) {\n      return callback(self.firebaseAdapter_.getDocument());\n    }\n\n    self.firebaseAdapter_.on('ready', function() {\n      self.ready_ = true;\n      callback(self.firebaseAdapter_.getDocument());\n    });\n  }\n\n  Headless.prototype.getText = function(callback) {\n    if (this.zombie_) {\n      throw new Error('You can\\'t use a firepad.Headless after calling dispose()!');\n    }\n\n    this.getDocument(function(doc) {\n      var text = doc.apply('');\n\n      // Strip out any special characters from Rich Text formatting\n      for (var key in firepad.sentinelConstants) {\n        text = text.replace(new RegExp(firepad.sentinelConstants[key], 'g'), '');\n      }\n      callback(text);\n    });\n  }\n\n  Headless.prototype.setText = function(text, callback) {\n    if (this.zombie_) {\n      throw new Error('You can\\'t use a firepad.Headless after calling dispose()!');\n    }\n\n    var op = TextOperation().insert(text);\n    this.sendOperationWithRetry(op, callback);\n  }\n\n  Headless.prototype.initializeFakeDom = function(callback) {\n    if (typeof document === 'object' || typeof firepad.document === 'object') {\n      callback();\n    } else {\n      const jsdom = require('jsdom');\n      const { JSDOM } = jsdom;\n      const { window } = new JSDOM(\"<head></head><body></body>\");\n      if (firepad.document) {\n        // Return if we've already made a jsdom to avoid making more than one\n        // This would be easier with promises but we want to avoid introducing\n        // another dependency for just headless mode.\n        window.close();\n        return callback();\n      }\n      firepad.document = window.document;\n      callback();\n    }\n  }\n\n  Headless.prototype.getHtml = function(callback) {\n    var self = this;\n\n    if (this.zombie_) {\n      throw new Error('You can\\'t use a firepad.Headless after calling dispose()!');\n    }\n\n    self.initializeFakeDom(function() {\n      self.getDocument(function(doc) {\n        callback(firepad.SerializeHtml(doc, self.entityManager_));\n      });\n    });\n  }\n\n  Headless.prototype.setHtml = function(html, callback) {\n    var self = this;\n\n    if (this.zombie_) {\n      throw new Error('You can\\'t use a firepad.Headless after calling dispose()!');\n    }\n\n    self.initializeFakeDom(function() {\n      var textPieces = ParseHtml(html, self.entityManager_);\n      var inserts    = firepad.textPiecesToInserts(true, textPieces);\n      var op         = new TextOperation();\n\n      for (var i = 0; i < inserts.length; i++) {\n        op.insert(inserts[i].string, inserts[i].attributes);\n      }\n\n      self.sendOperationWithRetry(op, callback);\n    });\n  }\n\n  Headless.prototype.sendOperationWithRetry = function(operation, callback) {\n    var self = this;\n\n    self.getDocument(function(doc) {\n      var op = operation.clone()['delete'](doc.targetLength);\n      self.firebaseAdapter_.sendOperation(op, function(err, committed) {\n        if (committed) {\n          if (typeof callback !== \"undefined\") {\n            callback(null, committed);\n          }\n        } else {\n          self.sendOperationWithRetry(operation, callback);\n        }\n      });\n    });\n  }\n\n  Headless.prototype.dispose = function() {\n    this.zombie_ = true; // We've been disposed.  No longer valid to do anything.\n\n    this.firebaseAdapter_.dispose();\n  };\n\n  return Headless;\n})();\n\nvar firepad = firepad || { };\n\nfirepad.Firepad = (function(global) {\n  if (!firepad.RichTextCodeMirrorAdapter) {\n    throw new Error(\"Oops! It looks like you're trying to include lib/firepad.js directly.  This is actually one of many source files that make up firepad.  You want dist/firepad.js instead.\");\n  }\n  var RichTextCodeMirrorAdapter = firepad.RichTextCodeMirrorAdapter;\n  var RichTextCodeMirror = firepad.RichTextCodeMirror;\n  var RichTextToolbar = firepad.RichTextToolbar;\n  var ACEAdapter = firepad.ACEAdapter;\n  var MonacoAdapter = firepad.MonacoAdapter;\n  var FirebaseAdapter = firepad.FirebaseAdapter;\n  var EditorClient = firepad.EditorClient;\n  var EntityManager = firepad.EntityManager;\n  var ATTR = firepad.AttributeConstants;\n  var utils = firepad.utils;\n  var LIST_TYPE = firepad.LineFormatting.LIST_TYPE;\n  var CodeMirror = global.CodeMirror;\n  var ace = global.ace;\n  var monaco = global.monaco;\n\n  function Firepad(ref, place, options) {\n    if (!(this instanceof Firepad)) { return new Firepad(ref, place, options); }\n\n    if (!CodeMirror && !ace && !global.monaco) {\n      throw new Error('Couldn\\'t find CodeMirror, ACE or Monaco.  Did you forget to include codemirror.js/ace.js or import monaco?');\n    }\n\n    this.zombie_ = false;\n\n    if (CodeMirror && place instanceof CodeMirror) {\n      this.codeMirror_ = this.editor_ = place;\n      var curValue = this.codeMirror_.getValue();\n      if (curValue !== '') {\n        throw new Error(\"Can't initialize Firepad with a CodeMirror instance that already contains text.\");\n      }\n    } else if (ace && place && place.session instanceof ace.EditSession) {\n      this.ace_ = this.editor_ = place;\n      curValue = this.ace_.getValue();\n      if (curValue !== '') {\n        throw new Error(\"Can't initialize Firepad with an ACE instance that already contains text.\");\n      }\n    } else if (global.monaco && place && place instanceof global.monaco.constructor) {\n      monaco = global.monaco;\n      this.monaco_ = this.editor_ = place;\n      curValue = this.monaco_.getValue();\n      if (curValue !== '') {\n        throw new Error(\"Can't initialize Firepad with a Monaco instance that already contains text.\");\n      }\n    } else {\n      this.codeMirror_ = this.editor_ = new CodeMirror(place);\n    }\n\n    var editorWrapper;\n    if (this.codeMirror_) {\n      editorWrapper = this.codeMirror_.getWrapperElement();\n    } else if (this.ace_) {\n      editorWrapper = this.ace_.container;\n    } else {\n      editorWrapper = this.monaco_.getDomNode()\n    }\n\n    // var editorWrapper = this.codeMirror_ ? this.codeMirror_.getWrapperElement() : this.ace_.container;\n    this.firepadWrapper_ = utils.elt(\"div\", null, { 'class': 'firepad' });\n    editorWrapper.parentNode.replaceChild(this.firepadWrapper_, editorWrapper);\n    this.firepadWrapper_.appendChild(editorWrapper);\n\n    // Provide an easy way to get the firepad instance associated with this CodeMirror instance.\n    this.editor_.firepad = this;\n\n    this.options_ = options || { };\n\n    if (this.getOption('richTextShortcuts', false)) {\n      if (!CodeMirror.keyMap['richtext']) {\n        this.initializeKeyMap_();\n      }\n      this.codeMirror_.setOption('keyMap', 'richtext');\n      this.firepadWrapper_.className += ' firepad-richtext';\n    }\n\n    this.imageInsertionUI = this.getOption('imageInsertionUI', true);\n\n    if (this.getOption('richTextToolbar', false)) {\n      this.addToolbar_();\n      this.firepadWrapper_.className += ' firepad-richtext firepad-with-toolbar';\n    }\n\n    this.addPoweredByLogo_();\n\n    // Now that we've mucked with CodeMirror, refresh it.\n    if (this.codeMirror_)\n      this.codeMirror_.refresh();\n\n    var userId = this.getOption('userId', ref.push().key);\n    var userColor = this.getOption('userColor', colorFromUserId(userId));\n\n    this.entityManager_ = new EntityManager();\n\n    this.firebaseAdapter_ = new FirebaseAdapter(ref, userId, userColor);\n    if (this.codeMirror_) {\n      this.richTextCodeMirror_ = new RichTextCodeMirror(this.codeMirror_, this.entityManager_, { cssPrefix: 'firepad-' });\n      this.editorAdapter_ = new RichTextCodeMirrorAdapter(this.richTextCodeMirror_);\n    } else if (this.ace_) {\n      this.editorAdapter_ = new ACEAdapter(this.ace_);\n    } else {\n      this.editorAdapter_ = new MonacoAdapter(this.monaco_);\n    }\n    this.client_ = new EditorClient(this.firebaseAdapter_, this.editorAdapter_);\n\n    var self = this;\n    this.firebaseAdapter_.on('cursor', function() {\n      self.trigger.apply(self, ['cursor'].concat([].slice.call(arguments)));\n    });\n\n    if (this.codeMirror_) {\n      this.richTextCodeMirror_.on('newLine', function() {\n        self.trigger.apply(self, ['newLine'].concat([].slice.call(arguments)));\n      });\n    }\n\n    this.firebaseAdapter_.on('ready', function() {\n      self.ready_ = true;\n\n      if (this.ace_) {\n        this.editorAdapter_.grabDocumentState();\n      }\n      if (this.monaco_) {\n        this.editorAdapter_.grabDocumentState();\n      }\n\n      var defaultText = self.getOption('defaultText', null);\n      if (defaultText && self.isHistoryEmpty()) {\n        self.setText(defaultText);\n      }\n\n      self.trigger('ready');\n    });\n\n    this.client_.on('synced', function(isSynced) { self.trigger('synced', isSynced)} );\n\n    // Hack for IE8 to make font icons work more reliably.\n    // http://stackoverflow.com/questions/9809351/ie8-css-font-face-fonts-only-working-for-before-content-on-over-and-sometimes\n    if (navigator.appName == 'Microsoft Internet Explorer' && navigator.userAgent.match(/MSIE 8\\./)) {\n      window.onload = function() {\n        var head = document.getElementsByTagName('head')[0],\n          style = document.createElement('style');\n        style.type = 'text/css';\n        style.styleSheet.cssText = ':before,:after{content:none !important;}';\n        head.appendChild(style);\n        setTimeout(function() {\n          head.removeChild(style);\n        }, 0);\n      };\n    }\n  }\n  utils.makeEventEmitter(Firepad);\n\n  // For readability, these are the primary \"constructors\", even though right now they're just aliases for Firepad.\n  Firepad.fromCodeMirror = Firepad;\n  Firepad.fromACE = Firepad;\n  Firepad.fromMonaco = Firepad;\n\n\n  Firepad.prototype.dispose = function() {\n    this.zombie_ = true; // We've been disposed.  No longer valid to do anything.\n\n    // Unwrap the editor.\n    // var editorWrapper = this.codeMirror_ ? this.codeMirror_.getWrapperElement() : this.ace_.container;\n    if (this.codeMirror_) {\n        editorWrapper = this.codeMirror_.getWrapperElement();\n    } else if (this.ace_) {\n        editorWrapper = this.ace_.container;\n    } else {\n        editorWrapper = this.monaco_.getDomNode()\n    }\n\n    this.firepadWrapper_.removeChild(editorWrapper);\n    this.firepadWrapper_.parentNode.replaceChild(editorWrapper, this.firepadWrapper_);\n\n    this.editor_.firepad = null;\n\n    if (this.codeMirror_ && this.codeMirror_.getOption('keyMap') === 'richtext') {\n      this.codeMirror_.setOption('keyMap', 'default');\n    }\n\n    this.firebaseAdapter_.dispose();\n    this.editorAdapter_.detach();\n    if (this.richTextCodeMirror_)\n      this.richTextCodeMirror_.detach();\n  };\n\n  Firepad.prototype.setUserId = function(userId) {\n    this.firebaseAdapter_.setUserId(userId);\n  };\n\n  Firepad.prototype.setUserColor = function(color) {\n    this.firebaseAdapter_.setColor(color);\n  };\n\n  Firepad.prototype.getText = function() {\n    this.assertReady_('getText');\n    if (this.codeMirror_)\n      return this.richTextCodeMirror_.getText();\n    else if (this.ace_)\n      return this.ace_.getSession().getDocument().getValue();\n    else\n      return this.monaco_.getModel().getValue();\n  };\n\n  Firepad.prototype.setText = function(textPieces) {\n      this.assertReady_('setText');\n    if (this.monaco_) {\n      return this.monaco_.getModel().setValue(textPieces);\n    } else if (this.ace_) {\n      return this.ace_.getSession().getDocument().setValue(textPieces);\n    } else {\n      // HACK: Hide CodeMirror during setText to prevent lots of extra renders.\n      this.codeMirror_.getWrapperElement().style.display = \"none\";\n      this.codeMirror_.setValue(\"\");\n      this.insertText(0, textPieces);\n      this.codeMirror_.getWrapperElement().style.display = \"\";\n      this.codeMirror_.refresh();\n    }\n    this.editorAdapter_.setCursor({position: 0, selectionEnd: 0});\n  };\n\n  Firepad.prototype.insertTextAtCursor = function(textPieces) {\n    this.insertText(this.codeMirror_.indexFromPos(this.codeMirror_.getCursor()), textPieces);\n  };\n\n  Firepad.prototype.insertText = function(index, textPieces) {\n    utils.assert(!this.ace_, \"Not supported for ace yet.\");\n    utils.assert(!this.monaco_, \"Not supported for monaco yet.\");\n    this.assertReady_('insertText');\n\n    // Wrap it in an array if it's not already.\n    if(Object.prototype.toString.call(textPieces) !== '[object Array]') {\n      textPieces = [textPieces];\n    }\n\n    var self = this;\n    self.codeMirror_.operation(function() {\n      // HACK: We should check if we're actually at the beginning of a line; but checking for index == 0 is sufficient\n      // for the setText() case.\n      var atNewLine = index === 0;\n      var inserts = firepad.textPiecesToInserts(atNewLine, textPieces);\n\n      for (var i = 0; i < inserts.length; i++) {\n        var string     = inserts[i].string;\n        var attributes = inserts[i].attributes;\n        self.richTextCodeMirror_.insertText(index, string, attributes);\n        index += string.length;\n      }\n    });\n  };\n\n  Firepad.prototype.getOperationForSpan = function(start, end) {\n    var text = this.richTextCodeMirror_.getRange(start, end);\n    var spans = this.richTextCodeMirror_.getAttributeSpans(start, end);\n    var pos = 0;\n    var op = new firepad.TextOperation();\n    for(var i = 0; i < spans.length; i++) {\n      op.insert(text.substr(pos, spans[i].length), spans[i].attributes);\n      pos += spans[i].length;\n    }\n    return op;\n  };\n\n  Firepad.prototype.getHtml = function() {\n    return this.getHtmlFromRange(null, null);\n  };\n\n  Firepad.prototype.getHtmlFromSelection = function() {\n    var startPos = this.codeMirror_.getCursor('start'), endPos = this.codeMirror_.getCursor('end');\n    var startIndex = this.codeMirror_.indexFromPos(startPos), endIndex = this.codeMirror_.indexFromPos(endPos);\n    return this.getHtmlFromRange(startIndex, endIndex);\n  };\n\n  Firepad.prototype.getHtmlFromRange = function(start, end) {\n    this.assertReady_('getHtmlFromRange');\n    var doc = (start != null && end != null) ?\n      this.getOperationForSpan(start, end) :\n      this.getOperationForSpan(0, this.codeMirror_.getValue().length);\n    return firepad.SerializeHtml(doc, this.entityManager_);\n  };\n\n  Firepad.prototype.insertHtml = function (index, html) {\n    var lines = firepad.ParseHtml(html, this.entityManager_);\n    this.insertText(index, lines);\n  };\n\n  Firepad.prototype.insertHtmlAtCursor = function (html) {\n    this.insertHtml(this.codeMirror_.indexFromPos(this.codeMirror_.getCursor()), html);\n  };\n\n  Firepad.prototype.setHtml = function (html) {\n    var lines = firepad.ParseHtml(html, this.entityManager_);\n    this.setText(lines);\n  };\n\n  Firepad.prototype.isHistoryEmpty = function() {\n    this.assertReady_('isHistoryEmpty');\n    return this.firebaseAdapter_.isHistoryEmpty();\n  };\n\n  Firepad.prototype.bold = function() {\n    this.richTextCodeMirror_.toggleAttribute(ATTR.BOLD);\n    this.codeMirror_.focus();\n  };\n\n  Firepad.prototype.italic = function() {\n    this.richTextCodeMirror_.toggleAttribute(ATTR.ITALIC);\n    this.codeMirror_.focus();\n  };\n\n  Firepad.prototype.underline = function() {\n    this.richTextCodeMirror_.toggleAttribute(ATTR.UNDERLINE);\n    this.codeMirror_.focus();\n  };\n\n  Firepad.prototype.strike = function() {\n    this.richTextCodeMirror_.toggleAttribute(ATTR.STRIKE);\n    this.codeMirror_.focus();\n  };\n\n  Firepad.prototype.fontSize = function(size) {\n    this.richTextCodeMirror_.setAttribute(ATTR.FONT_SIZE, size);\n    this.codeMirror_.focus();\n  };\n\n  Firepad.prototype.font = function(font) {\n    this.richTextCodeMirror_.setAttribute(ATTR.FONT, font);\n    this.codeMirror_.focus();\n  };\n\n  Firepad.prototype.color = function(color) {\n    this.richTextCodeMirror_.setAttribute(ATTR.COLOR, color);\n    this.codeMirror_.focus();\n  };\n\n  Firepad.prototype.highlight = function() {\n    this.richTextCodeMirror_.toggleAttribute(ATTR.BACKGROUND_COLOR, 'rgba(255,255,0,.65)');\n    this.codeMirror_.focus();\n  };\n\n  Firepad.prototype.align = function(alignment) {\n    if (alignment !== 'left' && alignment !== 'center' && alignment !== 'right') {\n      throw new Error('align() must be passed \"left\", \"center\", or \"right\".');\n    }\n    this.richTextCodeMirror_.setLineAttribute(ATTR.LINE_ALIGN, alignment);\n    this.codeMirror_.focus();\n  };\n\n  Firepad.prototype.orderedList = function() {\n    this.richTextCodeMirror_.toggleLineAttribute(ATTR.LIST_TYPE, 'o');\n    this.codeMirror_.focus();\n  };\n\n  Firepad.prototype.unorderedList = function() {\n    this.richTextCodeMirror_.toggleLineAttribute(ATTR.LIST_TYPE, 'u');\n    this.codeMirror_.focus();\n  };\n\n  Firepad.prototype.todo = function() {\n    this.richTextCodeMirror_.toggleTodo();\n    this.codeMirror_.focus();\n  };\n\n  Firepad.prototype.newline = function() {\n    this.richTextCodeMirror_.newline();\n  };\n\n  Firepad.prototype.deleteLeft = function() {\n    this.richTextCodeMirror_.deleteLeft();\n  };\n\n  Firepad.prototype.deleteRight = function() {\n    this.richTextCodeMirror_.deleteRight();\n  };\n\n  Firepad.prototype.indent = function() {\n    this.richTextCodeMirror_.indent();\n    this.codeMirror_.focus();\n  };\n\n  Firepad.prototype.unindent = function() {\n    this.richTextCodeMirror_.unindent();\n    this.codeMirror_.focus();\n  };\n\n  Firepad.prototype.undo = function() {\n    this.codeMirror_.undo();\n  };\n\n  Firepad.prototype.redo = function() {\n    this.codeMirror_.redo();\n  };\n\n  Firepad.prototype.insertEntity = function(type, info, origin) {\n    this.richTextCodeMirror_.insertEntityAtCursor(type, info, origin);\n  };\n\n  Firepad.prototype.insertEntityAt = function(index, type, info, origin) {\n    this.richTextCodeMirror_.insertEntityAt(index, type, info, origin);\n  };\n\n  Firepad.prototype.registerEntity = function(type, options) {\n    this.entityManager_.register(type, options);\n  };\n\n  Firepad.prototype.getOption = function(option, def) {\n    return (option in this.options_) ? this.options_[option] : def;\n  };\n\n  Firepad.prototype.assertReady_ = function(funcName) {\n    if (!this.ready_) {\n      throw new Error('You must wait for the \"ready\" event before calling ' + funcName + '.');\n    }\n    if (this.zombie_) {\n      throw new Error('You can\\'t use a Firepad after calling dispose()!  [called ' + funcName + ']');\n    }\n  };\n\n  Firepad.prototype.makeImageDialog_ = function() {\n    this.makeDialog_('img', 'Insert image url');\n  };\n\n  Firepad.prototype.makeDialog_ = function(id, placeholder) {\n   var self = this;\n\n   var hideDialog = function() {\n     var dialog = document.getElementById('overlay');\n     dialog.style.visibility = \"hidden\";\n     self.firepadWrapper_.removeChild(dialog);\n   };\n\n   var cb = function() {\n     var dialog = document.getElementById('overlay');\n     dialog.style.visibility = \"hidden\";\n     var src = document.getElementById(id).value;\n     if (src !== null)\n       self.insertEntity(id, { 'src': src });\n     self.firepadWrapper_.removeChild(dialog);\n   };\n\n   var input = utils.elt('input', null, { 'class':'firepad-dialog-input', 'id':id, 'type':'text', 'placeholder':placeholder, 'autofocus':'autofocus' });\n\n   var submit = utils.elt('a', 'Submit', { 'class': 'firepad-btn', 'id':'submitbtn' });\n   utils.on(submit, 'click', utils.stopEventAnd(cb));\n\n   var cancel = utils.elt('a', 'Cancel', { 'class': 'firepad-btn' });\n   utils.on(cancel, 'click', utils.stopEventAnd(hideDialog));\n\n   var buttonsdiv = utils.elt('div', [submit, cancel], { 'class':'firepad-btn-group' });\n\n   var div = utils.elt('div', [input, buttonsdiv], { 'class':'firepad-dialog-div' });\n   var dialog = utils.elt('div', [div], { 'class': 'firepad-dialog', id:'overlay' });\n\n   this.firepadWrapper_.appendChild(dialog);\n  };\n\n  Firepad.prototype.addToolbar_ = function() {\n    this.toolbar = new RichTextToolbar(this.imageInsertionUI);\n\n    this.toolbar.on('undo', this.undo, this);\n    this.toolbar.on('redo', this.redo, this);\n    this.toolbar.on('bold', this.bold, this);\n    this.toolbar.on('italic', this.italic, this);\n    this.toolbar.on('underline', this.underline, this);\n    this.toolbar.on('strike', this.strike, this);\n    this.toolbar.on('font-size', this.fontSize, this);\n    this.toolbar.on('font', this.font, this);\n    this.toolbar.on('color', this.color, this);\n    this.toolbar.on('left', function() { this.align('left')}, this);\n    this.toolbar.on('center', function() { this.align('center')}, this);\n    this.toolbar.on('right', function() { this.align('right')}, this);\n    this.toolbar.on('ordered-list', this.orderedList, this);\n    this.toolbar.on('unordered-list', this.unorderedList, this);\n    this.toolbar.on('todo-list', this.todo, this);\n    this.toolbar.on('indent-increase', this.indent, this);\n    this.toolbar.on('indent-decrease', this.unindent, this);\n    this.toolbar.on('insert-image', this.makeImageDialog_, this);\n\n    this.firepadWrapper_.insertBefore(this.toolbar.element(), this.firepadWrapper_.firstChild);\n  };\n\n  Firepad.prototype.addPoweredByLogo_ = function() {\n    var poweredBy = utils.elt('a', null, { 'class': 'powered-by-firepad'} );\n    poweredBy.setAttribute('href', 'http://www.firepad.io/');\n    poweredBy.setAttribute('target', '_blank');\n    this.firepadWrapper_.appendChild(poweredBy)\n  };\n\n  Firepad.prototype.initializeKeyMap_ = function() {\n    function binder(fn) {\n      return function(cm) {\n        // HACK: CodeMirror will often call our key handlers within a cm.operation(), and that\n        // can mess us up (we rely on events being triggered synchronously when we make CodeMirror\n        // edits).  So to escape any cm.operation(), we do a setTimeout.\n        setTimeout(function() {\n          fn.call(cm.firepad);\n        }, 0);\n      }\n    }\n\n    CodeMirror.keyMap[\"richtext\"] = {\n      \"Ctrl-B\": binder(this.bold),\n      \"Cmd-B\": binder(this.bold),\n      \"Ctrl-I\": binder(this.italic),\n      \"Cmd-I\": binder(this.italic),\n      \"Ctrl-U\": binder(this.underline),\n      \"Cmd-U\": binder(this.underline),\n      \"Ctrl-H\": binder(this.highlight),\n      \"Cmd-H\": binder(this.highlight),\n      \"Enter\": binder(this.newline),\n      \"Delete\": binder(this.deleteRight),\n      \"Backspace\": binder(this.deleteLeft),\n      \"Tab\": binder(this.indent),\n      \"Shift-Tab\": binder(this.unindent),\n      fallthrough: ['default']\n    };\n  };\n\n  function colorFromUserId (userId) {\n    var a = 1;\n    for (var i = 0; i < userId.length; i++) {\n      a = 17 * (a+userId.charCodeAt(i)) % 360;\n    }\n    var hue = a/360;\n\n    return hsl2hex(hue, 1, 0.75);\n  }\n\n  function rgb2hex (r, g, b) {\n    function digits (n) {\n      var m = Math.round(255*n).toString(16);\n      return m.length === 1 ? '0'+m : m;\n    }\n    return '#' + digits(r) + digits(g) + digits(b);\n  }\n\n  function hsl2hex (h, s, l) {\n    if (s === 0) { return rgb2hex(l, l, l); }\n    var var2 = l < 0.5 ? l * (1+s) : (l+s) - (s*l);\n    var var1 = 2 * l - var2;\n    var hue2rgb = function (hue) {\n      if (hue < 0) { hue += 1; }\n      if (hue > 1) { hue -= 1; }\n      if (6*hue < 1) { return var1 + (var2-var1)*6*hue; }\n      if (2*hue < 1) { return var2; }\n      if (3*hue < 2) { return var1 + (var2-var1)*6*(2/3 - hue); }\n      return var1;\n    };\n    return rgb2hex(hue2rgb(h+1/3), hue2rgb(h), hue2rgb(h-1/3));\n  }\n\n  return Firepad;\n})(this);\n\n// Export Text classes\nfirepad.Firepad.Formatting = firepad.Formatting;\nfirepad.Firepad.Text = firepad.Text;\nfirepad.Firepad.Entity = firepad.Entity;\nfirepad.Firepad.LineFormatting = firepad.LineFormatting;\nfirepad.Firepad.Line = firepad.Line;\nfirepad.Firepad.TextOperation = firepad.TextOperation;\nfirepad.Firepad.Headless = firepad.Headless;\n\n// Export adapters\nfirepad.Firepad.RichTextCodeMirrorAdapter = firepad.RichTextCodeMirrorAdapter;\nfirepad.Firepad.ACEAdapter = firepad.ACEAdapter;\nfirepad.Firepad.MonacoAdapter = firepad.MonacoAdapter;\n\nreturn firepad.Firepad; }, this);"]},"metadata":{},"sourceType":"script"}